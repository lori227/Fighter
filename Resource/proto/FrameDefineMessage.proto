syntax = "proto3";
//option optimize_for = LITE_RUNTIME;

package KFMsg;
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
message PBObject
{
	// int32 属性列表
	map< string, sint32 > pbint32 = 1;		
	
	// uint32 属性列表
	map< string, uint32 > pbuint32 = 2;	

	// int64 属性列表
	map< string, sint64 > pbint64 = 3;	

	// uint64 属性列表
	map< string, uint64 > pbuint64 = 4;	

	// double 属性列表
	map< string, double > pbdouble = 5;	

	// string 属性列表
	map< string, bytes > pbstring = 6;	

	// 数组列表
	map< string, PBArray > pbarray = 7;	

	// 对象列表
	map< string, PBObject > pbobject = 8;	

	// 集合列表
	map< string, PBRecord > pbrecord = 9;	
}

// 游戏中只存在uint64的数值
message PBArray
{
	map<uint32, int64> pbuint64 = 1;	
}

message PBRecord
{
	// 对象列表
	map< uint64, PBObject > pbobject = 1;	
}
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// 登录信息
message PBLoginData
{
	// token
	bytes token = 1;

	// 服务器id				
	uint64 gateid = 2;	
	
	// sessionid
	uint64 sessionid = 3;		
	
	// 渠道id
	uint32 channel = 4;		
	
	// 账号
	bytes account = 5;	
	
	// 账号id
	uint64 accountid = 6;	
	
	// 角色id
	uint64 playerid = 7;			
	
	// 渠道数据	
	map<string, bytes> channeldata = 8;	

	// 是否宕机登录
	bool loginbycrash = 9;

	// 登录ip
	bytes ip = 10;

	// 登录小区
	uint32 zoneid = 11;
}

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// 纪录数据
message PBValues
{
	// uint64 属性列表
	map< string, uint64 > pbuint64 = 1;	

	// string 属性列表
	map< string, bytes > pbstring = 2;	
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 奖励显示信息
message PBShowData
{
	bytes name = 1;		// 属性名
	uint64 value = 2;	// 属性值
	map< string, uint64 > pbuint64 = 3;		// 属性值列表
}

message PBShowElement
{
	bytes modulename = 1;				// 模块名称
	uint64 moduleid = 2;				// 模块id
	repeated PBShowData pbdata = 3;		// 显示列表
}

message PBShowElements
{
	repeated PBShowElement element = 1;	// 奖励数据
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 小红点信息
message PBNotice
{
	uint32 type = 1;	// 类型
	uint32 count = 2;	// 数量
}
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
message PBRankData
{
	uint32 rankindex = 1;				// 从1开始
	uint64 playerid = 2;				// 玩家id
	uint64 rankscore = 3;				// 排行的数据( 客户端好友排行根据这个排序 )
	map< string, bytes > pbdata = 4;	// 排行榜数据
	map< string, bytes > pbplayer = 5;	// 玩家数据
}

message PBRankDatas
{
	repeated PBRankData rankdata = 1;	// 排行榜列表
}
