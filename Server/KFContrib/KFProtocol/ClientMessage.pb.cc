// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ClientMessage.proto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4125)
	#pragma warning(disable : 4668)
	#pragma warning(disable : 4800)
	#pragma warning(disable : 4647)
#endif

#include "ClientMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_DefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DefineMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBMatchPlayer;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_DefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBMatchRoom;
}  // namespace protobuf_DefineMessage_2eproto
namespace KFMsg {
class MsgFighterHeroReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgFighterHeroReq>
      _instance;
} _MsgFighterHeroReq_default_instance_;
class MsgEffectUseReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgEffectUseReq>
      _instance;
} _MsgEffectUseReq_default_instance_;
class MsgFootUseReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgFootUseReq>
      _instance;
} _MsgFootUseReq_default_instance_;
class MsgStartMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgStartMatchReq>
      _instance;
} _MsgStartMatchReq_default_instance_;
class MsgCancelMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgCancelMatchReq>
      _instance;
} _MsgCancelMatchReq_default_instance_;
class MsgInformBattleReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgInformBattleReq>
      _instance;
} _MsgInformBattleReq_default_instance_;
class MsgInformBattleAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgInformBattleAck>
      _instance;
} _MsgInformBattleAck_default_instance_;
class MsgFinishRoomReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgFinishRoomReq>
      _instance;
} _MsgFinishRoomReq_default_instance_;
class MsgTellMatchCountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgTellMatchCount>
      _instance;
} _MsgTellMatchCount_default_instance_;
class MsgCreateMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgCreateMatchReq>
      _instance;
} _MsgCreateMatchReq_default_instance_;
class MsgJoinMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgJoinMatchReq>
      _instance;
} _MsgJoinMatchReq_default_instance_;
class MsgJoinMatchAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgJoinMatchAck>
      _instance;
} _MsgJoinMatchAck_default_instance_;
class MsgAddMatchPlayerAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgAddMatchPlayerAck>
      _instance;
} _MsgAddMatchPlayerAck_default_instance_;
class MsgQueryMatchListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgQueryMatchListReq>
      _instance;
} _MsgQueryMatchListReq_default_instance_;
class MsgQueryMatchListAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgQueryMatchListAck>
      _instance;
} _MsgQueryMatchListAck_default_instance_;
class MsgKickMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgKickMatchReq>
      _instance;
} _MsgKickMatchReq_default_instance_;
class MsgLeaveMatchAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgLeaveMatchAck>
      _instance;
} _MsgLeaveMatchAck_default_instance_;
class MsgChangeMatchMasterAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgChangeMatchMasterAck>
      _instance;
} _MsgChangeMatchMasterAck_default_instance_;
class MsgFightMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgFightMatchReq>
      _instance;
} _MsgFightMatchReq_default_instance_;
class MsgPrePareMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgPrePareMatchReq>
      _instance;
} _MsgPrePareMatchReq_default_instance_;
class MsgPrePareMatchAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgPrePareMatchAck>
      _instance;
} _MsgPrePareMatchAck_default_instance_;
class MsgInviteMatchReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgInviteMatchReq>
      _instance;
} _MsgInviteMatchReq_default_instance_;
class MsgInviteMatchAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgInviteMatchAck>
      _instance;
} _MsgInviteMatchAck_default_instance_;
class MsgUpdateScoreReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<MsgUpdateScoreReq>
      _instance;
} _MsgUpdateScoreReq_default_instance_;
}  // namespace KFMsg
namespace protobuf_ClientMessage_2eproto {
static void InitDefaultsMsgFighterHeroReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgFighterHeroReq_default_instance_;
    new (ptr) ::KFMsg::MsgFighterHeroReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgFighterHeroReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgFighterHeroReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgFighterHeroReq}, {}};

static void InitDefaultsMsgEffectUseReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgEffectUseReq_default_instance_;
    new (ptr) ::KFMsg::MsgEffectUseReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgEffectUseReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgEffectUseReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgEffectUseReq}, {}};

static void InitDefaultsMsgFootUseReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgFootUseReq_default_instance_;
    new (ptr) ::KFMsg::MsgFootUseReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgFootUseReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgFootUseReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgFootUseReq}, {}};

static void InitDefaultsMsgStartMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgStartMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgStartMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgStartMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgStartMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgStartMatchReq}, {}};

static void InitDefaultsMsgCancelMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgCancelMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgCancelMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgCancelMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgCancelMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgCancelMatchReq}, {}};

static void InitDefaultsMsgInformBattleReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgInformBattleReq_default_instance_;
    new (ptr) ::KFMsg::MsgInformBattleReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgInformBattleReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgInformBattleReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgInformBattleReq}, {}};

static void InitDefaultsMsgInformBattleAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgInformBattleAck_default_instance_;
    new (ptr) ::KFMsg::MsgInformBattleAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgInformBattleAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgInformBattleAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgInformBattleAck}, {}};

static void InitDefaultsMsgFinishRoomReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgFinishRoomReq_default_instance_;
    new (ptr) ::KFMsg::MsgFinishRoomReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgFinishRoomReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgFinishRoomReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgFinishRoomReq}, {}};

static void InitDefaultsMsgTellMatchCount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgTellMatchCount_default_instance_;
    new (ptr) ::KFMsg::MsgTellMatchCount();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgTellMatchCount::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgTellMatchCount =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgTellMatchCount}, {}};

static void InitDefaultsMsgCreateMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgCreateMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgCreateMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgCreateMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgCreateMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgCreateMatchReq}, {}};

static void InitDefaultsMsgJoinMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgJoinMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgJoinMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgJoinMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgJoinMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgJoinMatchReq}, {}};

static void InitDefaultsMsgJoinMatchAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgJoinMatchAck_default_instance_;
    new (ptr) ::KFMsg::MsgJoinMatchAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgJoinMatchAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_MsgJoinMatchAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgJoinMatchAck}, {
      &protobuf_DefineMessage_2eproto::scc_info_PBMatchRoom.base,}};

static void InitDefaultsMsgAddMatchPlayerAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgAddMatchPlayerAck_default_instance_;
    new (ptr) ::KFMsg::MsgAddMatchPlayerAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgAddMatchPlayerAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_MsgAddMatchPlayerAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgAddMatchPlayerAck}, {
      &protobuf_DefineMessage_2eproto::scc_info_PBMatchPlayer.base,}};

static void InitDefaultsMsgQueryMatchListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgQueryMatchListReq_default_instance_;
    new (ptr) ::KFMsg::MsgQueryMatchListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgQueryMatchListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgQueryMatchListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgQueryMatchListReq}, {}};

static void InitDefaultsMsgQueryMatchListAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgQueryMatchListAck_default_instance_;
    new (ptr) ::KFMsg::MsgQueryMatchListAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgQueryMatchListAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_MsgQueryMatchListAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgQueryMatchListAck}, {
      &protobuf_DefineMessage_2eproto::scc_info_PBMatchRoom.base,}};

static void InitDefaultsMsgKickMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgKickMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgKickMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgKickMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgKickMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgKickMatchReq}, {}};

static void InitDefaultsMsgLeaveMatchAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgLeaveMatchAck_default_instance_;
    new (ptr) ::KFMsg::MsgLeaveMatchAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgLeaveMatchAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgLeaveMatchAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgLeaveMatchAck}, {}};

static void InitDefaultsMsgChangeMatchMasterAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgChangeMatchMasterAck_default_instance_;
    new (ptr) ::KFMsg::MsgChangeMatchMasterAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgChangeMatchMasterAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgChangeMatchMasterAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgChangeMatchMasterAck}, {}};

static void InitDefaultsMsgFightMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgFightMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgFightMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgFightMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgFightMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgFightMatchReq}, {}};

static void InitDefaultsMsgPrePareMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgPrePareMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgPrePareMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgPrePareMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgPrePareMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgPrePareMatchReq}, {}};

static void InitDefaultsMsgPrePareMatchAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgPrePareMatchAck_default_instance_;
    new (ptr) ::KFMsg::MsgPrePareMatchAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgPrePareMatchAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgPrePareMatchAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgPrePareMatchAck}, {}};

static void InitDefaultsMsgInviteMatchReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgInviteMatchReq_default_instance_;
    new (ptr) ::KFMsg::MsgInviteMatchReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgInviteMatchReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgInviteMatchReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgInviteMatchReq}, {}};

static void InitDefaultsMsgInviteMatchAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgInviteMatchAck_default_instance_;
    new (ptr) ::KFMsg::MsgInviteMatchAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgInviteMatchAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_MsgInviteMatchAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsMsgInviteMatchAck}, {
      &protobuf_DefineMessage_2eproto::scc_info_PBMatchRoom.base,}};

static void InitDefaultsMsgUpdateScoreReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_MsgUpdateScoreReq_default_instance_;
    new (ptr) ::KFMsg::MsgUpdateScoreReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::MsgUpdateScoreReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_MsgUpdateScoreReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsMsgUpdateScoreReq}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_MsgFighterHeroReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgEffectUseReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgFootUseReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgStartMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgCancelMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgInformBattleReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgInformBattleAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgFinishRoomReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgTellMatchCount.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgCreateMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgJoinMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgJoinMatchAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgAddMatchPlayerAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgQueryMatchListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgQueryMatchListAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgKickMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgLeaveMatchAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgChangeMatchMasterAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgFightMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgPrePareMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgPrePareMatchAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgInviteMatchReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgInviteMatchAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_MsgUpdateScoreReq.base);
}

::google::protobuf::Metadata file_level_metadata[24];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFighterHeroReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFighterHeroReq, heroid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgEffectUseReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgEffectUseReq, effectid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFootUseReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFootUseReq, footid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgStartMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgStartMatchReq, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgStartMatchReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgStartMatchReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCancelMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCancelMatchReq, matchid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, battleid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleReq, port_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInformBattleAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFinishRoomReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFinishRoomReq, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgTellMatchCount, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgTellMatchCount, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCreateMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCreateMatchReq, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCreateMatchReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCreateMatchReq, serverid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCreateMatchReq, title_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCreateMatchReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgCreateMatchReq, addrobot_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgJoinMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgJoinMatchReq, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgJoinMatchReq, roomid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgJoinMatchReq, password_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgJoinMatchReq, matchid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgJoinMatchAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgJoinMatchAck, pbroom_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgAddMatchPlayerAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgAddMatchPlayerAck, pbplayer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgQueryMatchListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgQueryMatchListReq, matchid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgQueryMatchListReq, version_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgQueryMatchListReq, roomid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgQueryMatchListAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgQueryMatchListAck, pbroom_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgKickMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgKickMatchReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgLeaveMatchAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgLeaveMatchAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgLeaveMatchAck, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgChangeMatchMasterAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgChangeMatchMasterAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgChangeMatchMasterAck, name_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgFightMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgPrePareMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgPrePareMatchReq, prepare_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgPrePareMatchAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgPrePareMatchAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgPrePareMatchAck, prepare_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInviteMatchReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInviteMatchReq, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInviteMatchReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInviteMatchAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInviteMatchAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgInviteMatchAck, pbroom_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgUpdateScoreReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgUpdateScoreReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::MsgUpdateScoreReq, socre_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KFMsg::MsgFighterHeroReq)},
  { 6, -1, sizeof(::KFMsg::MsgEffectUseReq)},
  { 12, -1, sizeof(::KFMsg::MsgFootUseReq)},
  { 18, -1, sizeof(::KFMsg::MsgStartMatchReq)},
  { 26, -1, sizeof(::KFMsg::MsgCancelMatchReq)},
  { 32, -1, sizeof(::KFMsg::MsgInformBattleReq)},
  { 41, -1, sizeof(::KFMsg::MsgInformBattleAck)},
  { 46, -1, sizeof(::KFMsg::MsgFinishRoomReq)},
  { 52, -1, sizeof(::KFMsg::MsgTellMatchCount)},
  { 58, -1, sizeof(::KFMsg::MsgCreateMatchReq)},
  { 69, -1, sizeof(::KFMsg::MsgJoinMatchReq)},
  { 78, -1, sizeof(::KFMsg::MsgJoinMatchAck)},
  { 84, -1, sizeof(::KFMsg::MsgAddMatchPlayerAck)},
  { 90, -1, sizeof(::KFMsg::MsgQueryMatchListReq)},
  { 98, -1, sizeof(::KFMsg::MsgQueryMatchListAck)},
  { 104, -1, sizeof(::KFMsg::MsgKickMatchReq)},
  { 110, -1, sizeof(::KFMsg::MsgLeaveMatchAck)},
  { 117, -1, sizeof(::KFMsg::MsgChangeMatchMasterAck)},
  { 124, -1, sizeof(::KFMsg::MsgFightMatchReq)},
  { 129, -1, sizeof(::KFMsg::MsgPrePareMatchReq)},
  { 135, -1, sizeof(::KFMsg::MsgPrePareMatchAck)},
  { 142, -1, sizeof(::KFMsg::MsgInviteMatchReq)},
  { 149, -1, sizeof(::KFMsg::MsgInviteMatchAck)},
  { 156, -1, sizeof(::KFMsg::MsgUpdateScoreReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgFighterHeroReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgEffectUseReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgFootUseReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgStartMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgCancelMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgInformBattleReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgInformBattleAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgFinishRoomReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgTellMatchCount_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgCreateMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgJoinMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgJoinMatchAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgAddMatchPlayerAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgQueryMatchListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgQueryMatchListAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgKickMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgLeaveMatchAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgChangeMatchMasterAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgFightMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgPrePareMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgPrePareMatchAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgInviteMatchReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgInviteMatchAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_MsgUpdateScoreReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "ClientMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 24);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\023ClientMessage.proto\022\005KFMsg\032\023DefineMess"
      "age.proto\032\030FrameDefineMessage.proto\"#\n\021M"
      "sgFighterHeroReq\022\016\n\006heroid\030\001 \001(\r\"#\n\017MsgE"
      "ffectUseReq\022\020\n\010effectid\030\001 \001(\r\"\037\n\rMsgFoot"
      "UseReq\022\016\n\006footid\030\001 \001(\r\"F\n\020MsgStartMatchR"
      "eq\022\017\n\007version\030\001 \001(\014\022\017\n\007matchid\030\002 \001(\r\022\020\n\010"
      "serverid\030\003 \001(\004\"$\n\021MsgCancelMatchReq\022\017\n\007m"
      "atchid\030\001 \001(\r\"P\n\022MsgInformBattleReq\022\016\n\006ro"
      "omid\030\001 \001(\004\022\020\n\010battleid\030\002 \001(\004\022\n\n\002ip\030\003 \001(\014"
      "\022\014\n\004port\030\004 \001(\r\"\024\n\022MsgInformBattleAck\"\"\n\020"
      "MsgFinishRoomReq\022\016\n\006roomid\030\001 \001(\004\"\"\n\021MsgT"
      "ellMatchCount\022\r\n\005count\030\001 \001(\r\"z\n\021MsgCreat"
      "eMatchReq\022\017\n\007version\030\001 \001(\014\022\017\n\007matchid\030\002 "
      "\001(\r\022\020\n\010serverid\030\003 \001(\004\022\r\n\005title\030\004 \001(\014\022\020\n\010"
      "password\030\005 \001(\014\022\020\n\010addrobot\030\006 \001(\010\"U\n\017MsgJ"
      "oinMatchReq\022\017\n\007version\030\001 \001(\014\022\016\n\006roomid\030\002"
      " \001(\004\022\020\n\010password\030\003 \001(\014\022\017\n\007matchid\030\004 \001(\r\""
      "5\n\017MsgJoinMatchAck\022\"\n\006pbroom\030\001 \001(\0132\022.KFM"
      "sg.PBMatchRoom\">\n\024MsgAddMatchPlayerAck\022&"
      "\n\010pbplayer\030\001 \001(\0132\024.KFMsg.PBMatchPlayer\"H"
      "\n\024MsgQueryMatchListReq\022\017\n\007matchid\030\001 \001(\r\022"
      "\017\n\007version\030\002 \001(\014\022\016\n\006roomid\030\003 \001(\004\":\n\024MsgQ"
      "ueryMatchListAck\022\"\n\006pbroom\030\001 \003(\0132\022.KFMsg"
      ".PBMatchRoom\"#\n\017MsgKickMatchReq\022\020\n\010playe"
      "rid\030\001 \001(\004\"2\n\020MsgLeaveMatchAck\022\020\n\010playeri"
      "d\030\001 \001(\004\022\014\n\004type\030\002 \001(\r\"9\n\027MsgChangeMatchM"
      "asterAck\022\020\n\010playerid\030\001 \001(\004\022\014\n\004name\030\002 \001(\014"
      "\"\022\n\020MsgFightMatchReq\"%\n\022MsgPrePareMatchR"
      "eq\022\017\n\007prepare\030\001 \001(\010\"7\n\022MsgPrePareMatchAc"
      "k\022\020\n\010playerid\030\001 \001(\004\022\017\n\007prepare\030\002 \001(\010\";\n\021"
      "MsgInviteMatchReq\022\024\n\014relationname\030\001 \001(\014\022"
      "\020\n\010playerid\030\002 \001(\004\"I\n\021MsgInviteMatchAck\022\020"
      "\n\010playerid\030\001 \001(\004\022\"\n\006pbroom\030\002 \001(\0132\022.KFMsg"
      ".PBMatchRoom\".\n\021MsgUpdateScoreReq\022\n\n\002id\030"
      "\001 \001(\r\022\r\n\005socre\030\002 \001(\004*\320\005\n\016ClientProtocol\022"
      "\024\n\020MSG_CLIENT_BEGIN\020\000\022\031\n\024MSG_FIGHTER_HER"
      "O_REQ\020\271\027\022\027\n\022MSG_EFFECT_USE_REQ\020\272\027\022\025\n\020MSG"
      "_FOOT_USE_REQ\020\273\027\022\030\n\023MSG_START_MATCH_REQ\020"
      "\235\030\022\031\n\024MSG_CANCEL_MATCH_REQ\020\236\030\022\032\n\025MSG_INF"
      "ORM_BATTLE_REQ\020\237\030\022\032\n\025MSG_INFORM_BATTLE_A"
      "CK\020\240\030\022\030\n\023MSG_FINISH_ROOM_REQ\020\241\030\022\031\n\024MSG_T"
      "ELL_MATCH_COUNT\020\242\030\022\031\n\024MSG_CREATE_MATCH_R"
      "EQ\020\243\030\022\031\n\024MSG_CREATE_MATCH_ACK\020\244\030\022\027\n\022MSG_"
      "JOIN_MATCH_REQ\020\245\030\022\027\n\022MSG_JOIN_MATCH_ACK\020"
      "\246\030\022\035\n\030MSG_ADD_MATCH_PLAYER_ACK\020\247\030\022\035\n\030MSG"
      "_QUERY_MATCH_LIST_REQ\020\251\030\022\035\n\030MSG_QUERY_MA"
      "TCH_LIST_ACK\020\252\030\022\027\n\022MSG_KICK_MATCH_REQ\020\253\030"
      "\022\030\n\023MSG_LEAVE_MATCH_ACK\020\254\030\022 \n\033MSG_CHANGE"
      "_MATCH_MASTER_ACK\020\255\030\022\030\n\023MSG_FIGHT_MATCH_"
      "REQ\020\256\030\022\032\n\025MSG_PREPARE_MATCH_REQ\020\257\030\022\032\n\025MS"
      "G_PREPATE_MATCH_ACK\020\260\030\022\031\n\024MSG_INVITE_MAT"
      "CH_REQ\020\261\030\022\031\n\024MSG_INVITE_MATCH_ACK\020\262\030\022\031\n\024"
      "MSG_UPDATE_SOCRE_REQ\020\200\031b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2111);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "ClientMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_DefineMessage_2eproto::AddDescriptors();
  ::protobuf_FrameDefineMessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_ClientMessage_2eproto
namespace KFMsg {
const ::google::protobuf::EnumDescriptor* ClientProtocol_descriptor() {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_ClientMessage_2eproto::file_level_enum_descriptors[0];
}
bool ClientProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 3001:
    case 3002:
    case 3003:
    case 3101:
    case 3102:
    case 3103:
    case 3104:
    case 3105:
    case 3106:
    case 3107:
    case 3108:
    case 3109:
    case 3110:
    case 3111:
    case 3113:
    case 3114:
    case 3115:
    case 3116:
    case 3117:
    case 3118:
    case 3119:
    case 3120:
    case 3121:
    case 3122:
    case 3200:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void MsgFighterHeroReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgFighterHeroReq::kHeroidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgFighterHeroReq::MsgFighterHeroReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgFighterHeroReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgFighterHeroReq)
}
MsgFighterHeroReq::MsgFighterHeroReq(const MsgFighterHeroReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  heroid_ = from.heroid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgFighterHeroReq)
}

void MsgFighterHeroReq::SharedCtor() {
  heroid_ = 0u;
}

MsgFighterHeroReq::~MsgFighterHeroReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgFighterHeroReq)
  SharedDtor();
}

void MsgFighterHeroReq::SharedDtor() {
}

void MsgFighterHeroReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgFighterHeroReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgFighterHeroReq& MsgFighterHeroReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgFighterHeroReq.base);
  return *internal_default_instance();
}


void MsgFighterHeroReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgFighterHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  heroid_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgFighterHeroReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgFighterHeroReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 heroid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &heroid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgFighterHeroReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgFighterHeroReq)
  return false;
#undef DO_
}

void MsgFighterHeroReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgFighterHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 heroid = 1;
  if (this->heroid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->heroid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgFighterHeroReq)
}

::google::protobuf::uint8* MsgFighterHeroReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgFighterHeroReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 heroid = 1;
  if (this->heroid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->heroid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgFighterHeroReq)
  return target;
}

size_t MsgFighterHeroReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgFighterHeroReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 heroid = 1;
  if (this->heroid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->heroid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgFighterHeroReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgFighterHeroReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgFighterHeroReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgFighterHeroReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgFighterHeroReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgFighterHeroReq)
    MergeFrom(*source);
  }
}

void MsgFighterHeroReq::MergeFrom(const MsgFighterHeroReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgFighterHeroReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.heroid() != 0) {
    set_heroid(from.heroid());
  }
}

void MsgFighterHeroReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgFighterHeroReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFighterHeroReq::CopyFrom(const MsgFighterHeroReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgFighterHeroReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFighterHeroReq::IsInitialized() const {
  return true;
}

void MsgFighterHeroReq::Swap(MsgFighterHeroReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgFighterHeroReq::InternalSwap(MsgFighterHeroReq* other) {
  using std::swap;
  swap(heroid_, other->heroid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgFighterHeroReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgEffectUseReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgEffectUseReq::kEffectidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgEffectUseReq::MsgEffectUseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgEffectUseReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgEffectUseReq)
}
MsgEffectUseReq::MsgEffectUseReq(const MsgEffectUseReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  effectid_ = from.effectid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgEffectUseReq)
}

void MsgEffectUseReq::SharedCtor() {
  effectid_ = 0u;
}

MsgEffectUseReq::~MsgEffectUseReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgEffectUseReq)
  SharedDtor();
}

void MsgEffectUseReq::SharedDtor() {
}

void MsgEffectUseReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgEffectUseReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgEffectUseReq& MsgEffectUseReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgEffectUseReq.base);
  return *internal_default_instance();
}


void MsgEffectUseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgEffectUseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  effectid_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgEffectUseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgEffectUseReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 effectid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &effectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgEffectUseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgEffectUseReq)
  return false;
#undef DO_
}

void MsgEffectUseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgEffectUseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 effectid = 1;
  if (this->effectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->effectid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgEffectUseReq)
}

::google::protobuf::uint8* MsgEffectUseReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgEffectUseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 effectid = 1;
  if (this->effectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->effectid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgEffectUseReq)
  return target;
}

size_t MsgEffectUseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgEffectUseReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 effectid = 1;
  if (this->effectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->effectid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgEffectUseReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgEffectUseReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgEffectUseReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgEffectUseReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgEffectUseReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgEffectUseReq)
    MergeFrom(*source);
  }
}

void MsgEffectUseReq::MergeFrom(const MsgEffectUseReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgEffectUseReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.effectid() != 0) {
    set_effectid(from.effectid());
  }
}

void MsgEffectUseReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgEffectUseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgEffectUseReq::CopyFrom(const MsgEffectUseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgEffectUseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgEffectUseReq::IsInitialized() const {
  return true;
}

void MsgEffectUseReq::Swap(MsgEffectUseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgEffectUseReq::InternalSwap(MsgEffectUseReq* other) {
  using std::swap;
  swap(effectid_, other->effectid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgEffectUseReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgFootUseReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgFootUseReq::kFootidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgFootUseReq::MsgFootUseReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgFootUseReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgFootUseReq)
}
MsgFootUseReq::MsgFootUseReq(const MsgFootUseReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  footid_ = from.footid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgFootUseReq)
}

void MsgFootUseReq::SharedCtor() {
  footid_ = 0u;
}

MsgFootUseReq::~MsgFootUseReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgFootUseReq)
  SharedDtor();
}

void MsgFootUseReq::SharedDtor() {
}

void MsgFootUseReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgFootUseReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgFootUseReq& MsgFootUseReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgFootUseReq.base);
  return *internal_default_instance();
}


void MsgFootUseReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgFootUseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  footid_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgFootUseReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgFootUseReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 footid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &footid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgFootUseReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgFootUseReq)
  return false;
#undef DO_
}

void MsgFootUseReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgFootUseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 footid = 1;
  if (this->footid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->footid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgFootUseReq)
}

::google::protobuf::uint8* MsgFootUseReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgFootUseReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 footid = 1;
  if (this->footid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->footid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgFootUseReq)
  return target;
}

size_t MsgFootUseReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgFootUseReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 footid = 1;
  if (this->footid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->footid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgFootUseReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgFootUseReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgFootUseReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgFootUseReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgFootUseReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgFootUseReq)
    MergeFrom(*source);
  }
}

void MsgFootUseReq::MergeFrom(const MsgFootUseReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgFootUseReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.footid() != 0) {
    set_footid(from.footid());
  }
}

void MsgFootUseReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgFootUseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFootUseReq::CopyFrom(const MsgFootUseReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgFootUseReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFootUseReq::IsInitialized() const {
  return true;
}

void MsgFootUseReq::Swap(MsgFootUseReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgFootUseReq::InternalSwap(MsgFootUseReq* other) {
  using std::swap;
  swap(footid_, other->footid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgFootUseReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgStartMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgStartMatchReq::kVersionFieldNumber;
const int MsgStartMatchReq::kMatchidFieldNumber;
const int MsgStartMatchReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgStartMatchReq::MsgStartMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgStartMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgStartMatchReq)
}
MsgStartMatchReq::MsgStartMatchReq(const MsgStartMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchid_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(matchid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgStartMatchReq)
}

void MsgStartMatchReq::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(matchid_));
}

MsgStartMatchReq::~MsgStartMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgStartMatchReq)
  SharedDtor();
}

void MsgStartMatchReq::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgStartMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgStartMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgStartMatchReq& MsgStartMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgStartMatchReq.base);
  return *internal_default_instance();
}


void MsgStartMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgStartMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(matchid_));
  _internal_metadata_.Clear();
}

bool MsgStartMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgStartMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgStartMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgStartMatchReq)
  return false;
#undef DO_
}

void MsgStartMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgStartMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->version(), output);
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->matchid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgStartMatchReq)
}

::google::protobuf::uint8* MsgStartMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgStartMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes version = 1;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->version(), target);
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->matchid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgStartMatchReq)
  return target;
}

size_t MsgStartMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgStartMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgStartMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgStartMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgStartMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgStartMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgStartMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgStartMatchReq)
    MergeFrom(*source);
  }
}

void MsgStartMatchReq::MergeFrom(const MsgStartMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgStartMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void MsgStartMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgStartMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgStartMatchReq::CopyFrom(const MsgStartMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgStartMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgStartMatchReq::IsInitialized() const {
  return true;
}

void MsgStartMatchReq::Swap(MsgStartMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgStartMatchReq::InternalSwap(MsgStartMatchReq* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverid_, other->serverid_);
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgStartMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgCancelMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgCancelMatchReq::kMatchidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgCancelMatchReq::MsgCancelMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgCancelMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgCancelMatchReq)
}
MsgCancelMatchReq::MsgCancelMatchReq(const MsgCancelMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  matchid_ = from.matchid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgCancelMatchReq)
}

void MsgCancelMatchReq::SharedCtor() {
  matchid_ = 0u;
}

MsgCancelMatchReq::~MsgCancelMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgCancelMatchReq)
  SharedDtor();
}

void MsgCancelMatchReq::SharedDtor() {
}

void MsgCancelMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgCancelMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgCancelMatchReq& MsgCancelMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgCancelMatchReq.base);
  return *internal_default_instance();
}


void MsgCancelMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgCancelMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  matchid_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgCancelMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgCancelMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgCancelMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgCancelMatchReq)
  return false;
#undef DO_
}

void MsgCancelMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgCancelMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgCancelMatchReq)
}

::google::protobuf::uint8* MsgCancelMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgCancelMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgCancelMatchReq)
  return target;
}

size_t MsgCancelMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgCancelMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgCancelMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgCancelMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgCancelMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgCancelMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgCancelMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgCancelMatchReq)
    MergeFrom(*source);
  }
}

void MsgCancelMatchReq::MergeFrom(const MsgCancelMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgCancelMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void MsgCancelMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgCancelMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCancelMatchReq::CopyFrom(const MsgCancelMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgCancelMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCancelMatchReq::IsInitialized() const {
  return true;
}

void MsgCancelMatchReq::Swap(MsgCancelMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgCancelMatchReq::InternalSwap(MsgCancelMatchReq* other) {
  using std::swap;
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgCancelMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgInformBattleReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgInformBattleReq::kRoomidFieldNumber;
const int MsgInformBattleReq::kBattleidFieldNumber;
const int MsgInformBattleReq::kIpFieldNumber;
const int MsgInformBattleReq::kPortFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgInformBattleReq::MsgInformBattleReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgInformBattleReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgInformBattleReq)
}
MsgInformBattleReq::MsgInformBattleReq(const MsgInformBattleReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&port_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(port_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgInformBattleReq)
}

void MsgInformBattleReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(port_));
}

MsgInformBattleReq::~MsgInformBattleReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgInformBattleReq)
  SharedDtor();
}

void MsgInformBattleReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgInformBattleReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgInformBattleReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgInformBattleReq& MsgInformBattleReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgInformBattleReq.base);
  return *internal_default_instance();
}


void MsgInformBattleReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgInformBattleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&port_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(port_));
  _internal_metadata_.Clear();
}

bool MsgInformBattleReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgInformBattleReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 battleid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &battleid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgInformBattleReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgInformBattleReq)
  return false;
#undef DO_
}

void MsgInformBattleReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgInformBattleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  // uint64 battleid = 2;
  if (this->battleid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->battleid(), output);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->ip(), output);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->port(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgInformBattleReq)
}

::google::protobuf::uint8* MsgInformBattleReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgInformBattleReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  // uint64 battleid = 2;
  if (this->battleid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->battleid(), target);
  }

  // bytes ip = 3;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->ip(), target);
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->port(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgInformBattleReq)
  return target;
}

size_t MsgInformBattleReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgInformBattleReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 3;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint64 battleid = 2;
  if (this->battleid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->battleid());
  }

  // uint32 port = 4;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgInformBattleReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgInformBattleReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgInformBattleReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgInformBattleReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgInformBattleReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgInformBattleReq)
    MergeFrom(*source);
  }
}

void MsgInformBattleReq::MergeFrom(const MsgInformBattleReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgInformBattleReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.battleid() != 0) {
    set_battleid(from.battleid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
}

void MsgInformBattleReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgInformBattleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInformBattleReq::CopyFrom(const MsgInformBattleReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgInformBattleReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInformBattleReq::IsInitialized() const {
  return true;
}

void MsgInformBattleReq::Swap(MsgInformBattleReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgInformBattleReq::InternalSwap(MsgInformBattleReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(battleid_, other->battleid_);
  swap(port_, other->port_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgInformBattleReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgInformBattleAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgInformBattleAck::MsgInformBattleAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgInformBattleAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgInformBattleAck)
}
MsgInformBattleAck::MsgInformBattleAck(const MsgInformBattleAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgInformBattleAck)
}

void MsgInformBattleAck::SharedCtor() {
}

MsgInformBattleAck::~MsgInformBattleAck() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgInformBattleAck)
  SharedDtor();
}

void MsgInformBattleAck::SharedDtor() {
}

void MsgInformBattleAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgInformBattleAck::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgInformBattleAck& MsgInformBattleAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgInformBattleAck.base);
  return *internal_default_instance();
}


void MsgInformBattleAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgInformBattleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MsgInformBattleAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgInformBattleAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgInformBattleAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgInformBattleAck)
  return false;
#undef DO_
}

void MsgInformBattleAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgInformBattleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgInformBattleAck)
}

::google::protobuf::uint8* MsgInformBattleAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgInformBattleAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgInformBattleAck)
  return target;
}

size_t MsgInformBattleAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgInformBattleAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgInformBattleAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgInformBattleAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgInformBattleAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgInformBattleAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgInformBattleAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgInformBattleAck)
    MergeFrom(*source);
  }
}

void MsgInformBattleAck::MergeFrom(const MsgInformBattleAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgInformBattleAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MsgInformBattleAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgInformBattleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInformBattleAck::CopyFrom(const MsgInformBattleAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgInformBattleAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInformBattleAck::IsInitialized() const {
  return true;
}

void MsgInformBattleAck::Swap(MsgInformBattleAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgInformBattleAck::InternalSwap(MsgInformBattleAck* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgInformBattleAck::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgFinishRoomReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgFinishRoomReq::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgFinishRoomReq::MsgFinishRoomReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgFinishRoomReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgFinishRoomReq)
}
MsgFinishRoomReq::MsgFinishRoomReq(const MsgFinishRoomReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  roomid_ = from.roomid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgFinishRoomReq)
}

void MsgFinishRoomReq::SharedCtor() {
  roomid_ = GOOGLE_ULONGLONG(0);
}

MsgFinishRoomReq::~MsgFinishRoomReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgFinishRoomReq)
  SharedDtor();
}

void MsgFinishRoomReq::SharedDtor() {
}

void MsgFinishRoomReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgFinishRoomReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgFinishRoomReq& MsgFinishRoomReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgFinishRoomReq.base);
  return *internal_default_instance();
}


void MsgFinishRoomReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgFinishRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  roomid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MsgFinishRoomReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgFinishRoomReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 roomid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgFinishRoomReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgFinishRoomReq)
  return false;
#undef DO_
}

void MsgFinishRoomReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgFinishRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgFinishRoomReq)
}

::google::protobuf::uint8* MsgFinishRoomReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgFinishRoomReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgFinishRoomReq)
  return target;
}

size_t MsgFinishRoomReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgFinishRoomReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 roomid = 1;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgFinishRoomReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgFinishRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgFinishRoomReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgFinishRoomReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgFinishRoomReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgFinishRoomReq)
    MergeFrom(*source);
  }
}

void MsgFinishRoomReq::MergeFrom(const MsgFinishRoomReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgFinishRoomReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
}

void MsgFinishRoomReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgFinishRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFinishRoomReq::CopyFrom(const MsgFinishRoomReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgFinishRoomReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFinishRoomReq::IsInitialized() const {
  return true;
}

void MsgFinishRoomReq::Swap(MsgFinishRoomReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgFinishRoomReq::InternalSwap(MsgFinishRoomReq* other) {
  using std::swap;
  swap(roomid_, other->roomid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgFinishRoomReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgTellMatchCount::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgTellMatchCount::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgTellMatchCount::MsgTellMatchCount()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgTellMatchCount.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgTellMatchCount)
}
MsgTellMatchCount::MsgTellMatchCount(const MsgTellMatchCount& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgTellMatchCount)
}

void MsgTellMatchCount::SharedCtor() {
  count_ = 0u;
}

MsgTellMatchCount::~MsgTellMatchCount() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgTellMatchCount)
  SharedDtor();
}

void MsgTellMatchCount::SharedDtor() {
}

void MsgTellMatchCount::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgTellMatchCount::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgTellMatchCount& MsgTellMatchCount::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgTellMatchCount.base);
  return *internal_default_instance();
}


void MsgTellMatchCount::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgTellMatchCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  count_ = 0u;
  _internal_metadata_.Clear();
}

bool MsgTellMatchCount::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgTellMatchCount)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 count = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgTellMatchCount)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgTellMatchCount)
  return false;
#undef DO_
}

void MsgTellMatchCount::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgTellMatchCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgTellMatchCount)
}

::google::protobuf::uint8* MsgTellMatchCount::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgTellMatchCount)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 count = 1;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgTellMatchCount)
  return target;
}

size_t MsgTellMatchCount::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgTellMatchCount)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 count = 1;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgTellMatchCount::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgTellMatchCount)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgTellMatchCount* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgTellMatchCount>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgTellMatchCount)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgTellMatchCount)
    MergeFrom(*source);
  }
}

void MsgTellMatchCount::MergeFrom(const MsgTellMatchCount& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgTellMatchCount)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.count() != 0) {
    set_count(from.count());
  }
}

void MsgTellMatchCount::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgTellMatchCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgTellMatchCount::CopyFrom(const MsgTellMatchCount& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgTellMatchCount)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgTellMatchCount::IsInitialized() const {
  return true;
}

void MsgTellMatchCount::Swap(MsgTellMatchCount* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgTellMatchCount::InternalSwap(MsgTellMatchCount* other) {
  using std::swap;
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgTellMatchCount::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgCreateMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgCreateMatchReq::kVersionFieldNumber;
const int MsgCreateMatchReq::kMatchidFieldNumber;
const int MsgCreateMatchReq::kServeridFieldNumber;
const int MsgCreateMatchReq::kTitleFieldNumber;
const int MsgCreateMatchReq::kPasswordFieldNumber;
const int MsgCreateMatchReq::kAddrobotFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgCreateMatchReq::MsgCreateMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgCreateMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgCreateMatchReq)
}
MsgCreateMatchReq::MsgCreateMatchReq(const MsgCreateMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.title().size() > 0) {
    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  ::memcpy(&serverid_, &from.serverid_,
    static_cast<size_t>(reinterpret_cast<char*>(&addrobot_) -
    reinterpret_cast<char*>(&serverid_)) + sizeof(addrobot_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgCreateMatchReq)
}

void MsgCreateMatchReq::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&addrobot_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(addrobot_));
}

MsgCreateMatchReq::~MsgCreateMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgCreateMatchReq)
  SharedDtor();
}

void MsgCreateMatchReq::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgCreateMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgCreateMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgCreateMatchReq& MsgCreateMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgCreateMatchReq.base);
  return *internal_default_instance();
}


void MsgCreateMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgCreateMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&serverid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&addrobot_) -
      reinterpret_cast<char*>(&serverid_)) + sizeof(addrobot_));
  _internal_metadata_.Clear();
}

bool MsgCreateMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgCreateMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 serverid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes title = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_title()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes password = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool addrobot = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &addrobot_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgCreateMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgCreateMatchReq)
  return false;
#undef DO_
}

void MsgCreateMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgCreateMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->version(), output);
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->matchid(), output);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->serverid(), output);
  }

  // bytes title = 4;
  if (this->title().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->title(), output);
  }

  // bytes password = 5;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->password(), output);
  }

  // bool addrobot = 6;
  if (this->addrobot() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(6, this->addrobot(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgCreateMatchReq)
}

::google::protobuf::uint8* MsgCreateMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgCreateMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes version = 1;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->version(), target);
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->matchid(), target);
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->serverid(), target);
  }

  // bytes title = 4;
  if (this->title().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->title(), target);
  }

  // bytes password = 5;
  if (this->password().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->password(), target);
  }

  // bool addrobot = 6;
  if (this->addrobot() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(6, this->addrobot(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgCreateMatchReq)
  return target;
}

size_t MsgCreateMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgCreateMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // bytes title = 4;
  if (this->title().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->title());
  }

  // bytes password = 5;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());
  }

  // uint64 serverid = 3;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  // uint32 matchid = 2;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  // bool addrobot = 6;
  if (this->addrobot() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgCreateMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgCreateMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgCreateMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgCreateMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgCreateMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgCreateMatchReq)
    MergeFrom(*source);
  }
}

void MsgCreateMatchReq::MergeFrom(const MsgCreateMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgCreateMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.title().size() > 0) {

    title_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.title_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
  if (from.addrobot() != 0) {
    set_addrobot(from.addrobot());
  }
}

void MsgCreateMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgCreateMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgCreateMatchReq::CopyFrom(const MsgCreateMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgCreateMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgCreateMatchReq::IsInitialized() const {
  return true;
}

void MsgCreateMatchReq::Swap(MsgCreateMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgCreateMatchReq::InternalSwap(MsgCreateMatchReq* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  title_.Swap(&other->title_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(serverid_, other->serverid_);
  swap(matchid_, other->matchid_);
  swap(addrobot_, other->addrobot_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgCreateMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgJoinMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgJoinMatchReq::kVersionFieldNumber;
const int MsgJoinMatchReq::kRoomidFieldNumber;
const int MsgJoinMatchReq::kPasswordFieldNumber;
const int MsgJoinMatchReq::kMatchidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgJoinMatchReq::MsgJoinMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgJoinMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgJoinMatchReq)
}
MsgJoinMatchReq::MsgJoinMatchReq(const MsgJoinMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.password().size() > 0) {
    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgJoinMatchReq)
}

void MsgJoinMatchReq::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
}

MsgJoinMatchReq::~MsgJoinMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgJoinMatchReq)
  SharedDtor();
}

void MsgJoinMatchReq::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgJoinMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgJoinMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgJoinMatchReq& MsgJoinMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgJoinMatchReq.base);
  return *internal_default_instance();
}


void MsgJoinMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgJoinMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  _internal_metadata_.Clear();
}

bool MsgJoinMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgJoinMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes password = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_password()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 matchid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgJoinMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgJoinMatchReq)
  return false;
#undef DO_
}

void MsgJoinMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgJoinMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->version(), output);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->roomid(), output);
  }

  // bytes password = 3;
  if (this->password().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->password(), output);
  }

  // uint32 matchid = 4;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->matchid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgJoinMatchReq)
}

::google::protobuf::uint8* MsgJoinMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgJoinMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes version = 1;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->version(), target);
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->roomid(), target);
  }

  // bytes password = 3;
  if (this->password().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->password(), target);
  }

  // uint32 matchid = 4;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->matchid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgJoinMatchReq)
  return target;
}

size_t MsgJoinMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgJoinMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // bytes password = 3;
  if (this->password().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->password());
  }

  // uint64 roomid = 2;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 4;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgJoinMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgJoinMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgJoinMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgJoinMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgJoinMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgJoinMatchReq)
    MergeFrom(*source);
  }
}

void MsgJoinMatchReq::MergeFrom(const MsgJoinMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgJoinMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.password().size() > 0) {

    password_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.password_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void MsgJoinMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgJoinMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgJoinMatchReq::CopyFrom(const MsgJoinMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgJoinMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgJoinMatchReq::IsInitialized() const {
  return true;
}

void MsgJoinMatchReq::Swap(MsgJoinMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgJoinMatchReq::InternalSwap(MsgJoinMatchReq* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  password_.Swap(&other->password_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgJoinMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgJoinMatchAck::InitAsDefaultInstance() {
  ::KFMsg::_MsgJoinMatchAck_default_instance_._instance.get_mutable()->pbroom_ = const_cast< ::KFMsg::PBMatchRoom*>(
      ::KFMsg::PBMatchRoom::internal_default_instance());
}
void MsgJoinMatchAck::clear_pbroom() {
  if (GetArenaNoVirtual() == NULL && pbroom_ != NULL) {
    delete pbroom_;
  }
  pbroom_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgJoinMatchAck::kPbroomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgJoinMatchAck::MsgJoinMatchAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgJoinMatchAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgJoinMatchAck)
}
MsgJoinMatchAck::MsgJoinMatchAck(const MsgJoinMatchAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbroom()) {
    pbroom_ = new ::KFMsg::PBMatchRoom(*from.pbroom_);
  } else {
    pbroom_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgJoinMatchAck)
}

void MsgJoinMatchAck::SharedCtor() {
  pbroom_ = NULL;
}

MsgJoinMatchAck::~MsgJoinMatchAck() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgJoinMatchAck)
  SharedDtor();
}

void MsgJoinMatchAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbroom_;
}

void MsgJoinMatchAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgJoinMatchAck::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgJoinMatchAck& MsgJoinMatchAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgJoinMatchAck.base);
  return *internal_default_instance();
}


void MsgJoinMatchAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgJoinMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbroom_ != NULL) {
    delete pbroom_;
  }
  pbroom_ = NULL;
  _internal_metadata_.Clear();
}

bool MsgJoinMatchAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgJoinMatchAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBMatchRoom pbroom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbroom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgJoinMatchAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgJoinMatchAck)
  return false;
#undef DO_
}

void MsgJoinMatchAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgJoinMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBMatchRoom pbroom = 1;
  if (this->has_pbroom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbroom(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgJoinMatchAck)
}

::google::protobuf::uint8* MsgJoinMatchAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgJoinMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBMatchRoom pbroom = 1;
  if (this->has_pbroom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbroom(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgJoinMatchAck)
  return target;
}

size_t MsgJoinMatchAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgJoinMatchAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBMatchRoom pbroom = 1;
  if (this->has_pbroom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbroom_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgJoinMatchAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgJoinMatchAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgJoinMatchAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgJoinMatchAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgJoinMatchAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgJoinMatchAck)
    MergeFrom(*source);
  }
}

void MsgJoinMatchAck::MergeFrom(const MsgJoinMatchAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgJoinMatchAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbroom()) {
    mutable_pbroom()->::KFMsg::PBMatchRoom::MergeFrom(from.pbroom());
  }
}

void MsgJoinMatchAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgJoinMatchAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgJoinMatchAck::CopyFrom(const MsgJoinMatchAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgJoinMatchAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgJoinMatchAck::IsInitialized() const {
  return true;
}

void MsgJoinMatchAck::Swap(MsgJoinMatchAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgJoinMatchAck::InternalSwap(MsgJoinMatchAck* other) {
  using std::swap;
  swap(pbroom_, other->pbroom_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgJoinMatchAck::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgAddMatchPlayerAck::InitAsDefaultInstance() {
  ::KFMsg::_MsgAddMatchPlayerAck_default_instance_._instance.get_mutable()->pbplayer_ = const_cast< ::KFMsg::PBMatchPlayer*>(
      ::KFMsg::PBMatchPlayer::internal_default_instance());
}
void MsgAddMatchPlayerAck::clear_pbplayer() {
  if (GetArenaNoVirtual() == NULL && pbplayer_ != NULL) {
    delete pbplayer_;
  }
  pbplayer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgAddMatchPlayerAck::kPbplayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgAddMatchPlayerAck::MsgAddMatchPlayerAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgAddMatchPlayerAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgAddMatchPlayerAck)
}
MsgAddMatchPlayerAck::MsgAddMatchPlayerAck(const MsgAddMatchPlayerAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbplayer()) {
    pbplayer_ = new ::KFMsg::PBMatchPlayer(*from.pbplayer_);
  } else {
    pbplayer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgAddMatchPlayerAck)
}

void MsgAddMatchPlayerAck::SharedCtor() {
  pbplayer_ = NULL;
}

MsgAddMatchPlayerAck::~MsgAddMatchPlayerAck() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgAddMatchPlayerAck)
  SharedDtor();
}

void MsgAddMatchPlayerAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbplayer_;
}

void MsgAddMatchPlayerAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgAddMatchPlayerAck::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgAddMatchPlayerAck& MsgAddMatchPlayerAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgAddMatchPlayerAck.base);
  return *internal_default_instance();
}


void MsgAddMatchPlayerAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgAddMatchPlayerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbplayer_ != NULL) {
    delete pbplayer_;
  }
  pbplayer_ = NULL;
  _internal_metadata_.Clear();
}

bool MsgAddMatchPlayerAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgAddMatchPlayerAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBMatchPlayer pbplayer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbplayer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgAddMatchPlayerAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgAddMatchPlayerAck)
  return false;
#undef DO_
}

void MsgAddMatchPlayerAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgAddMatchPlayerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBMatchPlayer pbplayer = 1;
  if (this->has_pbplayer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbplayer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgAddMatchPlayerAck)
}

::google::protobuf::uint8* MsgAddMatchPlayerAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgAddMatchPlayerAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBMatchPlayer pbplayer = 1;
  if (this->has_pbplayer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbplayer(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgAddMatchPlayerAck)
  return target;
}

size_t MsgAddMatchPlayerAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgAddMatchPlayerAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBMatchPlayer pbplayer = 1;
  if (this->has_pbplayer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbplayer_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgAddMatchPlayerAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgAddMatchPlayerAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgAddMatchPlayerAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgAddMatchPlayerAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgAddMatchPlayerAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgAddMatchPlayerAck)
    MergeFrom(*source);
  }
}

void MsgAddMatchPlayerAck::MergeFrom(const MsgAddMatchPlayerAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgAddMatchPlayerAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbplayer()) {
    mutable_pbplayer()->::KFMsg::PBMatchPlayer::MergeFrom(from.pbplayer());
  }
}

void MsgAddMatchPlayerAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgAddMatchPlayerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgAddMatchPlayerAck::CopyFrom(const MsgAddMatchPlayerAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgAddMatchPlayerAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgAddMatchPlayerAck::IsInitialized() const {
  return true;
}

void MsgAddMatchPlayerAck::Swap(MsgAddMatchPlayerAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgAddMatchPlayerAck::InternalSwap(MsgAddMatchPlayerAck* other) {
  using std::swap;
  swap(pbplayer_, other->pbplayer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgAddMatchPlayerAck::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgQueryMatchListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgQueryMatchListReq::kMatchidFieldNumber;
const int MsgQueryMatchListReq::kVersionFieldNumber;
const int MsgQueryMatchListReq::kRoomidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgQueryMatchListReq::MsgQueryMatchListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgQueryMatchListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgQueryMatchListReq)
}
MsgQueryMatchListReq::MsgQueryMatchListReq(const MsgQueryMatchListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  ::memcpy(&roomid_, &from.roomid_,
    static_cast<size_t>(reinterpret_cast<char*>(&matchid_) -
    reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgQueryMatchListReq)
}

void MsgQueryMatchListReq::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
}

MsgQueryMatchListReq::~MsgQueryMatchListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgQueryMatchListReq)
  SharedDtor();
}

void MsgQueryMatchListReq::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgQueryMatchListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgQueryMatchListReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgQueryMatchListReq& MsgQueryMatchListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgQueryMatchListReq.base);
  return *internal_default_instance();
}


void MsgQueryMatchListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgQueryMatchListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&roomid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&matchid_) -
      reinterpret_cast<char*>(&roomid_)) + sizeof(matchid_));
  _internal_metadata_.Clear();
}

bool MsgQueryMatchListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgQueryMatchListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 matchid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &matchid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes version = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_version()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 roomid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &roomid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgQueryMatchListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgQueryMatchListReq)
  return false;
#undef DO_
}

void MsgQueryMatchListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgQueryMatchListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->matchid(), output);
  }

  // bytes version = 2;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->version(), output);
  }

  // uint64 roomid = 3;
  if (this->roomid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->roomid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgQueryMatchListReq)
}

::google::protobuf::uint8* MsgQueryMatchListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgQueryMatchListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->matchid(), target);
  }

  // bytes version = 2;
  if (this->version().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->version(), target);
  }

  // uint64 roomid = 3;
  if (this->roomid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->roomid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgQueryMatchListReq)
  return target;
}

size_t MsgQueryMatchListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgQueryMatchListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->version());
  }

  // uint64 roomid = 3;
  if (this->roomid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->roomid());
  }

  // uint32 matchid = 1;
  if (this->matchid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->matchid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgQueryMatchListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgQueryMatchListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgQueryMatchListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgQueryMatchListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgQueryMatchListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgQueryMatchListReq)
    MergeFrom(*source);
  }
}

void MsgQueryMatchListReq::MergeFrom(const MsgQueryMatchListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgQueryMatchListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  if (from.roomid() != 0) {
    set_roomid(from.roomid());
  }
  if (from.matchid() != 0) {
    set_matchid(from.matchid());
  }
}

void MsgQueryMatchListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgQueryMatchListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQueryMatchListReq::CopyFrom(const MsgQueryMatchListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgQueryMatchListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQueryMatchListReq::IsInitialized() const {
  return true;
}

void MsgQueryMatchListReq::Swap(MsgQueryMatchListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgQueryMatchListReq::InternalSwap(MsgQueryMatchListReq* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roomid_, other->roomid_);
  swap(matchid_, other->matchid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgQueryMatchListReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgQueryMatchListAck::InitAsDefaultInstance() {
}
void MsgQueryMatchListAck::clear_pbroom() {
  pbroom_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgQueryMatchListAck::kPbroomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgQueryMatchListAck::MsgQueryMatchListAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgQueryMatchListAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgQueryMatchListAck)
}
MsgQueryMatchListAck::MsgQueryMatchListAck(const MsgQueryMatchListAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbroom_(from.pbroom_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgQueryMatchListAck)
}

void MsgQueryMatchListAck::SharedCtor() {
}

MsgQueryMatchListAck::~MsgQueryMatchListAck() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgQueryMatchListAck)
  SharedDtor();
}

void MsgQueryMatchListAck::SharedDtor() {
}

void MsgQueryMatchListAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgQueryMatchListAck::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgQueryMatchListAck& MsgQueryMatchListAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgQueryMatchListAck.base);
  return *internal_default_instance();
}


void MsgQueryMatchListAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgQueryMatchListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbroom_.Clear();
  _internal_metadata_.Clear();
}

bool MsgQueryMatchListAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgQueryMatchListAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBMatchRoom pbroom = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbroom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgQueryMatchListAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgQueryMatchListAck)
  return false;
#undef DO_
}

void MsgQueryMatchListAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgQueryMatchListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBMatchRoom pbroom = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbroom_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pbroom(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgQueryMatchListAck)
}

::google::protobuf::uint8* MsgQueryMatchListAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgQueryMatchListAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBMatchRoom pbroom = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbroom_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pbroom(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgQueryMatchListAck)
  return target;
}

size_t MsgQueryMatchListAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgQueryMatchListAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBMatchRoom pbroom = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pbroom_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbroom(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgQueryMatchListAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgQueryMatchListAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgQueryMatchListAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgQueryMatchListAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgQueryMatchListAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgQueryMatchListAck)
    MergeFrom(*source);
  }
}

void MsgQueryMatchListAck::MergeFrom(const MsgQueryMatchListAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgQueryMatchListAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbroom_.MergeFrom(from.pbroom_);
}

void MsgQueryMatchListAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgQueryMatchListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgQueryMatchListAck::CopyFrom(const MsgQueryMatchListAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgQueryMatchListAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgQueryMatchListAck::IsInitialized() const {
  return true;
}

void MsgQueryMatchListAck::Swap(MsgQueryMatchListAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgQueryMatchListAck::InternalSwap(MsgQueryMatchListAck* other) {
  using std::swap;
  CastToBase(&pbroom_)->InternalSwap(CastToBase(&other->pbroom_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgQueryMatchListAck::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgKickMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgKickMatchReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgKickMatchReq::MsgKickMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgKickMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgKickMatchReq)
}
MsgKickMatchReq::MsgKickMatchReq(const MsgKickMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgKickMatchReq)
}

void MsgKickMatchReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

MsgKickMatchReq::~MsgKickMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgKickMatchReq)
  SharedDtor();
}

void MsgKickMatchReq::SharedDtor() {
}

void MsgKickMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgKickMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgKickMatchReq& MsgKickMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgKickMatchReq.base);
  return *internal_default_instance();
}


void MsgKickMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgKickMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MsgKickMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgKickMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgKickMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgKickMatchReq)
  return false;
#undef DO_
}

void MsgKickMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgKickMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgKickMatchReq)
}

::google::protobuf::uint8* MsgKickMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgKickMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgKickMatchReq)
  return target;
}

size_t MsgKickMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgKickMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgKickMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgKickMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgKickMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgKickMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgKickMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgKickMatchReq)
    MergeFrom(*source);
  }
}

void MsgKickMatchReq::MergeFrom(const MsgKickMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgKickMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void MsgKickMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgKickMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgKickMatchReq::CopyFrom(const MsgKickMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgKickMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgKickMatchReq::IsInitialized() const {
  return true;
}

void MsgKickMatchReq::Swap(MsgKickMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgKickMatchReq::InternalSwap(MsgKickMatchReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgKickMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgLeaveMatchAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgLeaveMatchAck::kPlayeridFieldNumber;
const int MsgLeaveMatchAck::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgLeaveMatchAck::MsgLeaveMatchAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgLeaveMatchAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgLeaveMatchAck)
}
MsgLeaveMatchAck::MsgLeaveMatchAck(const MsgLeaveMatchAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgLeaveMatchAck)
}

void MsgLeaveMatchAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

MsgLeaveMatchAck::~MsgLeaveMatchAck() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgLeaveMatchAck)
  SharedDtor();
}

void MsgLeaveMatchAck::SharedDtor() {
}

void MsgLeaveMatchAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgLeaveMatchAck::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgLeaveMatchAck& MsgLeaveMatchAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgLeaveMatchAck.base);
  return *internal_default_instance();
}


void MsgLeaveMatchAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgLeaveMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool MsgLeaveMatchAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgLeaveMatchAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgLeaveMatchAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgLeaveMatchAck)
  return false;
#undef DO_
}

void MsgLeaveMatchAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgLeaveMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgLeaveMatchAck)
}

::google::protobuf::uint8* MsgLeaveMatchAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgLeaveMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgLeaveMatchAck)
  return target;
}

size_t MsgLeaveMatchAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgLeaveMatchAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgLeaveMatchAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgLeaveMatchAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgLeaveMatchAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgLeaveMatchAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgLeaveMatchAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgLeaveMatchAck)
    MergeFrom(*source);
  }
}

void MsgLeaveMatchAck::MergeFrom(const MsgLeaveMatchAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgLeaveMatchAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void MsgLeaveMatchAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgLeaveMatchAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgLeaveMatchAck::CopyFrom(const MsgLeaveMatchAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgLeaveMatchAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgLeaveMatchAck::IsInitialized() const {
  return true;
}

void MsgLeaveMatchAck::Swap(MsgLeaveMatchAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgLeaveMatchAck::InternalSwap(MsgLeaveMatchAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgLeaveMatchAck::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgChangeMatchMasterAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgChangeMatchMasterAck::kPlayeridFieldNumber;
const int MsgChangeMatchMasterAck::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgChangeMatchMasterAck::MsgChangeMatchMasterAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgChangeMatchMasterAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgChangeMatchMasterAck)
}
MsgChangeMatchMasterAck::MsgChangeMatchMasterAck(const MsgChangeMatchMasterAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgChangeMatchMasterAck)
}

void MsgChangeMatchMasterAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

MsgChangeMatchMasterAck::~MsgChangeMatchMasterAck() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgChangeMatchMasterAck)
  SharedDtor();
}

void MsgChangeMatchMasterAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgChangeMatchMasterAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgChangeMatchMasterAck::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgChangeMatchMasterAck& MsgChangeMatchMasterAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgChangeMatchMasterAck.base);
  return *internal_default_instance();
}


void MsgChangeMatchMasterAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgChangeMatchMasterAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MsgChangeMatchMasterAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgChangeMatchMasterAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgChangeMatchMasterAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgChangeMatchMasterAck)
  return false;
#undef DO_
}

void MsgChangeMatchMasterAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgChangeMatchMasterAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgChangeMatchMasterAck)
}

::google::protobuf::uint8* MsgChangeMatchMasterAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgChangeMatchMasterAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgChangeMatchMasterAck)
  return target;
}

size_t MsgChangeMatchMasterAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgChangeMatchMasterAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgChangeMatchMasterAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgChangeMatchMasterAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgChangeMatchMasterAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgChangeMatchMasterAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgChangeMatchMasterAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgChangeMatchMasterAck)
    MergeFrom(*source);
  }
}

void MsgChangeMatchMasterAck::MergeFrom(const MsgChangeMatchMasterAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgChangeMatchMasterAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void MsgChangeMatchMasterAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgChangeMatchMasterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgChangeMatchMasterAck::CopyFrom(const MsgChangeMatchMasterAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgChangeMatchMasterAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgChangeMatchMasterAck::IsInitialized() const {
  return true;
}

void MsgChangeMatchMasterAck::Swap(MsgChangeMatchMasterAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgChangeMatchMasterAck::InternalSwap(MsgChangeMatchMasterAck* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgChangeMatchMasterAck::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgFightMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgFightMatchReq::MsgFightMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgFightMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgFightMatchReq)
}
MsgFightMatchReq::MsgFightMatchReq(const MsgFightMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgFightMatchReq)
}

void MsgFightMatchReq::SharedCtor() {
}

MsgFightMatchReq::~MsgFightMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgFightMatchReq)
  SharedDtor();
}

void MsgFightMatchReq::SharedDtor() {
}

void MsgFightMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgFightMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgFightMatchReq& MsgFightMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgFightMatchReq.base);
  return *internal_default_instance();
}


void MsgFightMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgFightMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool MsgFightMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgFightMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgFightMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgFightMatchReq)
  return false;
#undef DO_
}

void MsgFightMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgFightMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgFightMatchReq)
}

::google::protobuf::uint8* MsgFightMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgFightMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgFightMatchReq)
  return target;
}

size_t MsgFightMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgFightMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgFightMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgFightMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgFightMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgFightMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgFightMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgFightMatchReq)
    MergeFrom(*source);
  }
}

void MsgFightMatchReq::MergeFrom(const MsgFightMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgFightMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void MsgFightMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgFightMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgFightMatchReq::CopyFrom(const MsgFightMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgFightMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgFightMatchReq::IsInitialized() const {
  return true;
}

void MsgFightMatchReq::Swap(MsgFightMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgFightMatchReq::InternalSwap(MsgFightMatchReq* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgFightMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgPrePareMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgPrePareMatchReq::kPrepareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgPrePareMatchReq::MsgPrePareMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgPrePareMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgPrePareMatchReq)
}
MsgPrePareMatchReq::MsgPrePareMatchReq(const MsgPrePareMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  prepare_ = from.prepare_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgPrePareMatchReq)
}

void MsgPrePareMatchReq::SharedCtor() {
  prepare_ = false;
}

MsgPrePareMatchReq::~MsgPrePareMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgPrePareMatchReq)
  SharedDtor();
}

void MsgPrePareMatchReq::SharedDtor() {
}

void MsgPrePareMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgPrePareMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgPrePareMatchReq& MsgPrePareMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgPrePareMatchReq.base);
  return *internal_default_instance();
}


void MsgPrePareMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgPrePareMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  prepare_ = false;
  _internal_metadata_.Clear();
}

bool MsgPrePareMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgPrePareMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bool prepare = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prepare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgPrePareMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgPrePareMatchReq)
  return false;
#undef DO_
}

void MsgPrePareMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgPrePareMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool prepare = 1;
  if (this->prepare() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(1, this->prepare(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgPrePareMatchReq)
}

::google::protobuf::uint8* MsgPrePareMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgPrePareMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool prepare = 1;
  if (this->prepare() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(1, this->prepare(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgPrePareMatchReq)
  return target;
}

size_t MsgPrePareMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgPrePareMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bool prepare = 1;
  if (this->prepare() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgPrePareMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgPrePareMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPrePareMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgPrePareMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgPrePareMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgPrePareMatchReq)
    MergeFrom(*source);
  }
}

void MsgPrePareMatchReq::MergeFrom(const MsgPrePareMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgPrePareMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.prepare() != 0) {
    set_prepare(from.prepare());
  }
}

void MsgPrePareMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgPrePareMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPrePareMatchReq::CopyFrom(const MsgPrePareMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgPrePareMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPrePareMatchReq::IsInitialized() const {
  return true;
}

void MsgPrePareMatchReq::Swap(MsgPrePareMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgPrePareMatchReq::InternalSwap(MsgPrePareMatchReq* other) {
  using std::swap;
  swap(prepare_, other->prepare_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgPrePareMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgPrePareMatchAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgPrePareMatchAck::kPlayeridFieldNumber;
const int MsgPrePareMatchAck::kPrepareFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgPrePareMatchAck::MsgPrePareMatchAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgPrePareMatchAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgPrePareMatchAck)
}
MsgPrePareMatchAck::MsgPrePareMatchAck(const MsgPrePareMatchAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&prepare_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(prepare_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgPrePareMatchAck)
}

void MsgPrePareMatchAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prepare_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(prepare_));
}

MsgPrePareMatchAck::~MsgPrePareMatchAck() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgPrePareMatchAck)
  SharedDtor();
}

void MsgPrePareMatchAck::SharedDtor() {
}

void MsgPrePareMatchAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgPrePareMatchAck::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgPrePareMatchAck& MsgPrePareMatchAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgPrePareMatchAck.base);
  return *internal_default_instance();
}


void MsgPrePareMatchAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgPrePareMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&prepare_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(prepare_));
  _internal_metadata_.Clear();
}

bool MsgPrePareMatchAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgPrePareMatchAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool prepare = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &prepare_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgPrePareMatchAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgPrePareMatchAck)
  return false;
#undef DO_
}

void MsgPrePareMatchAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgPrePareMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // bool prepare = 2;
  if (this->prepare() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->prepare(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgPrePareMatchAck)
}

::google::protobuf::uint8* MsgPrePareMatchAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgPrePareMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // bool prepare = 2;
  if (this->prepare() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->prepare(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgPrePareMatchAck)
  return target;
}

size_t MsgPrePareMatchAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgPrePareMatchAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // bool prepare = 2;
  if (this->prepare() != 0) {
    total_size += 1 + 1;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgPrePareMatchAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgPrePareMatchAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgPrePareMatchAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgPrePareMatchAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgPrePareMatchAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgPrePareMatchAck)
    MergeFrom(*source);
  }
}

void MsgPrePareMatchAck::MergeFrom(const MsgPrePareMatchAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgPrePareMatchAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.prepare() != 0) {
    set_prepare(from.prepare());
  }
}

void MsgPrePareMatchAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgPrePareMatchAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgPrePareMatchAck::CopyFrom(const MsgPrePareMatchAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgPrePareMatchAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgPrePareMatchAck::IsInitialized() const {
  return true;
}

void MsgPrePareMatchAck::Swap(MsgPrePareMatchAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgPrePareMatchAck::InternalSwap(MsgPrePareMatchAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(prepare_, other->prepare_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgPrePareMatchAck::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgInviteMatchReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgInviteMatchReq::kRelationnameFieldNumber;
const int MsgInviteMatchReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgInviteMatchReq::MsgInviteMatchReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgInviteMatchReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgInviteMatchReq)
}
MsgInviteMatchReq::MsgInviteMatchReq(const MsgInviteMatchReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgInviteMatchReq)
}

void MsgInviteMatchReq::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

MsgInviteMatchReq::~MsgInviteMatchReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgInviteMatchReq)
  SharedDtor();
}

void MsgInviteMatchReq::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MsgInviteMatchReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgInviteMatchReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgInviteMatchReq& MsgInviteMatchReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgInviteMatchReq.base);
  return *internal_default_instance();
}


void MsgInviteMatchReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgInviteMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MsgInviteMatchReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgInviteMatchReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgInviteMatchReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgInviteMatchReq)
  return false;
#undef DO_
}

void MsgInviteMatchReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgInviteMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgInviteMatchReq)
}

::google::protobuf::uint8* MsgInviteMatchReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgInviteMatchReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgInviteMatchReq)
  return target;
}

size_t MsgInviteMatchReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgInviteMatchReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgInviteMatchReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgInviteMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgInviteMatchReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgInviteMatchReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgInviteMatchReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgInviteMatchReq)
    MergeFrom(*source);
  }
}

void MsgInviteMatchReq::MergeFrom(const MsgInviteMatchReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgInviteMatchReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void MsgInviteMatchReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgInviteMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInviteMatchReq::CopyFrom(const MsgInviteMatchReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgInviteMatchReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInviteMatchReq::IsInitialized() const {
  return true;
}

void MsgInviteMatchReq::Swap(MsgInviteMatchReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgInviteMatchReq::InternalSwap(MsgInviteMatchReq* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgInviteMatchReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgInviteMatchAck::InitAsDefaultInstance() {
  ::KFMsg::_MsgInviteMatchAck_default_instance_._instance.get_mutable()->pbroom_ = const_cast< ::KFMsg::PBMatchRoom*>(
      ::KFMsg::PBMatchRoom::internal_default_instance());
}
void MsgInviteMatchAck::clear_pbroom() {
  if (GetArenaNoVirtual() == NULL && pbroom_ != NULL) {
    delete pbroom_;
  }
  pbroom_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgInviteMatchAck::kPlayeridFieldNumber;
const int MsgInviteMatchAck::kPbroomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgInviteMatchAck::MsgInviteMatchAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgInviteMatchAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgInviteMatchAck)
}
MsgInviteMatchAck::MsgInviteMatchAck(const MsgInviteMatchAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbroom()) {
    pbroom_ = new ::KFMsg::PBMatchRoom(*from.pbroom_);
  } else {
    pbroom_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgInviteMatchAck)
}

void MsgInviteMatchAck::SharedCtor() {
  ::memset(&pbroom_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbroom_)) + sizeof(playerid_));
}

MsgInviteMatchAck::~MsgInviteMatchAck() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgInviteMatchAck)
  SharedDtor();
}

void MsgInviteMatchAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbroom_;
}

void MsgInviteMatchAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgInviteMatchAck::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgInviteMatchAck& MsgInviteMatchAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgInviteMatchAck.base);
  return *internal_default_instance();
}


void MsgInviteMatchAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgInviteMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbroom_ != NULL) {
    delete pbroom_;
  }
  pbroom_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool MsgInviteMatchAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgInviteMatchAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBMatchRoom pbroom = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbroom()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgInviteMatchAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgInviteMatchAck)
  return false;
#undef DO_
}

void MsgInviteMatchAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgInviteMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBMatchRoom pbroom = 2;
  if (this->has_pbroom()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbroom(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgInviteMatchAck)
}

::google::protobuf::uint8* MsgInviteMatchAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgInviteMatchAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBMatchRoom pbroom = 2;
  if (this->has_pbroom()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbroom(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgInviteMatchAck)
  return target;
}

size_t MsgInviteMatchAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgInviteMatchAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBMatchRoom pbroom = 2;
  if (this->has_pbroom()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbroom_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgInviteMatchAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgInviteMatchAck)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgInviteMatchAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgInviteMatchAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgInviteMatchAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgInviteMatchAck)
    MergeFrom(*source);
  }
}

void MsgInviteMatchAck::MergeFrom(const MsgInviteMatchAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgInviteMatchAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbroom()) {
    mutable_pbroom()->::KFMsg::PBMatchRoom::MergeFrom(from.pbroom());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void MsgInviteMatchAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgInviteMatchAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgInviteMatchAck::CopyFrom(const MsgInviteMatchAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgInviteMatchAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgInviteMatchAck::IsInitialized() const {
  return true;
}

void MsgInviteMatchAck::Swap(MsgInviteMatchAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgInviteMatchAck::InternalSwap(MsgInviteMatchAck* other) {
  using std::swap;
  swap(pbroom_, other->pbroom_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgInviteMatchAck::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void MsgUpdateScoreReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MsgUpdateScoreReq::kIdFieldNumber;
const int MsgUpdateScoreReq::kSocreFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MsgUpdateScoreReq::MsgUpdateScoreReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_ClientMessage_2eproto::scc_info_MsgUpdateScoreReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.MsgUpdateScoreReq)
}
MsgUpdateScoreReq::MsgUpdateScoreReq(const MsgUpdateScoreReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&socre_, &from.socre_,
    static_cast<size_t>(reinterpret_cast<char*>(&id_) -
    reinterpret_cast<char*>(&socre_)) + sizeof(id_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.MsgUpdateScoreReq)
}

void MsgUpdateScoreReq::SharedCtor() {
  ::memset(&socre_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&socre_)) + sizeof(id_));
}

MsgUpdateScoreReq::~MsgUpdateScoreReq() {
  // @@protoc_insertion_point(destructor:KFMsg.MsgUpdateScoreReq)
  SharedDtor();
}

void MsgUpdateScoreReq::SharedDtor() {
}

void MsgUpdateScoreReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* MsgUpdateScoreReq::descriptor() {
  ::protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MsgUpdateScoreReq& MsgUpdateScoreReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_ClientMessage_2eproto::scc_info_MsgUpdateScoreReq.base);
  return *internal_default_instance();
}


void MsgUpdateScoreReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.MsgUpdateScoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&socre_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&socre_)) + sizeof(id_));
  _internal_metadata_.Clear();
}

bool MsgUpdateScoreReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.MsgUpdateScoreReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 socre = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &socre_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.MsgUpdateScoreReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.MsgUpdateScoreReq)
  return false;
#undef DO_
}

void MsgUpdateScoreReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.MsgUpdateScoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // uint64 socre = 2;
  if (this->socre() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->socre(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.MsgUpdateScoreReq)
}

::google::protobuf::uint8* MsgUpdateScoreReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.MsgUpdateScoreReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // uint64 socre = 2;
  if (this->socre() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->socre(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.MsgUpdateScoreReq)
  return target;
}

size_t MsgUpdateScoreReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.MsgUpdateScoreReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 socre = 2;
  if (this->socre() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->socre());
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MsgUpdateScoreReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.MsgUpdateScoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  const MsgUpdateScoreReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MsgUpdateScoreReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.MsgUpdateScoreReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.MsgUpdateScoreReq)
    MergeFrom(*source);
  }
}

void MsgUpdateScoreReq::MergeFrom(const MsgUpdateScoreReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.MsgUpdateScoreReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.socre() != 0) {
    set_socre(from.socre());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void MsgUpdateScoreReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.MsgUpdateScoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MsgUpdateScoreReq::CopyFrom(const MsgUpdateScoreReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.MsgUpdateScoreReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MsgUpdateScoreReq::IsInitialized() const {
  return true;
}

void MsgUpdateScoreReq::Swap(MsgUpdateScoreReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MsgUpdateScoreReq::InternalSwap(MsgUpdateScoreReq* other) {
  using std::swap;
  swap(socre_, other->socre_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata MsgUpdateScoreReq::GetMetadata() const {
  protobuf_ClientMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_ClientMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgFighterHeroReq* Arena::CreateMaybeMessage< ::KFMsg::MsgFighterHeroReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgFighterHeroReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgEffectUseReq* Arena::CreateMaybeMessage< ::KFMsg::MsgEffectUseReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgEffectUseReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgFootUseReq* Arena::CreateMaybeMessage< ::KFMsg::MsgFootUseReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgFootUseReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgStartMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgStartMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgStartMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgCancelMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgCancelMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgCancelMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgInformBattleReq* Arena::CreateMaybeMessage< ::KFMsg::MsgInformBattleReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgInformBattleReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgInformBattleAck* Arena::CreateMaybeMessage< ::KFMsg::MsgInformBattleAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgInformBattleAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgFinishRoomReq* Arena::CreateMaybeMessage< ::KFMsg::MsgFinishRoomReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgFinishRoomReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgTellMatchCount* Arena::CreateMaybeMessage< ::KFMsg::MsgTellMatchCount >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgTellMatchCount >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgCreateMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgCreateMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgCreateMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgJoinMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgJoinMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgJoinMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgJoinMatchAck* Arena::CreateMaybeMessage< ::KFMsg::MsgJoinMatchAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgJoinMatchAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgAddMatchPlayerAck* Arena::CreateMaybeMessage< ::KFMsg::MsgAddMatchPlayerAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgAddMatchPlayerAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgQueryMatchListReq* Arena::CreateMaybeMessage< ::KFMsg::MsgQueryMatchListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgQueryMatchListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgQueryMatchListAck* Arena::CreateMaybeMessage< ::KFMsg::MsgQueryMatchListAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgQueryMatchListAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgKickMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgKickMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgKickMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgLeaveMatchAck* Arena::CreateMaybeMessage< ::KFMsg::MsgLeaveMatchAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgLeaveMatchAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgChangeMatchMasterAck* Arena::CreateMaybeMessage< ::KFMsg::MsgChangeMatchMasterAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgChangeMatchMasterAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgFightMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgFightMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgFightMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgPrePareMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgPrePareMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgPrePareMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgPrePareMatchAck* Arena::CreateMaybeMessage< ::KFMsg::MsgPrePareMatchAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgPrePareMatchAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgInviteMatchReq* Arena::CreateMaybeMessage< ::KFMsg::MsgInviteMatchReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgInviteMatchReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgInviteMatchAck* Arena::CreateMaybeMessage< ::KFMsg::MsgInviteMatchAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgInviteMatchAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::MsgUpdateScoreReq* Arena::CreateMaybeMessage< ::KFMsg::MsgUpdateScoreReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::MsgUpdateScoreReq >(arena);
}
}  // namespace protobuf
}  // namespace google

#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif

// @@protoc_insertion_point(global_scope)
