// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: DefineMessage.proto

#ifndef PROTOBUF_INCLUDED_DefineMessage_2eproto
#define PROTOBUF_INCLUDED_DefineMessage_2eproto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4946)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "FrameDefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_DefineMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_DefineMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_DefineMessage_2eproto
namespace KFMsg {
class PBBalanceData;
class PBBalanceDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBBalanceDataDefaultTypeInternal _PBBalanceData_default_instance_;
class PBBattleBalance;
class PBBattleBalanceDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBBattleBalanceDefaultTypeInternal _PBBattleBalance_default_instance_;
class PBMatchPlayer;
class PBMatchPlayerDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBMatchPlayerDefaultTypeInternal _PBMatchPlayer_default_instance_;
class PBMatchRoom;
class PBMatchRoomDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBMatchRoomDefaultTypeInternal _PBMatchRoom_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::PBBalanceData* Arena::CreateMaybeMessage<::KFMsg::PBBalanceData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBBattleBalance* Arena::CreateMaybeMessage<::KFMsg::PBBattleBalance>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBMatchPlayer* Arena::CreateMaybeMessage<::KFMsg::PBMatchPlayer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBMatchRoom* Arena::CreateMaybeMessage<::KFMsg::PBMatchRoom>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

// ===================================================================

class LIBPROTOC_EXPORT PBMatchRoom : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBMatchRoom) */ {
 public:
  PBMatchRoom();
  virtual ~PBMatchRoom();

  PBMatchRoom(const PBMatchRoom& from);

  inline PBMatchRoom& operator=(const PBMatchRoom& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMatchRoom(PBMatchRoom&& from) noexcept
    : PBMatchRoom() {
    *this = ::std::move(from);
  }

  inline PBMatchRoom& operator=(PBMatchRoom&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMatchRoom& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMatchRoom* internal_default_instance() {
    return reinterpret_cast<const PBMatchRoom*>(
               &_PBMatchRoom_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(PBMatchRoom* other);
  friend void swap(PBMatchRoom& a, PBMatchRoom& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMatchRoom* New() const final {
    return CreateMaybeMessage<PBMatchRoom>(NULL);
  }

  PBMatchRoom* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMatchRoom>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMatchRoom& from);
  void MergeFrom(const PBMatchRoom& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMatchRoom* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBMatchPlayer player = 20;
  int player_size() const;
  void clear_player();
  static const int kPlayerFieldNumber = 20;
  ::KFMsg::PBMatchPlayer* mutable_player(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMatchPlayer >*
      mutable_player();
  const ::KFMsg::PBMatchPlayer& player(int index) const;
  ::KFMsg::PBMatchPlayer* add_player();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMatchPlayer >&
      player() const;

  // bytes title = 3;
  void clear_title();
  static const int kTitleFieldNumber = 3;
  const ::std::string& title() const;
  void set_title(const ::std::string& value);
  #if LANG_CXX11
  void set_title(::std::string&& value);
  #endif
  void set_title(const char* value);
  void set_title(const void* value, size_t size);
  ::std::string* mutable_title();
  ::std::string* release_title();
  void set_allocated_title(::std::string* title);

  // bytes version = 4;
  void clear_version();
  static const int kVersionFieldNumber = 4;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // bytes masterid = 7;
  void clear_masterid();
  static const int kMasteridFieldNumber = 7;
  const ::std::string& masterid() const;
  void set_masterid(const ::std::string& value);
  #if LANG_CXX11
  void set_masterid(::std::string&& value);
  #endif
  void set_masterid(const char* value);
  void set_masterid(const void* value, size_t size);
  ::std::string* mutable_masterid();
  ::std::string* release_masterid();
  void set_allocated_masterid(::std::string* masterid);

  // bytes mastername = 8;
  void clear_mastername();
  static const int kMasternameFieldNumber = 8;
  const ::std::string& mastername() const;
  void set_mastername(const ::std::string& value);
  #if LANG_CXX11
  void set_mastername(::std::string&& value);
  #endif
  void set_mastername(const char* value);
  void set_mastername(const void* value, size_t size);
  ::std::string* mutable_mastername();
  ::std::string* release_mastername();
  void set_allocated_mastername(::std::string* mastername);

  // bytes password = 9;
  void clear_password();
  static const int kPasswordFieldNumber = 9;
  const ::std::string& password() const;
  void set_password(const ::std::string& value);
  #if LANG_CXX11
  void set_password(::std::string&& value);
  #endif
  void set_password(const char* value);
  void set_password(const void* value, size_t size);
  ::std::string* mutable_password();
  ::std::string* release_password();
  void set_allocated_password(::std::string* password);

  // uint64 roomid = 2;
  void clear_roomid();
  static const int kRoomidFieldNumber = 2;
  ::google::protobuf::uint64 roomid() const;
  void set_roomid(::google::protobuf::uint64 value);

  // uint32 matchid = 1;
  void clear_matchid();
  static const int kMatchidFieldNumber = 1;
  ::google::protobuf::uint32 matchid() const;
  void set_matchid(::google::protobuf::uint32 value);

  // uint32 maxplayer = 5;
  void clear_maxplayer();
  static const int kMaxplayerFieldNumber = 5;
  ::google::protobuf::uint32 maxplayer() const;
  void set_maxplayer(::google::protobuf::uint32 value);

  // uint32 nowplayer = 6;
  void clear_nowplayer();
  static const int kNowplayerFieldNumber = 6;
  ::google::protobuf::uint32 nowplayer() const;
  void set_nowplayer(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBMatchRoom)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMatchPlayer > player_;
  ::google::protobuf::internal::ArenaStringPtr title_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::internal::ArenaStringPtr masterid_;
  ::google::protobuf::internal::ArenaStringPtr mastername_;
  ::google::protobuf::internal::ArenaStringPtr password_;
  ::google::protobuf::uint64 roomid_;
  ::google::protobuf::uint32 matchid_;
  ::google::protobuf::uint32 maxplayer_;
  ::google::protobuf::uint32 nowplayer_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_DefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBMatchPlayer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBMatchPlayer) */ {
 public:
  PBMatchPlayer();
  virtual ~PBMatchPlayer();

  PBMatchPlayer(const PBMatchPlayer& from);

  inline PBMatchPlayer& operator=(const PBMatchPlayer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMatchPlayer(PBMatchPlayer&& from) noexcept
    : PBMatchPlayer() {
    *this = ::std::move(from);
  }

  inline PBMatchPlayer& operator=(PBMatchPlayer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMatchPlayer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMatchPlayer* internal_default_instance() {
    return reinterpret_cast<const PBMatchPlayer*>(
               &_PBMatchPlayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(PBMatchPlayer* other);
  friend void swap(PBMatchPlayer& a, PBMatchPlayer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMatchPlayer* New() const final {
    return CreateMaybeMessage<PBMatchPlayer>(NULL);
  }

  PBMatchPlayer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMatchPlayer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMatchPlayer& from);
  void MergeFrom(const PBMatchPlayer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMatchPlayer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint64 serverid = 3;
  void clear_serverid();
  static const int kServeridFieldNumber = 3;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // bool isrobot = 4;
  void clear_isrobot();
  static const int kIsrobotFieldNumber = 4;
  bool isrobot() const;
  void set_isrobot(bool value);

  // uint32 heroid = 5;
  void clear_heroid();
  static const int kHeroidFieldNumber = 5;
  ::google::protobuf::uint32 heroid() const;
  void set_heroid(::google::protobuf::uint32 value);

  // uint32 grade = 6;
  void clear_grade();
  static const int kGradeFieldNumber = 6;
  ::google::protobuf::uint32 grade() const;
  void set_grade(::google::protobuf::uint32 value);

  // uint32 effectid = 7;
  void clear_effectid();
  static const int kEffectidFieldNumber = 7;
  ::google::protobuf::uint32 effectid() const;
  void set_effectid(::google::protobuf::uint32 value);

  // uint32 footid = 8;
  void clear_footid();
  static const int kFootidFieldNumber = 8;
  ::google::protobuf::uint32 footid() const;
  void set_footid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBMatchPlayer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint64 serverid_;
  bool isrobot_;
  ::google::protobuf::uint32 heroid_;
  ::google::protobuf::uint32 grade_;
  ::google::protobuf::uint32 effectid_;
  ::google::protobuf::uint32 footid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_DefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBBalanceData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBBalanceData) */ {
 public:
  PBBalanceData();
  virtual ~PBBalanceData();

  PBBalanceData(const PBBalanceData& from);

  inline PBBalanceData& operator=(const PBBalanceData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBBalanceData(PBBalanceData&& from) noexcept
    : PBBalanceData() {
    *this = ::std::move(from);
  }

  inline PBBalanceData& operator=(PBBalanceData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBalanceData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBBalanceData* internal_default_instance() {
    return reinterpret_cast<const PBBalanceData*>(
               &_PBBalanceData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(PBBalanceData* other);
  friend void swap(PBBalanceData& a, PBBalanceData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBBalanceData* New() const final {
    return CreateMaybeMessage<PBBalanceData>(NULL);
  }

  PBBalanceData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBBalanceData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBBalanceData& from);
  void MergeFrom(const PBBalanceData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBBalanceData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // sint32 value = 2;
  void clear_value();
  static const int kValueFieldNumber = 2;
  ::google::protobuf::int32 value() const;
  void set_value(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBBalanceData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::int32 value_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_DefineMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBBattleBalance : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBBattleBalance) */ {
 public:
  PBBattleBalance();
  virtual ~PBBattleBalance();

  PBBattleBalance(const PBBattleBalance& from);

  inline PBBattleBalance& operator=(const PBBattleBalance& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBBattleBalance(PBBattleBalance&& from) noexcept
    : PBBattleBalance() {
    *this = ::std::move(from);
  }

  inline PBBattleBalance& operator=(PBBattleBalance&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBBattleBalance& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBBattleBalance* internal_default_instance() {
    return reinterpret_cast<const PBBattleBalance*>(
               &_PBBattleBalance_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(PBBattleBalance* other);
  friend void swap(PBBattleBalance& a, PBBattleBalance& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBBattleBalance* New() const final {
    return CreateMaybeMessage<PBBattleBalance>(NULL);
  }

  PBBattleBalance* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBBattleBalance>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBBattleBalance& from);
  void MergeFrom(const PBBattleBalance& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBBattleBalance* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBBalanceData data = 2;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 2;
  ::KFMsg::PBBalanceData* mutable_data(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBalanceData >*
      mutable_data();
  const ::KFMsg::PBBalanceData& data(int index) const;
  ::KFMsg::PBBalanceData* add_data();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBalanceData >&
      data() const;

  // uint32 ranking = 1;
  void clear_ranking();
  static const int kRankingFieldNumber = 1;
  ::google::protobuf::uint32 ranking() const;
  void set_ranking(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBBattleBalance)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBalanceData > data_;
  ::google::protobuf::uint32 ranking_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_DefineMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PBMatchRoom

// uint32 matchid = 1;
inline void PBMatchRoom::clear_matchid() {
  matchid_ = 0u;
}
inline ::google::protobuf::uint32 PBMatchRoom::matchid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.matchid)
  return matchid_;
}
inline void PBMatchRoom::set_matchid(::google::protobuf::uint32 value) {
  
  matchid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchRoom.matchid)
}

// uint64 roomid = 2;
inline void PBMatchRoom::clear_roomid() {
  roomid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMatchRoom::roomid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.roomid)
  return roomid_;
}
inline void PBMatchRoom::set_roomid(::google::protobuf::uint64 value) {
  
  roomid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchRoom.roomid)
}

// bytes title = 3;
inline void PBMatchRoom::clear_title() {
  title_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBMatchRoom::title() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.title)
  return title_.GetNoArena();
}
inline void PBMatchRoom::set_title(const ::std::string& value) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchRoom.title)
}
#if LANG_CXX11
inline void PBMatchRoom::set_title(::std::string&& value) {
  
  title_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBMatchRoom.title)
}
#endif
inline void PBMatchRoom::set_title(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBMatchRoom.title)
}
inline void PBMatchRoom::set_title(const void* value, size_t size) {
  
  title_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBMatchRoom.title)
}
inline ::std::string* PBMatchRoom::mutable_title() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBMatchRoom.title)
  return title_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMatchRoom::release_title() {
  // @@protoc_insertion_point(field_release:KFMsg.PBMatchRoom.title)
  
  return title_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMatchRoom::set_allocated_title(::std::string* title) {
  if (title != NULL) {
    
  } else {
    
  }
  title_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), title);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBMatchRoom.title)
}

// bytes version = 4;
inline void PBMatchRoom::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBMatchRoom::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.version)
  return version_.GetNoArena();
}
inline void PBMatchRoom::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchRoom.version)
}
#if LANG_CXX11
inline void PBMatchRoom::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBMatchRoom.version)
}
#endif
inline void PBMatchRoom::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBMatchRoom.version)
}
inline void PBMatchRoom::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBMatchRoom.version)
}
inline ::std::string* PBMatchRoom::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBMatchRoom.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMatchRoom::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.PBMatchRoom.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMatchRoom::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBMatchRoom.version)
}

// uint32 maxplayer = 5;
inline void PBMatchRoom::clear_maxplayer() {
  maxplayer_ = 0u;
}
inline ::google::protobuf::uint32 PBMatchRoom::maxplayer() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.maxplayer)
  return maxplayer_;
}
inline void PBMatchRoom::set_maxplayer(::google::protobuf::uint32 value) {
  
  maxplayer_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchRoom.maxplayer)
}

// uint32 nowplayer = 6;
inline void PBMatchRoom::clear_nowplayer() {
  nowplayer_ = 0u;
}
inline ::google::protobuf::uint32 PBMatchRoom::nowplayer() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.nowplayer)
  return nowplayer_;
}
inline void PBMatchRoom::set_nowplayer(::google::protobuf::uint32 value) {
  
  nowplayer_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchRoom.nowplayer)
}

// bytes masterid = 7;
inline void PBMatchRoom::clear_masterid() {
  masterid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBMatchRoom::masterid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.masterid)
  return masterid_.GetNoArena();
}
inline void PBMatchRoom::set_masterid(const ::std::string& value) {
  
  masterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchRoom.masterid)
}
#if LANG_CXX11
inline void PBMatchRoom::set_masterid(::std::string&& value) {
  
  masterid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBMatchRoom.masterid)
}
#endif
inline void PBMatchRoom::set_masterid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  masterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBMatchRoom.masterid)
}
inline void PBMatchRoom::set_masterid(const void* value, size_t size) {
  
  masterid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBMatchRoom.masterid)
}
inline ::std::string* PBMatchRoom::mutable_masterid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBMatchRoom.masterid)
  return masterid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMatchRoom::release_masterid() {
  // @@protoc_insertion_point(field_release:KFMsg.PBMatchRoom.masterid)
  
  return masterid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMatchRoom::set_allocated_masterid(::std::string* masterid) {
  if (masterid != NULL) {
    
  } else {
    
  }
  masterid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), masterid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBMatchRoom.masterid)
}

// bytes mastername = 8;
inline void PBMatchRoom::clear_mastername() {
  mastername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBMatchRoom::mastername() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.mastername)
  return mastername_.GetNoArena();
}
inline void PBMatchRoom::set_mastername(const ::std::string& value) {
  
  mastername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchRoom.mastername)
}
#if LANG_CXX11
inline void PBMatchRoom::set_mastername(::std::string&& value) {
  
  mastername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBMatchRoom.mastername)
}
#endif
inline void PBMatchRoom::set_mastername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  mastername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBMatchRoom.mastername)
}
inline void PBMatchRoom::set_mastername(const void* value, size_t size) {
  
  mastername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBMatchRoom.mastername)
}
inline ::std::string* PBMatchRoom::mutable_mastername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBMatchRoom.mastername)
  return mastername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMatchRoom::release_mastername() {
  // @@protoc_insertion_point(field_release:KFMsg.PBMatchRoom.mastername)
  
  return mastername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMatchRoom::set_allocated_mastername(::std::string* mastername) {
  if (mastername != NULL) {
    
  } else {
    
  }
  mastername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), mastername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBMatchRoom.mastername)
}

// bytes password = 9;
inline void PBMatchRoom::clear_password() {
  password_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBMatchRoom::password() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.password)
  return password_.GetNoArena();
}
inline void PBMatchRoom::set_password(const ::std::string& value) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchRoom.password)
}
#if LANG_CXX11
inline void PBMatchRoom::set_password(::std::string&& value) {
  
  password_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBMatchRoom.password)
}
#endif
inline void PBMatchRoom::set_password(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBMatchRoom.password)
}
inline void PBMatchRoom::set_password(const void* value, size_t size) {
  
  password_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBMatchRoom.password)
}
inline ::std::string* PBMatchRoom::mutable_password() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBMatchRoom.password)
  return password_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMatchRoom::release_password() {
  // @@protoc_insertion_point(field_release:KFMsg.PBMatchRoom.password)
  
  return password_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMatchRoom::set_allocated_password(::std::string* password) {
  if (password != NULL) {
    
  } else {
    
  }
  password_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), password);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBMatchRoom.password)
}

// repeated .KFMsg.PBMatchPlayer player = 20;
inline int PBMatchRoom::player_size() const {
  return player_.size();
}
inline void PBMatchRoom::clear_player() {
  player_.Clear();
}
inline ::KFMsg::PBMatchPlayer* PBMatchRoom::mutable_player(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBMatchRoom.player)
  return player_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMatchPlayer >*
PBMatchRoom::mutable_player() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBMatchRoom.player)
  return &player_;
}
inline const ::KFMsg::PBMatchPlayer& PBMatchRoom::player(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchRoom.player)
  return player_.Get(index);
}
inline ::KFMsg::PBMatchPlayer* PBMatchRoom::add_player() {
  // @@protoc_insertion_point(field_add:KFMsg.PBMatchRoom.player)
  return player_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMatchPlayer >&
PBMatchRoom::player() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBMatchRoom.player)
  return player_;
}

// -------------------------------------------------------------------

// PBMatchPlayer

// uint64 id = 1;
inline void PBMatchPlayer::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMatchPlayer::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchPlayer.id)
  return id_;
}
inline void PBMatchPlayer::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchPlayer.id)
}

// bytes name = 2;
inline void PBMatchPlayer::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBMatchPlayer::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchPlayer.name)
  return name_.GetNoArena();
}
inline void PBMatchPlayer::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchPlayer.name)
}
#if LANG_CXX11
inline void PBMatchPlayer::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBMatchPlayer.name)
}
#endif
inline void PBMatchPlayer::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBMatchPlayer.name)
}
inline void PBMatchPlayer::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBMatchPlayer.name)
}
inline ::std::string* PBMatchPlayer::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBMatchPlayer.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBMatchPlayer::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBMatchPlayer.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBMatchPlayer::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBMatchPlayer.name)
}

// uint64 serverid = 3;
inline void PBMatchPlayer::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBMatchPlayer::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchPlayer.serverid)
  return serverid_;
}
inline void PBMatchPlayer::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchPlayer.serverid)
}

// bool isrobot = 4;
inline void PBMatchPlayer::clear_isrobot() {
  isrobot_ = false;
}
inline bool PBMatchPlayer::isrobot() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchPlayer.isrobot)
  return isrobot_;
}
inline void PBMatchPlayer::set_isrobot(bool value) {
  
  isrobot_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchPlayer.isrobot)
}

// uint32 heroid = 5;
inline void PBMatchPlayer::clear_heroid() {
  heroid_ = 0u;
}
inline ::google::protobuf::uint32 PBMatchPlayer::heroid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchPlayer.heroid)
  return heroid_;
}
inline void PBMatchPlayer::set_heroid(::google::protobuf::uint32 value) {
  
  heroid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchPlayer.heroid)
}

// uint32 grade = 6;
inline void PBMatchPlayer::clear_grade() {
  grade_ = 0u;
}
inline ::google::protobuf::uint32 PBMatchPlayer::grade() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchPlayer.grade)
  return grade_;
}
inline void PBMatchPlayer::set_grade(::google::protobuf::uint32 value) {
  
  grade_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchPlayer.grade)
}

// uint32 effectid = 7;
inline void PBMatchPlayer::clear_effectid() {
  effectid_ = 0u;
}
inline ::google::protobuf::uint32 PBMatchPlayer::effectid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchPlayer.effectid)
  return effectid_;
}
inline void PBMatchPlayer::set_effectid(::google::protobuf::uint32 value) {
  
  effectid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchPlayer.effectid)
}

// uint32 footid = 8;
inline void PBMatchPlayer::clear_footid() {
  footid_ = 0u;
}
inline ::google::protobuf::uint32 PBMatchPlayer::footid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBMatchPlayer.footid)
  return footid_;
}
inline void PBMatchPlayer::set_footid(::google::protobuf::uint32 value) {
  
  footid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBMatchPlayer.footid)
}

// -------------------------------------------------------------------

// PBBalanceData

// string name = 1;
inline void PBBalanceData::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBBalanceData::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBalanceData.name)
  return name_.GetNoArena();
}
inline void PBBalanceData::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBBalanceData.name)
}
#if LANG_CXX11
inline void PBBalanceData::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBBalanceData.name)
}
#endif
inline void PBBalanceData::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBBalanceData.name)
}
inline void PBBalanceData::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBBalanceData.name)
}
inline ::std::string* PBBalanceData::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBalanceData.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBBalanceData::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBBalanceData.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBBalanceData::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBBalanceData.name)
}

// sint32 value = 2;
inline void PBBalanceData::clear_value() {
  value_ = 0;
}
inline ::google::protobuf::int32 PBBalanceData::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBalanceData.value)
  return value_;
}
inline void PBBalanceData::set_value(::google::protobuf::int32 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBalanceData.value)
}

// -------------------------------------------------------------------

// PBBattleBalance

// uint32 ranking = 1;
inline void PBBattleBalance::clear_ranking() {
  ranking_ = 0u;
}
inline ::google::protobuf::uint32 PBBattleBalance::ranking() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleBalance.ranking)
  return ranking_;
}
inline void PBBattleBalance::set_ranking(::google::protobuf::uint32 value) {
  
  ranking_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBBattleBalance.ranking)
}

// repeated .KFMsg.PBBalanceData data = 2;
inline int PBBattleBalance::data_size() const {
  return data_.size();
}
inline void PBBattleBalance::clear_data() {
  data_.Clear();
}
inline ::KFMsg::PBBalanceData* PBBattleBalance::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.PBBattleBalance.data)
  return data_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBalanceData >*
PBBattleBalance::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.PBBattleBalance.data)
  return &data_;
}
inline const ::KFMsg::PBBalanceData& PBBattleBalance::data(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.PBBattleBalance.data)
  return data_.Get(index);
}
inline ::KFMsg::PBBalanceData* PBBattleBalance::add_data() {
  // @@protoc_insertion_point(field_add:KFMsg.PBBattleBalance.data)
  return data_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBBalanceData >&
PBBattleBalance::data() const {
  // @@protoc_insertion_point(field_list:KFMsg.PBBattleBalance.data)
  return data_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

// @@protoc_insertion_point(global_scope)


#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif
#endif  // PROTOBUF_INCLUDED_DefineMessage_2eproto
