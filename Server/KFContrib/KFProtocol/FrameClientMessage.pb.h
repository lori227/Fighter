// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameClientMessage.proto

#ifndef PROTOBUF_INCLUDED_FrameClientMessage_2eproto
#define PROTOBUF_INCLUDED_FrameClientMessage_2eproto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4946)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "FrameDefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_FrameClientMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_FrameClientMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[73];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_FrameClientMessage_2eproto
namespace KFMsg {
class MsgAchieveRewardReq;
class MsgAchieveRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgAchieveRewardReqDefaultTypeInternal _MsgAchieveRewardReq_default_instance_;
class MsgActivityRewardReq;
class MsgActivityRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgActivityRewardReqDefaultTypeInternal _MsgActivityRewardReq_default_instance_;
class MsgAddRelationReq;
class MsgAddRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgAddRelationReqDefaultTypeInternal _MsgAddRelationReq_default_instance_;
class MsgApplyPayOrderAck;
class MsgApplyPayOrderAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgApplyPayOrderAckDefaultTypeInternal _MsgApplyPayOrderAck_default_instance_;
class MsgApplyPayOrderReq;
class MsgApplyPayOrderReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgApplyPayOrderReqDefaultTypeInternal _MsgApplyPayOrderReq_default_instance_;
class MsgCancelSyncReq;
class MsgCancelSyncReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCancelSyncReqDefaultTypeInternal _MsgCancelSyncReq_default_instance_;
class MsgCommandReq;
class MsgCommandReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCommandReqDefaultTypeInternal _MsgCommandReq_default_instance_;
class MsgCompoundReq;
class MsgCompoundReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgCompoundReqDefaultTypeInternal _MsgCompoundReq_default_instance_;
class MsgDebugShowDrop;
class MsgDebugShowDropDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDebugShowDropDefaultTypeInternal _MsgDebugShowDrop_default_instance_;
class MsgDelRelationReq;
class MsgDelRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDelRelationReqDefaultTypeInternal _MsgDelRelationReq_default_instance_;
class MsgDeleteMailReq;
class MsgDeleteMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgDeleteMailReqDefaultTypeInternal _MsgDeleteMailReq_default_instance_;
class MsgFriendChatReq;
class MsgFriendChatReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgFriendChatReqDefaultTypeInternal _MsgFriendChatReq_default_instance_;
class MsgLoginAck;
class MsgLoginAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginAckDefaultTypeInternal _MsgLoginAck_default_instance_;
class MsgLoginReq;
class MsgLoginReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLoginReqDefaultTypeInternal _MsgLoginReq_default_instance_;
class MsgLogoutAck;
class MsgLogoutAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLogoutAckDefaultTypeInternal _MsgLogoutAck_default_instance_;
class MsgLogoutReq;
class MsgLogoutReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgLogoutReqDefaultTypeInternal _MsgLogoutReq_default_instance_;
class MsgMailRewardReq;
class MsgMailRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgMailRewardReqDefaultTypeInternal _MsgMailRewardReq_default_instance_;
class MsgMoveAllItemReq;
class MsgMoveAllItemReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgMoveAllItemReqDefaultTypeInternal _MsgMoveAllItemReq_default_instance_;
class MsgMoveItemReq;
class MsgMoveItemReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgMoveItemReqDefaultTypeInternal _MsgMoveItemReq_default_instance_;
class MsgPayResultReq;
class MsgPayResultReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgPayResultReqDefaultTypeInternal _MsgPayResultReq_default_instance_;
class MsgQueryBasicAck;
class MsgQueryBasicAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryBasicAckDefaultTypeInternal _MsgQueryBasicAck_default_instance_;
class MsgQueryBasicReq;
class MsgQueryBasicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryBasicReqDefaultTypeInternal _MsgQueryBasicReq_default_instance_;
class MsgQueryFriendRankListAck;
class MsgQueryFriendRankListAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryFriendRankListAckDefaultTypeInternal _MsgQueryFriendRankListAck_default_instance_;
class MsgQueryFriendRankListReq;
class MsgQueryFriendRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryFriendRankListReqDefaultTypeInternal _MsgQueryFriendRankListReq_default_instance_;
class MsgQueryMailReq;
class MsgQueryMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryMailReqDefaultTypeInternal _MsgQueryMailReq_default_instance_;
class MsgQueryPayReq;
class MsgQueryPayReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPayReqDefaultTypeInternal _MsgQueryPayReq_default_instance_;
class MsgQueryPlayerAck;
class MsgQueryPlayerAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPlayerAckDefaultTypeInternal _MsgQueryPlayerAck_default_instance_;
class MsgQueryPlayerReq;
class MsgQueryPlayerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryPlayerReqDefaultTypeInternal _MsgQueryPlayerReq_default_instance_;
class MsgQueryRankListAck;
class MsgQueryRankListAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryRankListAckDefaultTypeInternal _MsgQueryRankListAck_default_instance_;
class MsgQueryRankListReq;
class MsgQueryRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgQueryRankListReqDefaultTypeInternal _MsgQueryRankListReq_default_instance_;
class MsgRemoveDataReq;
class MsgRemoveDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgRemoveDataReqDefaultTypeInternal _MsgRemoveDataReq_default_instance_;
class MsgRemoveItemCountReq;
class MsgRemoveItemCountReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgRemoveItemCountReqDefaultTypeInternal _MsgRemoveItemCountReq_default_instance_;
class MsgRemoveItemReq;
class MsgRemoveItemReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgRemoveItemReqDefaultTypeInternal _MsgRemoveItemReq_default_instance_;
class MsgReplyRelationInviteReq;
class MsgReplyRelationInviteReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgReplyRelationInviteReqDefaultTypeInternal _MsgReplyRelationInviteReq_default_instance_;
class MsgRequestSyncReq;
class MsgRequestSyncReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgRequestSyncReqDefaultTypeInternal _MsgRequestSyncReq_default_instance_;
class MsgResultDisplay;
class MsgResultDisplayDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgResultDisplayDefaultTypeInternal _MsgResultDisplay_default_instance_;
class MsgSellItemAck;
class MsgSellItemAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSellItemAckDefaultTypeInternal _MsgSellItemAck_default_instance_;
class MsgSellItemReq;
class MsgSellItemReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSellItemReqDefaultTypeInternal _MsgSellItemReq_default_instance_;
class MsgServerChatReq;
class MsgServerChatReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgServerChatReqDefaultTypeInternal _MsgServerChatReq_default_instance_;
class MsgSetNameReq;
class MsgSetNameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetNameReqDefaultTypeInternal _MsgSetNameReq_default_instance_;
class MsgSetRefuseRelationInviteReq;
class MsgSetRefuseRelationInviteReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetRefuseRelationInviteReqDefaultTypeInternal _MsgSetRefuseRelationInviteReq_default_instance_;
class MsgSetSexReq;
class MsgSetSexReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSetSexReqDefaultTypeInternal _MsgSetSexReq_default_instance_;
class MsgSevenSignRewardReq;
class MsgSevenSignRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSevenSignRewardReqDefaultTypeInternal _MsgSevenSignRewardReq_default_instance_;
class MsgShowElement;
class MsgShowElementDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgShowElementDefaultTypeInternal _MsgShowElement_default_instance_;
class MsgSortItemReq;
class MsgSortItemReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSortItemReqDefaultTypeInternal _MsgSortItemReq_default_instance_;
class MsgStoreBuyGoodsReq;
class MsgStoreBuyGoodsReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgStoreBuyGoodsReqDefaultTypeInternal _MsgStoreBuyGoodsReq_default_instance_;
class MsgStoreRefreshReq;
class MsgStoreRefreshReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgStoreRefreshReqDefaultTypeInternal _MsgStoreRefreshReq_default_instance_;
class MsgSyncAddData;
class MsgSyncAddDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncAddDataDefaultTypeInternal _MsgSyncAddData_default_instance_;
class MsgSyncOnlineData;
class MsgSyncOnlineDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncOnlineDataDefaultTypeInternal _MsgSyncOnlineData_default_instance_;
class MsgSyncRemoveData;
class MsgSyncRemoveDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncRemoveDataDefaultTypeInternal _MsgSyncRemoveData_default_instance_;
class MsgSyncUpdateData;
class MsgSyncUpdateDataDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgSyncUpdateDataDefaultTypeInternal _MsgSyncUpdateData_default_instance_;
class MsgTaskAddReq;
class MsgTaskAddReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTaskAddReqDefaultTypeInternal _MsgTaskAddReq_default_instance_;
class MsgTaskReceiveReq;
class MsgTaskReceiveReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTaskReceiveReqDefaultTypeInternal _MsgTaskReceiveReq_default_instance_;
class MsgTaskRemoveReq;
class MsgTaskRemoveReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTaskRemoveReqDefaultTypeInternal _MsgTaskRemoveReq_default_instance_;
class MsgTaskRewardReq;
class MsgTaskRewardReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTaskRewardReqDefaultTypeInternal _MsgTaskRewardReq_default_instance_;
class MsgTeamAgreeReq;
class MsgTeamAgreeReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTeamAgreeReqDefaultTypeInternal _MsgTeamAgreeReq_default_instance_;
class MsgTeamApplyReq;
class MsgTeamApplyReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTeamApplyReqDefaultTypeInternal _MsgTeamApplyReq_default_instance_;
class MsgTeamCreateReq;
class MsgTeamCreateReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTeamCreateReqDefaultTypeInternal _MsgTeamCreateReq_default_instance_;
class MsgTeamInviteReq;
class MsgTeamInviteReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTeamInviteReqDefaultTypeInternal _MsgTeamInviteReq_default_instance_;
class MsgTeamKickReq;
class MsgTeamKickReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTeamKickReqDefaultTypeInternal _MsgTeamKickReq_default_instance_;
class MsgTeamLeaveReq;
class MsgTeamLeaveReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTeamLeaveReqDefaultTypeInternal _MsgTeamLeaveReq_default_instance_;
class MsgTeamTellApply;
class MsgTeamTellApplyDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTeamTellApplyDefaultTypeInternal _MsgTeamTellApply_default_instance_;
class MsgTeamTellInvite;
class MsgTeamTellInviteDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTeamTellInviteDefaultTypeInternal _MsgTeamTellInvite_default_instance_;
class MsgTellBeKick;
class MsgTellBeKickDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellBeKickDefaultTypeInternal _MsgTellBeKick_default_instance_;
class MsgTellFriendChat;
class MsgTellFriendChatDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellFriendChatDefaultTypeInternal _MsgTellFriendChat_default_instance_;
class MsgTellNotice;
class MsgTellNoticeDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellNoticeDefaultTypeInternal _MsgTellNotice_default_instance_;
class MsgTellServerChat;
class MsgTellServerChatDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellServerChatDefaultTypeInternal _MsgTellServerChat_default_instance_;
class MsgTellShutDown;
class MsgTellShutDownDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgTellShutDownDefaultTypeInternal _MsgTellShutDown_default_instance_;
class MsgUpdateIntReq;
class MsgUpdateIntReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgUpdateIntReqDefaultTypeInternal _MsgUpdateIntReq_default_instance_;
class MsgUpdateStrReq;
class MsgUpdateStrReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgUpdateStrReqDefaultTypeInternal _MsgUpdateStrReq_default_instance_;
class MsgUseItemReq;
class MsgUseItemReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgUseItemReqDefaultTypeInternal _MsgUseItemReq_default_instance_;
class MsgViewMailReq;
class MsgViewMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern MsgViewMailReqDefaultTypeInternal _MsgViewMailReq_default_instance_;
class PBDebugDrop;
class PBDebugDropDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBDebugDropDefaultTypeInternal _PBDebugDrop_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::MsgAchieveRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgAchieveRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgActivityRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgActivityRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgAddRelationReq* Arena::CreateMaybeMessage<::KFMsg::MsgAddRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgApplyPayOrderAck* Arena::CreateMaybeMessage<::KFMsg::MsgApplyPayOrderAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgApplyPayOrderReq* Arena::CreateMaybeMessage<::KFMsg::MsgApplyPayOrderReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCancelSyncReq* Arena::CreateMaybeMessage<::KFMsg::MsgCancelSyncReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCommandReq* Arena::CreateMaybeMessage<::KFMsg::MsgCommandReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgCompoundReq* Arena::CreateMaybeMessage<::KFMsg::MsgCompoundReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDebugShowDrop* Arena::CreateMaybeMessage<::KFMsg::MsgDebugShowDrop>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDelRelationReq* Arena::CreateMaybeMessage<::KFMsg::MsgDelRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgDeleteMailReq* Arena::CreateMaybeMessage<::KFMsg::MsgDeleteMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgFriendChatReq* Arena::CreateMaybeMessage<::KFMsg::MsgFriendChatReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginAck* Arena::CreateMaybeMessage<::KFMsg::MsgLoginAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLoginReq* Arena::CreateMaybeMessage<::KFMsg::MsgLoginReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLogoutAck* Arena::CreateMaybeMessage<::KFMsg::MsgLogoutAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgLogoutReq* Arena::CreateMaybeMessage<::KFMsg::MsgLogoutReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgMailRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgMailRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgMoveAllItemReq* Arena::CreateMaybeMessage<::KFMsg::MsgMoveAllItemReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgMoveItemReq* Arena::CreateMaybeMessage<::KFMsg::MsgMoveItemReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgPayResultReq* Arena::CreateMaybeMessage<::KFMsg::MsgPayResultReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryBasicAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryBasicAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryBasicReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryBasicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryFriendRankListAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryFriendRankListAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryFriendRankListReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryFriendRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryMailReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPayReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPayReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPlayerAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPlayerAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryPlayerReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryPlayerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryRankListAck* Arena::CreateMaybeMessage<::KFMsg::MsgQueryRankListAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgQueryRankListReq* Arena::CreateMaybeMessage<::KFMsg::MsgQueryRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgRemoveDataReq* Arena::CreateMaybeMessage<::KFMsg::MsgRemoveDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgRemoveItemCountReq* Arena::CreateMaybeMessage<::KFMsg::MsgRemoveItemCountReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgRemoveItemReq* Arena::CreateMaybeMessage<::KFMsg::MsgRemoveItemReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgReplyRelationInviteReq* Arena::CreateMaybeMessage<::KFMsg::MsgReplyRelationInviteReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgRequestSyncReq* Arena::CreateMaybeMessage<::KFMsg::MsgRequestSyncReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgResultDisplay* Arena::CreateMaybeMessage<::KFMsg::MsgResultDisplay>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSellItemAck* Arena::CreateMaybeMessage<::KFMsg::MsgSellItemAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSellItemReq* Arena::CreateMaybeMessage<::KFMsg::MsgSellItemReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgServerChatReq* Arena::CreateMaybeMessage<::KFMsg::MsgServerChatReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetNameReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetNameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetRefuseRelationInviteReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetRefuseRelationInviteReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSetSexReq* Arena::CreateMaybeMessage<::KFMsg::MsgSetSexReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSevenSignRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgSevenSignRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgShowElement* Arena::CreateMaybeMessage<::KFMsg::MsgShowElement>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSortItemReq* Arena::CreateMaybeMessage<::KFMsg::MsgSortItemReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgStoreBuyGoodsReq* Arena::CreateMaybeMessage<::KFMsg::MsgStoreBuyGoodsReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgStoreRefreshReq* Arena::CreateMaybeMessage<::KFMsg::MsgStoreRefreshReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncAddData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncAddData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncOnlineData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncOnlineData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncRemoveData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncRemoveData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgSyncUpdateData* Arena::CreateMaybeMessage<::KFMsg::MsgSyncUpdateData>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTaskAddReq* Arena::CreateMaybeMessage<::KFMsg::MsgTaskAddReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTaskReceiveReq* Arena::CreateMaybeMessage<::KFMsg::MsgTaskReceiveReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTaskRemoveReq* Arena::CreateMaybeMessage<::KFMsg::MsgTaskRemoveReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTaskRewardReq* Arena::CreateMaybeMessage<::KFMsg::MsgTaskRewardReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTeamAgreeReq* Arena::CreateMaybeMessage<::KFMsg::MsgTeamAgreeReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTeamApplyReq* Arena::CreateMaybeMessage<::KFMsg::MsgTeamApplyReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTeamCreateReq* Arena::CreateMaybeMessage<::KFMsg::MsgTeamCreateReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTeamInviteReq* Arena::CreateMaybeMessage<::KFMsg::MsgTeamInviteReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTeamKickReq* Arena::CreateMaybeMessage<::KFMsg::MsgTeamKickReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTeamLeaveReq* Arena::CreateMaybeMessage<::KFMsg::MsgTeamLeaveReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTeamTellApply* Arena::CreateMaybeMessage<::KFMsg::MsgTeamTellApply>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTeamTellInvite* Arena::CreateMaybeMessage<::KFMsg::MsgTeamTellInvite>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellBeKick* Arena::CreateMaybeMessage<::KFMsg::MsgTellBeKick>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellFriendChat* Arena::CreateMaybeMessage<::KFMsg::MsgTellFriendChat>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellNotice* Arena::CreateMaybeMessage<::KFMsg::MsgTellNotice>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellServerChat* Arena::CreateMaybeMessage<::KFMsg::MsgTellServerChat>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgTellShutDown* Arena::CreateMaybeMessage<::KFMsg::MsgTellShutDown>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgUpdateIntReq* Arena::CreateMaybeMessage<::KFMsg::MsgUpdateIntReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgUpdateStrReq* Arena::CreateMaybeMessage<::KFMsg::MsgUpdateStrReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgUseItemReq* Arena::CreateMaybeMessage<::KFMsg::MsgUseItemReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::MsgViewMailReq* Arena::CreateMaybeMessage<::KFMsg::MsgViewMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBDebugDrop* Arena::CreateMaybeMessage<::KFMsg::PBDebugDrop>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum FrameClientProtocol {
  MSG_FRAME_CLIENT_BEGIN = 0,
  MSG_RESULT_DISPLAY = 1,
  MSG_COMMAND_REQ = 2,
  MSG_TELL_NOTICE = 3,
  MSG_DEBUG_SHOW_DROP = 99,
  MSG_LOGIN_REQ = 100,
  MSG_LOGIN_ACK = 101,
  MSG_LOGOUT_REQ = 102,
  MSG_LOGOUT_ACK = 103,
  MSG_TELL_BE_KICK = 104,
  MSG_TELL_SHUTDOWN = 105,
  MSG_SYNC_ONLINE_DATA = 200,
  MSG_SYNC_UPDATE_DATA = 201,
  MSG_SYNC_ADD_DATA = 202,
  MSG_SYNC_REMOVE_DATA = 203,
  MSG_REMOVE_DATA_REQ = 204,
  MSG_QUERY_PLAYER_REQ = 205,
  MSG_QUERY_PLAYER_ACK = 206,
  MSG_QUERY_BASIC_REQ = 207,
  MSG_QUERY_BASIC_ACK = 208,
  MSG_SHOW_ELEMENT = 209,
  MSG_REQUEST_SYNC_REQ = 210,
  MSG_CANCEL_SYNC_REQ = 211,
  MSG_UPDATE_INT_REQ = 212,
  MSG_UPDATE_STR_REQ = 213,
  MSG_SET_NAME_REQ = 300,
  MSG_SET_SEX_REQ = 301,
  MSG_ACHIEVE_REWARD_REQ = 302,
  MSG_ACTIVITY_REWARD_REQ = 304,
  MSG_COMPOUND_REQ = 305,
  MSG_SEVEN_SIGN_REWARD_REQ = 307,
  MSG_MOVE_ITEM_REQ = 401,
  MSG_MOVE_ALL_ITEM_REQ = 402,
  MSG_SORT_ITEM_REQ = 403,
  MSG_REMOVE_ITEM_REQ = 404,
  MSG_REMOVE_ITEM_COUNT_REQ = 405,
  MSG_SELL_ITEM_REQ = 406,
  MSG_SELL_ITEM_ACK = 407,
  MSG_USE_ITEM_REQ = 408,
  MSG_VIEW_MAIL_REQ = 501,
  MSG_DELETE_MAIL_REQ = 502,
  MSG_QUERY_MAIL_REQ = 503,
  MSG_MAIL_REWARD_REQ = 504,
  MSG_STORE_BUY_GOODS_REQ = 511,
  MSG_STORE_REFRESH_REQ = 512,
  MSG_APPLY_PAY_ORDER_REQ = 531,
  MSG_APPLY_PAY_ORDER_ACK = 532,
  MSG_PAY_RESULT_REQ = 533,
  MSG_QUERY_PAY_REQ = 534,
  MSG_ADD_RELATION_REQ = 551,
  MSG_DEL_RELATION_REQ = 552,
  MSG_REPLY_RELATION_INVITE_REQ = 553,
  MSG_SET_REFUSE_RELATION_INVITE_REQ = 554,
  MSG_QUERY_RANK_LIST_REQ = 571,
  MSG_QUERY_RANK_LIST_ACK = 572,
  MSG_QUERY_FRIEND_RANK_LIST_REQ = 573,
  MSG_QUERY_FRIEND_RANK_LIST_ACK = 574,
  MSG_TASK_RECEIVE_REQ = 600,
  MSG_TASK_REWARD_REQ = 601,
  MSG_TASK_REMOVE_REQ = 602,
  MSG_TASK_ADD_REQ = 603,
  MSG_FRIEND_CHAT_REQ = 610,
  MSG_TELL_FRIEND_CHAT = 611,
  MSG_SERVER_CHAT_REQ = 612,
  MSG_TELL_SERVER_CHAT = 613,
  MSG_TEAM_CREATE_REQ = 630,
  MSG_TEAM_LEAVE_REQ = 631,
  MSG_TEAM_KICK_REQ = 632,
  MSG_TEAM_INVITE_REQ = 633,
  MSG_TEAM_APPLY_REQ = 634,
  MSG_TEAM_TELL_INVITE = 635,
  MSG_TEAM_TELL_APPLY = 636,
  MSG_TEAM_AGREE_REQ = 637,
  FrameClientProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FrameClientProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool FrameClientProtocol_IsValid(int value);
const FrameClientProtocol FrameClientProtocol_MIN = MSG_FRAME_CLIENT_BEGIN;
const FrameClientProtocol FrameClientProtocol_MAX = MSG_TEAM_AGREE_REQ;
const int FrameClientProtocol_ARRAYSIZE = FrameClientProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* FrameClientProtocol_descriptor();
inline const ::std::string& FrameClientProtocol_Name(FrameClientProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    FrameClientProtocol_descriptor(), value);
}
inline bool FrameClientProtocol_Parse(
    const ::std::string& name, FrameClientProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FrameClientProtocol>(
    FrameClientProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT MsgResultDisplay : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgResultDisplay) */ {
 public:
  MsgResultDisplay();
  virtual ~MsgResultDisplay();

  MsgResultDisplay(const MsgResultDisplay& from);

  inline MsgResultDisplay& operator=(const MsgResultDisplay& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgResultDisplay(MsgResultDisplay&& from) noexcept
    : MsgResultDisplay() {
    *this = ::std::move(from);
  }

  inline MsgResultDisplay& operator=(MsgResultDisplay&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgResultDisplay& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgResultDisplay* internal_default_instance() {
    return reinterpret_cast<const MsgResultDisplay*>(
               &_MsgResultDisplay_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(MsgResultDisplay* other);
  friend void swap(MsgResultDisplay& a, MsgResultDisplay& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgResultDisplay* New() const final {
    return CreateMaybeMessage<MsgResultDisplay>(NULL);
  }

  MsgResultDisplay* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgResultDisplay>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgResultDisplay& from);
  void MergeFrom(const MsgResultDisplay& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgResultDisplay* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes param = 2;
  int param_size() const;
  void clear_param();
  static const int kParamFieldNumber = 2;
  const ::std::string& param(int index) const;
  ::std::string* mutable_param(int index);
  void set_param(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_param(int index, ::std::string&& value);
  #endif
  void set_param(int index, const char* value);
  void set_param(int index, const void* value, size_t size);
  ::std::string* add_param();
  void add_param(const ::std::string& value);
  #if LANG_CXX11
  void add_param(::std::string&& value);
  #endif
  void add_param(const char* value);
  void add_param(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& param() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_param();

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgResultDisplay)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> param_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellNotice : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellNotice) */ {
 public:
  MsgTellNotice();
  virtual ~MsgTellNotice();

  MsgTellNotice(const MsgTellNotice& from);

  inline MsgTellNotice& operator=(const MsgTellNotice& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellNotice(MsgTellNotice&& from) noexcept
    : MsgTellNotice() {
    *this = ::std::move(from);
  }

  inline MsgTellNotice& operator=(MsgTellNotice&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellNotice& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellNotice* internal_default_instance() {
    return reinterpret_cast<const MsgTellNotice*>(
               &_MsgTellNotice_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(MsgTellNotice* other);
  friend void swap(MsgTellNotice& a, MsgTellNotice& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellNotice* New() const final {
    return CreateMaybeMessage<MsgTellNotice>(NULL);
  }

  MsgTellNotice* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellNotice>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellNotice& from);
  void MergeFrom(const MsgTellNotice& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellNotice* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBNotice notice = 1;
  int notice_size() const;
  void clear_notice();
  static const int kNoticeFieldNumber = 1;
  ::KFMsg::PBNotice* mutable_notice(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBNotice >*
      mutable_notice();
  const ::KFMsg::PBNotice& notice(int index) const;
  ::KFMsg::PBNotice* add_notice();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBNotice >&
      notice() const;

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellNotice)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBNotice > notice_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCommandReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCommandReq) */ {
 public:
  MsgCommandReq();
  virtual ~MsgCommandReq();

  MsgCommandReq(const MsgCommandReq& from);

  inline MsgCommandReq& operator=(const MsgCommandReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCommandReq(MsgCommandReq&& from) noexcept
    : MsgCommandReq() {
    *this = ::std::move(from);
  }

  inline MsgCommandReq& operator=(MsgCommandReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCommandReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCommandReq* internal_default_instance() {
    return reinterpret_cast<const MsgCommandReq*>(
               &_MsgCommandReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(MsgCommandReq* other);
  friend void swap(MsgCommandReq& a, MsgCommandReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCommandReq* New() const final {
    return CreateMaybeMessage<MsgCommandReq>(NULL);
  }

  MsgCommandReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCommandReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCommandReq& from);
  void MergeFrom(const MsgCommandReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCommandReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated bytes params = 2;
  int params_size() const;
  void clear_params();
  static const int kParamsFieldNumber = 2;
  const ::std::string& params(int index) const;
  ::std::string* mutable_params(int index);
  void set_params(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_params(int index, ::std::string&& value);
  #endif
  void set_params(int index, const char* value);
  void set_params(int index, const void* value, size_t size);
  ::std::string* add_params();
  void add_params(const ::std::string& value);
  #if LANG_CXX11
  void add_params(::std::string&& value);
  #endif
  void add_params(const char* value);
  void add_params(const void* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  // bytes command = 1;
  void clear_command();
  static const int kCommandFieldNumber = 1;
  const ::std::string& command() const;
  void set_command(const ::std::string& value);
  #if LANG_CXX11
  void set_command(::std::string&& value);
  #endif
  void set_command(const char* value);
  void set_command(const void* value, size_t size);
  ::std::string* mutable_command();
  ::std::string* release_command();
  void set_allocated_command(::std::string* command);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCommandReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;
  ::google::protobuf::internal::ArenaStringPtr command_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginReq) */ {
 public:
  MsgLoginReq();
  virtual ~MsgLoginReq();

  MsgLoginReq(const MsgLoginReq& from);

  inline MsgLoginReq& operator=(const MsgLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginReq(MsgLoginReq&& from) noexcept
    : MsgLoginReq() {
    *this = ::std::move(from);
  }

  inline MsgLoginReq& operator=(MsgLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginReq* internal_default_instance() {
    return reinterpret_cast<const MsgLoginReq*>(
               &_MsgLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(MsgLoginReq* other);
  friend void swap(MsgLoginReq& a, MsgLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginReq* New() const final {
    return CreateMaybeMessage<MsgLoginReq>(NULL);
  }

  MsgLoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginReq& from);
  void MergeFrom(const MsgLoginReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // bytes version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const void* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLoginAck) */ {
 public:
  MsgLoginAck();
  virtual ~MsgLoginAck();

  MsgLoginAck(const MsgLoginAck& from);

  inline MsgLoginAck& operator=(const MsgLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLoginAck(MsgLoginAck&& from) noexcept
    : MsgLoginAck() {
    *this = ::std::move(from);
  }

  inline MsgLoginAck& operator=(MsgLoginAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLoginAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLoginAck* internal_default_instance() {
    return reinterpret_cast<const MsgLoginAck*>(
               &_MsgLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(MsgLoginAck* other);
  friend void swap(MsgLoginAck& a, MsgLoginAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLoginAck* New() const final {
    return CreateMaybeMessage<MsgLoginAck>(NULL);
  }

  MsgLoginAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLoginAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLoginAck& from);
  void MergeFrom(const MsgLoginAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLoginAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject playerdata = 2;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 servertime = 3;
  void clear_servertime();
  static const int kServertimeFieldNumber = 3;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 servertime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLogoutReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLogoutReq) */ {
 public:
  MsgLogoutReq();
  virtual ~MsgLogoutReq();

  MsgLogoutReq(const MsgLogoutReq& from);

  inline MsgLogoutReq& operator=(const MsgLogoutReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLogoutReq(MsgLogoutReq&& from) noexcept
    : MsgLogoutReq() {
    *this = ::std::move(from);
  }

  inline MsgLogoutReq& operator=(MsgLogoutReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLogoutReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLogoutReq* internal_default_instance() {
    return reinterpret_cast<const MsgLogoutReq*>(
               &_MsgLogoutReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(MsgLogoutReq* other);
  friend void swap(MsgLogoutReq& a, MsgLogoutReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLogoutReq* New() const final {
    return CreateMaybeMessage<MsgLogoutReq>(NULL);
  }

  MsgLogoutReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLogoutReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLogoutReq& from);
  void MergeFrom(const MsgLogoutReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLogoutReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLogoutReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgLogoutAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgLogoutAck) */ {
 public:
  MsgLogoutAck();
  virtual ~MsgLogoutAck();

  MsgLogoutAck(const MsgLogoutAck& from);

  inline MsgLogoutAck& operator=(const MsgLogoutAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgLogoutAck(MsgLogoutAck&& from) noexcept
    : MsgLogoutAck() {
    *this = ::std::move(from);
  }

  inline MsgLogoutAck& operator=(MsgLogoutAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgLogoutAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgLogoutAck* internal_default_instance() {
    return reinterpret_cast<const MsgLogoutAck*>(
               &_MsgLogoutAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(MsgLogoutAck* other);
  friend void swap(MsgLogoutAck& a, MsgLogoutAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgLogoutAck* New() const final {
    return CreateMaybeMessage<MsgLogoutAck>(NULL);
  }

  MsgLogoutAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgLogoutAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgLogoutAck& from);
  void MergeFrom(const MsgLogoutAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgLogoutAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgLogoutAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellBeKick : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellBeKick) */ {
 public:
  MsgTellBeKick();
  virtual ~MsgTellBeKick();

  MsgTellBeKick(const MsgTellBeKick& from);

  inline MsgTellBeKick& operator=(const MsgTellBeKick& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellBeKick(MsgTellBeKick&& from) noexcept
    : MsgTellBeKick() {
    *this = ::std::move(from);
  }

  inline MsgTellBeKick& operator=(MsgTellBeKick&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellBeKick& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellBeKick* internal_default_instance() {
    return reinterpret_cast<const MsgTellBeKick*>(
               &_MsgTellBeKick_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(MsgTellBeKick* other);
  friend void swap(MsgTellBeKick& a, MsgTellBeKick& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellBeKick* New() const final {
    return CreateMaybeMessage<MsgTellBeKick>(NULL);
  }

  MsgTellBeKick* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellBeKick>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellBeKick& from);
  void MergeFrom(const MsgTellBeKick& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellBeKick* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellBeKick)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellShutDown : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellShutDown) */ {
 public:
  MsgTellShutDown();
  virtual ~MsgTellShutDown();

  MsgTellShutDown(const MsgTellShutDown& from);

  inline MsgTellShutDown& operator=(const MsgTellShutDown& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellShutDown(MsgTellShutDown&& from) noexcept
    : MsgTellShutDown() {
    *this = ::std::move(from);
  }

  inline MsgTellShutDown& operator=(MsgTellShutDown&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellShutDown& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellShutDown* internal_default_instance() {
    return reinterpret_cast<const MsgTellShutDown*>(
               &_MsgTellShutDown_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(MsgTellShutDown* other);
  friend void swap(MsgTellShutDown& a, MsgTellShutDown& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellShutDown* New() const final {
    return CreateMaybeMessage<MsgTellShutDown>(NULL);
  }

  MsgTellShutDown* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellShutDown>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellShutDown& from);
  void MergeFrom(const MsgTellShutDown& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellShutDown* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellShutDown)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBDebugDrop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBDebugDrop) */ {
 public:
  PBDebugDrop();
  virtual ~PBDebugDrop();

  PBDebugDrop(const PBDebugDrop& from);

  inline PBDebugDrop& operator=(const PBDebugDrop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBDebugDrop(PBDebugDrop&& from) noexcept
    : PBDebugDrop() {
    *this = ::std::move(from);
  }

  inline PBDebugDrop& operator=(PBDebugDrop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBDebugDrop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBDebugDrop* internal_default_instance() {
    return reinterpret_cast<const PBDebugDrop*>(
               &_PBDebugDrop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(PBDebugDrop* other);
  friend void swap(PBDebugDrop& a, PBDebugDrop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBDebugDrop* New() const final {
    return CreateMaybeMessage<PBDebugDrop>(NULL);
  }

  PBDebugDrop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBDebugDrop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBDebugDrop& from);
  void MergeFrom(const PBDebugDrop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBDebugDrop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data_name = 3;
  void clear_data_name();
  static const int kDataNameFieldNumber = 3;
  const ::std::string& data_name() const;
  void set_data_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_name(::std::string&& value);
  #endif
  void set_data_name(const char* value);
  void set_data_name(const void* value, size_t size);
  ::std::string* mutable_data_name();
  ::std::string* release_data_name();
  void set_allocated_data_name(::std::string* data_name);

  // bytes logicname = 4;
  void clear_logicname();
  static const int kLogicnameFieldNumber = 4;
  const ::std::string& logicname() const;
  void set_logicname(const ::std::string& value);
  #if LANG_CXX11
  void set_logicname(::std::string&& value);
  #endif
  void set_logicname(const char* value);
  void set_logicname(const void* value, size_t size);
  ::std::string* mutable_logicname();
  ::std::string* release_logicname();
  void set_allocated_logicname(::std::string* logicname);

  // uint32 dataid = 1;
  void clear_dataid();
  static const int kDataidFieldNumber = 1;
  ::google::protobuf::uint32 dataid() const;
  void set_dataid(::google::protobuf::uint32 value);

  // uint32 dataindex = 2;
  void clear_dataindex();
  static const int kDataindexFieldNumber = 2;
  ::google::protobuf::uint32 dataindex() const;
  void set_dataindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBDebugDrop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_name_;
  ::google::protobuf::internal::ArenaStringPtr logicname_;
  ::google::protobuf::uint32 dataid_;
  ::google::protobuf::uint32 dataindex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDebugShowDrop : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDebugShowDrop) */ {
 public:
  MsgDebugShowDrop();
  virtual ~MsgDebugShowDrop();

  MsgDebugShowDrop(const MsgDebugShowDrop& from);

  inline MsgDebugShowDrop& operator=(const MsgDebugShowDrop& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDebugShowDrop(MsgDebugShowDrop&& from) noexcept
    : MsgDebugShowDrop() {
    *this = ::std::move(from);
  }

  inline MsgDebugShowDrop& operator=(MsgDebugShowDrop&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDebugShowDrop& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDebugShowDrop* internal_default_instance() {
    return reinterpret_cast<const MsgDebugShowDrop*>(
               &_MsgDebugShowDrop_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(MsgDebugShowDrop* other);
  friend void swap(MsgDebugShowDrop& a, MsgDebugShowDrop& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDebugShowDrop* New() const final {
    return CreateMaybeMessage<MsgDebugShowDrop>(NULL);
  }

  MsgDebugShowDrop* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDebugShowDrop>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDebugShowDrop& from);
  void MergeFrom(const MsgDebugShowDrop& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDebugShowDrop* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBDebugDrop dropdata = 3;
  int dropdata_size() const;
  void clear_dropdata();
  static const int kDropdataFieldNumber = 3;
  ::KFMsg::PBDebugDrop* mutable_dropdata(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDebugDrop >*
      mutable_dropdata();
  const ::KFMsg::PBDebugDrop& dropdata(int index) const;
  ::KFMsg::PBDebugDrop* add_dropdata();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDebugDrop >&
      dropdata() const;

  // uint32 dropid = 1;
  void clear_dropid();
  static const int kDropidFieldNumber = 1;
  ::google::protobuf::uint32 dropid() const;
  void set_dropid(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDebugShowDrop)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDebugDrop > dropdata_;
  ::google::protobuf::uint32 dropid_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncOnlineData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncOnlineData) */ {
 public:
  MsgSyncOnlineData();
  virtual ~MsgSyncOnlineData();

  MsgSyncOnlineData(const MsgSyncOnlineData& from);

  inline MsgSyncOnlineData& operator=(const MsgSyncOnlineData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncOnlineData(MsgSyncOnlineData&& from) noexcept
    : MsgSyncOnlineData() {
    *this = ::std::move(from);
  }

  inline MsgSyncOnlineData& operator=(MsgSyncOnlineData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncOnlineData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncOnlineData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncOnlineData*>(
               &_MsgSyncOnlineData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(MsgSyncOnlineData* other);
  friend void swap(MsgSyncOnlineData& a, MsgSyncOnlineData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncOnlineData* New() const final {
    return CreateMaybeMessage<MsgSyncOnlineData>(NULL);
  }

  MsgSyncOnlineData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncOnlineData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncOnlineData& from);
  void MergeFrom(const MsgSyncOnlineData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncOnlineData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncOnlineData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncUpdateData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncUpdateData) */ {
 public:
  MsgSyncUpdateData();
  virtual ~MsgSyncUpdateData();

  MsgSyncUpdateData(const MsgSyncUpdateData& from);

  inline MsgSyncUpdateData& operator=(const MsgSyncUpdateData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncUpdateData(MsgSyncUpdateData&& from) noexcept
    : MsgSyncUpdateData() {
    *this = ::std::move(from);
  }

  inline MsgSyncUpdateData& operator=(MsgSyncUpdateData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncUpdateData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncUpdateData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncUpdateData*>(
               &_MsgSyncUpdateData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(MsgSyncUpdateData* other);
  friend void swap(MsgSyncUpdateData& a, MsgSyncUpdateData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncUpdateData* New() const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(NULL);
  }

  MsgSyncUpdateData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncUpdateData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncUpdateData& from);
  void MergeFrom(const MsgSyncUpdateData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncUpdateData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncUpdateData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncAddData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncAddData) */ {
 public:
  MsgSyncAddData();
  virtual ~MsgSyncAddData();

  MsgSyncAddData(const MsgSyncAddData& from);

  inline MsgSyncAddData& operator=(const MsgSyncAddData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncAddData(MsgSyncAddData&& from) noexcept
    : MsgSyncAddData() {
    *this = ::std::move(from);
  }

  inline MsgSyncAddData& operator=(MsgSyncAddData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncAddData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncAddData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncAddData*>(
               &_MsgSyncAddData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(MsgSyncAddData* other);
  friend void swap(MsgSyncAddData& a, MsgSyncAddData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncAddData* New() const final {
    return CreateMaybeMessage<MsgSyncAddData>(NULL);
  }

  MsgSyncAddData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncAddData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncAddData& from);
  void MergeFrom(const MsgSyncAddData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncAddData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncAddData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSyncRemoveData : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSyncRemoveData) */ {
 public:
  MsgSyncRemoveData();
  virtual ~MsgSyncRemoveData();

  MsgSyncRemoveData(const MsgSyncRemoveData& from);

  inline MsgSyncRemoveData& operator=(const MsgSyncRemoveData& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSyncRemoveData(MsgSyncRemoveData&& from) noexcept
    : MsgSyncRemoveData() {
    *this = ::std::move(from);
  }

  inline MsgSyncRemoveData& operator=(MsgSyncRemoveData&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSyncRemoveData& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSyncRemoveData* internal_default_instance() {
    return reinterpret_cast<const MsgSyncRemoveData*>(
               &_MsgSyncRemoveData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(MsgSyncRemoveData* other);
  friend void swap(MsgSyncRemoveData& a, MsgSyncRemoveData& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSyncRemoveData* New() const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(NULL);
  }

  MsgSyncRemoveData* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSyncRemoveData>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSyncRemoveData& from);
  void MergeFrom(const MsgSyncRemoveData& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSyncRemoveData* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbdata = 1;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSyncRemoveData)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgShowElement : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgShowElement) */ {
 public:
  MsgShowElement();
  virtual ~MsgShowElement();

  MsgShowElement(const MsgShowElement& from);

  inline MsgShowElement& operator=(const MsgShowElement& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgShowElement(MsgShowElement&& from) noexcept
    : MsgShowElement() {
    *this = ::std::move(from);
  }

  inline MsgShowElement& operator=(MsgShowElement&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgShowElement& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgShowElement* internal_default_instance() {
    return reinterpret_cast<const MsgShowElement*>(
               &_MsgShowElement_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(MsgShowElement* other);
  friend void swap(MsgShowElement& a, MsgShowElement& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgShowElement* New() const final {
    return CreateMaybeMessage<MsgShowElement>(NULL);
  }

  MsgShowElement* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgShowElement>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgShowElement& from);
  void MergeFrom(const MsgShowElement& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgShowElement* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBShowElements elements = 1;
  bool has_elements() const;
  void clear_elements();
  static const int kElementsFieldNumber = 1;
  private:
  const ::KFMsg::PBShowElements& _internal_elements() const;
  public:
  const ::KFMsg::PBShowElements& elements() const;
  ::KFMsg::PBShowElements* release_elements();
  ::KFMsg::PBShowElements* mutable_elements();
  void set_allocated_elements(::KFMsg::PBShowElements* elements);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgShowElement)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBShowElements* elements_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgRemoveDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgRemoveDataReq) */ {
 public:
  MsgRemoveDataReq();
  virtual ~MsgRemoveDataReq();

  MsgRemoveDataReq(const MsgRemoveDataReq& from);

  inline MsgRemoveDataReq& operator=(const MsgRemoveDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRemoveDataReq(MsgRemoveDataReq&& from) noexcept
    : MsgRemoveDataReq() {
    *this = ::std::move(from);
  }

  inline MsgRemoveDataReq& operator=(MsgRemoveDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRemoveDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRemoveDataReq* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveDataReq*>(
               &_MsgRemoveDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(MsgRemoveDataReq* other);
  friend void swap(MsgRemoveDataReq& a, MsgRemoveDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRemoveDataReq* New() const final {
    return CreateMaybeMessage<MsgRemoveDataReq>(NULL);
  }

  MsgRemoveDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRemoveDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRemoveDataReq& from);
  void MergeFrom(const MsgRemoveDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRemoveDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data_name = 1;
  void clear_data_name();
  static const int kDataNameFieldNumber = 1;
  const ::std::string& data_name() const;
  void set_data_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_name(::std::string&& value);
  #endif
  void set_data_name(const char* value);
  void set_data_name(const void* value, size_t size);
  ::std::string* mutable_data_name();
  ::std::string* release_data_name();
  void set_allocated_data_name(::std::string* data_name);

  // uint64 key = 2;
  void clear_key();
  static const int kKeyFieldNumber = 2;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgRemoveDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_name_;
  ::google::protobuf::uint64 key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUpdateIntReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgUpdateIntReq) */ {
 public:
  MsgUpdateIntReq();
  virtual ~MsgUpdateIntReq();

  MsgUpdateIntReq(const MsgUpdateIntReq& from);

  inline MsgUpdateIntReq& operator=(const MsgUpdateIntReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgUpdateIntReq(MsgUpdateIntReq&& from) noexcept
    : MsgUpdateIntReq() {
    *this = ::std::move(from);
  }

  inline MsgUpdateIntReq& operator=(MsgUpdateIntReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpdateIntReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgUpdateIntReq* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateIntReq*>(
               &_MsgUpdateIntReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(MsgUpdateIntReq* other);
  friend void swap(MsgUpdateIntReq& a, MsgUpdateIntReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgUpdateIntReq* New() const final {
    return CreateMaybeMessage<MsgUpdateIntReq>(NULL);
  }

  MsgUpdateIntReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpdateIntReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgUpdateIntReq& from);
  void MergeFrom(const MsgUpdateIntReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateIntReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes parent_name = 1;
  void clear_parent_name();
  static const int kParentNameFieldNumber = 1;
  const ::std::string& parent_name() const;
  void set_parent_name(const ::std::string& value);
  #if LANG_CXX11
  void set_parent_name(::std::string&& value);
  #endif
  void set_parent_name(const char* value);
  void set_parent_name(const void* value, size_t size);
  ::std::string* mutable_parent_name();
  ::std::string* release_parent_name();
  void set_allocated_parent_name(::std::string* parent_name);

  // bytes data_name = 2;
  void clear_data_name();
  static const int kDataNameFieldNumber = 2;
  const ::std::string& data_name() const;
  void set_data_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_name(::std::string&& value);
  #endif
  void set_data_name(const char* value);
  void set_data_name(const void* value, size_t size);
  ::std::string* mutable_data_name();
  ::std::string* release_data_name();
  void set_allocated_data_name(::std::string* data_name);

  // uint64 key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // uint64 value = 4;
  void clear_value();
  static const int kValueFieldNumber = 4;
  ::google::protobuf::uint64 value() const;
  void set_value(::google::protobuf::uint64 value);

  // uint32 operate = 5;
  void clear_operate();
  static const int kOperateFieldNumber = 5;
  ::google::protobuf::uint32 operate() const;
  void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUpdateIntReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_name_;
  ::google::protobuf::internal::ArenaStringPtr data_name_;
  ::google::protobuf::uint64 key_;
  ::google::protobuf::uint64 value_;
  ::google::protobuf::uint32 operate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUpdateStrReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgUpdateStrReq) */ {
 public:
  MsgUpdateStrReq();
  virtual ~MsgUpdateStrReq();

  MsgUpdateStrReq(const MsgUpdateStrReq& from);

  inline MsgUpdateStrReq& operator=(const MsgUpdateStrReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgUpdateStrReq(MsgUpdateStrReq&& from) noexcept
    : MsgUpdateStrReq() {
    *this = ::std::move(from);
  }

  inline MsgUpdateStrReq& operator=(MsgUpdateStrReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUpdateStrReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgUpdateStrReq* internal_default_instance() {
    return reinterpret_cast<const MsgUpdateStrReq*>(
               &_MsgUpdateStrReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(MsgUpdateStrReq* other);
  friend void swap(MsgUpdateStrReq& a, MsgUpdateStrReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgUpdateStrReq* New() const final {
    return CreateMaybeMessage<MsgUpdateStrReq>(NULL);
  }

  MsgUpdateStrReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgUpdateStrReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgUpdateStrReq& from);
  void MergeFrom(const MsgUpdateStrReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUpdateStrReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes parent_name = 1;
  void clear_parent_name();
  static const int kParentNameFieldNumber = 1;
  const ::std::string& parent_name() const;
  void set_parent_name(const ::std::string& value);
  #if LANG_CXX11
  void set_parent_name(::std::string&& value);
  #endif
  void set_parent_name(const char* value);
  void set_parent_name(const void* value, size_t size);
  ::std::string* mutable_parent_name();
  ::std::string* release_parent_name();
  void set_allocated_parent_name(::std::string* parent_name);

  // bytes data_name = 2;
  void clear_data_name();
  static const int kDataNameFieldNumber = 2;
  const ::std::string& data_name() const;
  void set_data_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_name(::std::string&& value);
  #endif
  void set_data_name(const char* value);
  void set_data_name(const void* value, size_t size);
  ::std::string* mutable_data_name();
  ::std::string* release_data_name();
  void set_allocated_data_name(::std::string* data_name);

  // bytes value = 4;
  void clear_value();
  static const int kValueFieldNumber = 4;
  const ::std::string& value() const;
  void set_value(const ::std::string& value);
  #if LANG_CXX11
  void set_value(::std::string&& value);
  #endif
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  ::std::string* mutable_value();
  ::std::string* release_value();
  void set_allocated_value(::std::string* value);

  // uint64 key = 3;
  void clear_key();
  static const int kKeyFieldNumber = 3;
  ::google::protobuf::uint64 key() const;
  void set_key(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUpdateStrReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr parent_name_;
  ::google::protobuf::internal::ArenaStringPtr data_name_;
  ::google::protobuf::internal::ArenaStringPtr value_;
  ::google::protobuf::uint64 key_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgRequestSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgRequestSyncReq) */ {
 public:
  MsgRequestSyncReq();
  virtual ~MsgRequestSyncReq();

  MsgRequestSyncReq(const MsgRequestSyncReq& from);

  inline MsgRequestSyncReq& operator=(const MsgRequestSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRequestSyncReq(MsgRequestSyncReq&& from) noexcept
    : MsgRequestSyncReq() {
    *this = ::std::move(from);
  }

  inline MsgRequestSyncReq& operator=(MsgRequestSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRequestSyncReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRequestSyncReq* internal_default_instance() {
    return reinterpret_cast<const MsgRequestSyncReq*>(
               &_MsgRequestSyncReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(MsgRequestSyncReq* other);
  friend void swap(MsgRequestSyncReq& a, MsgRequestSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRequestSyncReq* New() const final {
    return CreateMaybeMessage<MsgRequestSyncReq>(NULL);
  }

  MsgRequestSyncReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRequestSyncReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRequestSyncReq& from);
  void MergeFrom(const MsgRequestSyncReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRequestSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data_name = 1;
  void clear_data_name();
  static const int kDataNameFieldNumber = 1;
  const ::std::string& data_name() const;
  void set_data_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_name(::std::string&& value);
  #endif
  void set_data_name(const char* value);
  void set_data_name(const void* value, size_t size);
  ::std::string* mutable_data_name();
  ::std::string* release_data_name();
  void set_allocated_data_name(::std::string* data_name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgRequestSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCancelSyncReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCancelSyncReq) */ {
 public:
  MsgCancelSyncReq();
  virtual ~MsgCancelSyncReq();

  MsgCancelSyncReq(const MsgCancelSyncReq& from);

  inline MsgCancelSyncReq& operator=(const MsgCancelSyncReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCancelSyncReq(MsgCancelSyncReq&& from) noexcept
    : MsgCancelSyncReq() {
    *this = ::std::move(from);
  }

  inline MsgCancelSyncReq& operator=(MsgCancelSyncReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCancelSyncReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCancelSyncReq* internal_default_instance() {
    return reinterpret_cast<const MsgCancelSyncReq*>(
               &_MsgCancelSyncReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(MsgCancelSyncReq* other);
  friend void swap(MsgCancelSyncReq& a, MsgCancelSyncReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCancelSyncReq* New() const final {
    return CreateMaybeMessage<MsgCancelSyncReq>(NULL);
  }

  MsgCancelSyncReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCancelSyncReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCancelSyncReq& from);
  void MergeFrom(const MsgCancelSyncReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCancelSyncReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data_name = 1;
  void clear_data_name();
  static const int kDataNameFieldNumber = 1;
  const ::std::string& data_name() const;
  void set_data_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_name(::std::string&& value);
  #endif
  void set_data_name(const char* value);
  void set_data_name(const void* value, size_t size);
  ::std::string* mutable_data_name();
  ::std::string* release_data_name();
  void set_allocated_data_name(::std::string* data_name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCancelSyncReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryBasicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryBasicReq) */ {
 public:
  MsgQueryBasicReq();
  virtual ~MsgQueryBasicReq();

  MsgQueryBasicReq(const MsgQueryBasicReq& from);

  inline MsgQueryBasicReq& operator=(const MsgQueryBasicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryBasicReq(MsgQueryBasicReq&& from) noexcept
    : MsgQueryBasicReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryBasicReq& operator=(MsgQueryBasicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryBasicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryBasicReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryBasicReq*>(
               &_MsgQueryBasicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(MsgQueryBasicReq* other);
  friend void swap(MsgQueryBasicReq& a, MsgQueryBasicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryBasicReq* New() const final {
    return CreateMaybeMessage<MsgQueryBasicReq>(NULL);
  }

  MsgQueryBasicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryBasicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryBasicReq& from);
  void MergeFrom(const MsgQueryBasicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryBasicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryBasicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryBasicAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryBasicAck) */ {
 public:
  MsgQueryBasicAck();
  virtual ~MsgQueryBasicAck();

  MsgQueryBasicAck(const MsgQueryBasicAck& from);

  inline MsgQueryBasicAck& operator=(const MsgQueryBasicAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryBasicAck(MsgQueryBasicAck&& from) noexcept
    : MsgQueryBasicAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryBasicAck& operator=(MsgQueryBasicAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryBasicAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryBasicAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryBasicAck*>(
               &_MsgQueryBasicAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(MsgQueryBasicAck* other);
  friend void swap(MsgQueryBasicAck& a, MsgQueryBasicAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryBasicAck* New() const final {
    return CreateMaybeMessage<MsgQueryBasicAck>(NULL);
  }

  MsgQueryBasicAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryBasicAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryBasicAck& from);
  void MergeFrom(const MsgQueryBasicAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryBasicAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryBasicAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPlayerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPlayerReq) */ {
 public:
  MsgQueryPlayerReq();
  virtual ~MsgQueryPlayerReq();

  MsgQueryPlayerReq(const MsgQueryPlayerReq& from);

  inline MsgQueryPlayerReq& operator=(const MsgQueryPlayerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPlayerReq(MsgQueryPlayerReq&& from) noexcept
    : MsgQueryPlayerReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryPlayerReq& operator=(MsgQueryPlayerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPlayerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPlayerReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPlayerReq*>(
               &_MsgQueryPlayerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(MsgQueryPlayerReq* other);
  friend void swap(MsgQueryPlayerReq& a, MsgQueryPlayerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPlayerReq* New() const final {
    return CreateMaybeMessage<MsgQueryPlayerReq>(NULL);
  }

  MsgQueryPlayerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPlayerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPlayerReq& from);
  void MergeFrom(const MsgQueryPlayerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPlayerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPlayerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPlayerAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPlayerAck) */ {
 public:
  MsgQueryPlayerAck();
  virtual ~MsgQueryPlayerAck();

  MsgQueryPlayerAck(const MsgQueryPlayerAck& from);

  inline MsgQueryPlayerAck& operator=(const MsgQueryPlayerAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPlayerAck(MsgQueryPlayerAck&& from) noexcept
    : MsgQueryPlayerAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryPlayerAck& operator=(MsgQueryPlayerAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPlayerAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPlayerAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPlayerAck*>(
               &_MsgQueryPlayerAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(MsgQueryPlayerAck* other);
  friend void swap(MsgQueryPlayerAck& a, MsgQueryPlayerAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPlayerAck* New() const final {
    return CreateMaybeMessage<MsgQueryPlayerAck>(NULL);
  }

  MsgQueryPlayerAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPlayerAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPlayerAck& from);
  void MergeFrom(const MsgQueryPlayerAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPlayerAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPlayerAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetNameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetNameReq) */ {
 public:
  MsgSetNameReq();
  virtual ~MsgSetNameReq();

  MsgSetNameReq(const MsgSetNameReq& from);

  inline MsgSetNameReq& operator=(const MsgSetNameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetNameReq(MsgSetNameReq&& from) noexcept
    : MsgSetNameReq() {
    *this = ::std::move(from);
  }

  inline MsgSetNameReq& operator=(MsgSetNameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetNameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetNameReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetNameReq*>(
               &_MsgSetNameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(MsgSetNameReq* other);
  friend void swap(MsgSetNameReq& a, MsgSetNameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetNameReq* New() const final {
    return CreateMaybeMessage<MsgSetNameReq>(NULL);
  }

  MsgSetNameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetNameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetNameReq& from);
  void MergeFrom(const MsgSetNameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetNameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetNameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetSexReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetSexReq) */ {
 public:
  MsgSetSexReq();
  virtual ~MsgSetSexReq();

  MsgSetSexReq(const MsgSetSexReq& from);

  inline MsgSetSexReq& operator=(const MsgSetSexReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetSexReq(MsgSetSexReq&& from) noexcept
    : MsgSetSexReq() {
    *this = ::std::move(from);
  }

  inline MsgSetSexReq& operator=(MsgSetSexReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetSexReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetSexReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetSexReq*>(
               &_MsgSetSexReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(MsgSetSexReq* other);
  friend void swap(MsgSetSexReq& a, MsgSetSexReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetSexReq* New() const final {
    return CreateMaybeMessage<MsgSetSexReq>(NULL);
  }

  MsgSetSexReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetSexReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetSexReq& from);
  void MergeFrom(const MsgSetSexReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetSexReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 sex = 1;
  void clear_sex();
  static const int kSexFieldNumber = 1;
  ::google::protobuf::uint32 sex() const;
  void set_sex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetSexReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 sex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgCompoundReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgCompoundReq) */ {
 public:
  MsgCompoundReq();
  virtual ~MsgCompoundReq();

  MsgCompoundReq(const MsgCompoundReq& from);

  inline MsgCompoundReq& operator=(const MsgCompoundReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgCompoundReq(MsgCompoundReq&& from) noexcept
    : MsgCompoundReq() {
    *this = ::std::move(from);
  }

  inline MsgCompoundReq& operator=(MsgCompoundReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgCompoundReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgCompoundReq* internal_default_instance() {
    return reinterpret_cast<const MsgCompoundReq*>(
               &_MsgCompoundReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(MsgCompoundReq* other);
  friend void swap(MsgCompoundReq& a, MsgCompoundReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgCompoundReq* New() const final {
    return CreateMaybeMessage<MsgCompoundReq>(NULL);
  }

  MsgCompoundReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgCompoundReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgCompoundReq& from);
  void MergeFrom(const MsgCompoundReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgCompoundReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgCompoundReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgAchieveRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgAchieveRewardReq) */ {
 public:
  MsgAchieveRewardReq();
  virtual ~MsgAchieveRewardReq();

  MsgAchieveRewardReq(const MsgAchieveRewardReq& from);

  inline MsgAchieveRewardReq& operator=(const MsgAchieveRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgAchieveRewardReq(MsgAchieveRewardReq&& from) noexcept
    : MsgAchieveRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgAchieveRewardReq& operator=(MsgAchieveRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAchieveRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgAchieveRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgAchieveRewardReq*>(
               &_MsgAchieveRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(MsgAchieveRewardReq* other);
  friend void swap(MsgAchieveRewardReq& a, MsgAchieveRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgAchieveRewardReq* New() const final {
    return CreateMaybeMessage<MsgAchieveRewardReq>(NULL);
  }

  MsgAchieveRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgAchieveRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgAchieveRewardReq& from);
  void MergeFrom(const MsgAchieveRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAchieveRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgAchieveRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgActivityRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgActivityRewardReq) */ {
 public:
  MsgActivityRewardReq();
  virtual ~MsgActivityRewardReq();

  MsgActivityRewardReq(const MsgActivityRewardReq& from);

  inline MsgActivityRewardReq& operator=(const MsgActivityRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgActivityRewardReq(MsgActivityRewardReq&& from) noexcept
    : MsgActivityRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgActivityRewardReq& operator=(MsgActivityRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgActivityRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgActivityRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgActivityRewardReq*>(
               &_MsgActivityRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(MsgActivityRewardReq* other);
  friend void swap(MsgActivityRewardReq& a, MsgActivityRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgActivityRewardReq* New() const final {
    return CreateMaybeMessage<MsgActivityRewardReq>(NULL);
  }

  MsgActivityRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgActivityRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgActivityRewardReq& from);
  void MergeFrom(const MsgActivityRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgActivityRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgActivityRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSevenSignRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSevenSignRewardReq) */ {
 public:
  MsgSevenSignRewardReq();
  virtual ~MsgSevenSignRewardReq();

  MsgSevenSignRewardReq(const MsgSevenSignRewardReq& from);

  inline MsgSevenSignRewardReq& operator=(const MsgSevenSignRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSevenSignRewardReq(MsgSevenSignRewardReq&& from) noexcept
    : MsgSevenSignRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgSevenSignRewardReq& operator=(MsgSevenSignRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSevenSignRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSevenSignRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgSevenSignRewardReq*>(
               &_MsgSevenSignRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(MsgSevenSignRewardReq* other);
  friend void swap(MsgSevenSignRewardReq& a, MsgSevenSignRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSevenSignRewardReq* New() const final {
    return CreateMaybeMessage<MsgSevenSignRewardReq>(NULL);
  }

  MsgSevenSignRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSevenSignRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSevenSignRewardReq& from);
  void MergeFrom(const MsgSevenSignRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSevenSignRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 day = 1;
  void clear_day();
  static const int kDayFieldNumber = 1;
  ::google::protobuf::uint32 day() const;
  void set_day(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSevenSignRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 day_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgMoveItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgMoveItemReq) */ {
 public:
  MsgMoveItemReq();
  virtual ~MsgMoveItemReq();

  MsgMoveItemReq(const MsgMoveItemReq& from);

  inline MsgMoveItemReq& operator=(const MsgMoveItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgMoveItemReq(MsgMoveItemReq&& from) noexcept
    : MsgMoveItemReq() {
    *this = ::std::move(from);
  }

  inline MsgMoveItemReq& operator=(MsgMoveItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMoveItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgMoveItemReq* internal_default_instance() {
    return reinterpret_cast<const MsgMoveItemReq*>(
               &_MsgMoveItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(MsgMoveItemReq* other);
  friend void swap(MsgMoveItemReq& a, MsgMoveItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgMoveItemReq* New() const final {
    return CreateMaybeMessage<MsgMoveItemReq>(NULL);
  }

  MsgMoveItemReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgMoveItemReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgMoveItemReq& from);
  void MergeFrom(const MsgMoveItemReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMoveItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes sourcename = 1;
  void clear_sourcename();
  static const int kSourcenameFieldNumber = 1;
  const ::std::string& sourcename() const;
  void set_sourcename(const ::std::string& value);
  #if LANG_CXX11
  void set_sourcename(::std::string&& value);
  #endif
  void set_sourcename(const char* value);
  void set_sourcename(const void* value, size_t size);
  ::std::string* mutable_sourcename();
  ::std::string* release_sourcename();
  void set_allocated_sourcename(::std::string* sourcename);

  // bytes targetname = 3;
  void clear_targetname();
  static const int kTargetnameFieldNumber = 3;
  const ::std::string& targetname() const;
  void set_targetname(const ::std::string& value);
  #if LANG_CXX11
  void set_targetname(::std::string&& value);
  #endif
  void set_targetname(const char* value);
  void set_targetname(const void* value, size_t size);
  ::std::string* mutable_targetname();
  ::std::string* release_targetname();
  void set_allocated_targetname(::std::string* targetname);

  // bytes tabname = 5;
  void clear_tabname();
  static const int kTabnameFieldNumber = 5;
  const ::std::string& tabname() const;
  void set_tabname(const ::std::string& value);
  #if LANG_CXX11
  void set_tabname(::std::string&& value);
  #endif
  void set_tabname(const char* value);
  void set_tabname(const void* value, size_t size);
  ::std::string* mutable_tabname();
  ::std::string* release_tabname();
  void set_allocated_tabname(::std::string* tabname);

  // uint64 sourceuuid = 2;
  void clear_sourceuuid();
  static const int kSourceuuidFieldNumber = 2;
  ::google::protobuf::uint64 sourceuuid() const;
  void set_sourceuuid(::google::protobuf::uint64 value);

  // uint32 targetindex = 4;
  void clear_targetindex();
  static const int kTargetindexFieldNumber = 4;
  ::google::protobuf::uint32 targetindex() const;
  void set_targetindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgMoveItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sourcename_;
  ::google::protobuf::internal::ArenaStringPtr targetname_;
  ::google::protobuf::internal::ArenaStringPtr tabname_;
  ::google::protobuf::uint64 sourceuuid_;
  ::google::protobuf::uint32 targetindex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgMoveAllItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgMoveAllItemReq) */ {
 public:
  MsgMoveAllItemReq();
  virtual ~MsgMoveAllItemReq();

  MsgMoveAllItemReq(const MsgMoveAllItemReq& from);

  inline MsgMoveAllItemReq& operator=(const MsgMoveAllItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgMoveAllItemReq(MsgMoveAllItemReq&& from) noexcept
    : MsgMoveAllItemReq() {
    *this = ::std::move(from);
  }

  inline MsgMoveAllItemReq& operator=(MsgMoveAllItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMoveAllItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgMoveAllItemReq* internal_default_instance() {
    return reinterpret_cast<const MsgMoveAllItemReq*>(
               &_MsgMoveAllItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(MsgMoveAllItemReq* other);
  friend void swap(MsgMoveAllItemReq& a, MsgMoveAllItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgMoveAllItemReq* New() const final {
    return CreateMaybeMessage<MsgMoveAllItemReq>(NULL);
  }

  MsgMoveAllItemReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgMoveAllItemReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgMoveAllItemReq& from);
  void MergeFrom(const MsgMoveAllItemReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMoveAllItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes sourcename = 1;
  void clear_sourcename();
  static const int kSourcenameFieldNumber = 1;
  const ::std::string& sourcename() const;
  void set_sourcename(const ::std::string& value);
  #if LANG_CXX11
  void set_sourcename(::std::string&& value);
  #endif
  void set_sourcename(const char* value);
  void set_sourcename(const void* value, size_t size);
  ::std::string* mutable_sourcename();
  ::std::string* release_sourcename();
  void set_allocated_sourcename(::std::string* sourcename);

  // bytes targetname = 2;
  void clear_targetname();
  static const int kTargetnameFieldNumber = 2;
  const ::std::string& targetname() const;
  void set_targetname(const ::std::string& value);
  #if LANG_CXX11
  void set_targetname(::std::string&& value);
  #endif
  void set_targetname(const char* value);
  void set_targetname(const void* value, size_t size);
  ::std::string* mutable_targetname();
  ::std::string* release_targetname();
  void set_allocated_targetname(::std::string* targetname);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgMoveAllItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sourcename_;
  ::google::protobuf::internal::ArenaStringPtr targetname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSortItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSortItemReq) */ {
 public:
  MsgSortItemReq();
  virtual ~MsgSortItemReq();

  MsgSortItemReq(const MsgSortItemReq& from);

  inline MsgSortItemReq& operator=(const MsgSortItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSortItemReq(MsgSortItemReq&& from) noexcept
    : MsgSortItemReq() {
    *this = ::std::move(from);
  }

  inline MsgSortItemReq& operator=(MsgSortItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSortItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSortItemReq* internal_default_instance() {
    return reinterpret_cast<const MsgSortItemReq*>(
               &_MsgSortItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    33;

  void Swap(MsgSortItemReq* other);
  friend void swap(MsgSortItemReq& a, MsgSortItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSortItemReq* New() const final {
    return CreateMaybeMessage<MsgSortItemReq>(NULL);
  }

  MsgSortItemReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSortItemReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSortItemReq& from);
  void MergeFrom(const MsgSortItemReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSortItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes bagname = 1;
  void clear_bagname();
  static const int kBagnameFieldNumber = 1;
  const ::std::string& bagname() const;
  void set_bagname(const ::std::string& value);
  #if LANG_CXX11
  void set_bagname(::std::string&& value);
  #endif
  void set_bagname(const char* value);
  void set_bagname(const void* value, size_t size);
  ::std::string* mutable_bagname();
  ::std::string* release_bagname();
  void set_allocated_bagname(::std::string* bagname);

  // bytes tabname = 2;
  void clear_tabname();
  static const int kTabnameFieldNumber = 2;
  const ::std::string& tabname() const;
  void set_tabname(const ::std::string& value);
  #if LANG_CXX11
  void set_tabname(::std::string&& value);
  #endif
  void set_tabname(const char* value);
  void set_tabname(const void* value, size_t size);
  ::std::string* mutable_tabname();
  ::std::string* release_tabname();
  void set_allocated_tabname(::std::string* tabname);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSortItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr bagname_;
  ::google::protobuf::internal::ArenaStringPtr tabname_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgRemoveItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgRemoveItemReq) */ {
 public:
  MsgRemoveItemReq();
  virtual ~MsgRemoveItemReq();

  MsgRemoveItemReq(const MsgRemoveItemReq& from);

  inline MsgRemoveItemReq& operator=(const MsgRemoveItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRemoveItemReq(MsgRemoveItemReq&& from) noexcept
    : MsgRemoveItemReq() {
    *this = ::std::move(from);
  }

  inline MsgRemoveItemReq& operator=(MsgRemoveItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRemoveItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRemoveItemReq* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveItemReq*>(
               &_MsgRemoveItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(MsgRemoveItemReq* other);
  friend void swap(MsgRemoveItemReq& a, MsgRemoveItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRemoveItemReq* New() const final {
    return CreateMaybeMessage<MsgRemoveItemReq>(NULL);
  }

  MsgRemoveItemReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRemoveItemReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRemoveItemReq& from);
  void MergeFrom(const MsgRemoveItemReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRemoveItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes sourcename = 1;
  void clear_sourcename();
  static const int kSourcenameFieldNumber = 1;
  const ::std::string& sourcename() const;
  void set_sourcename(const ::std::string& value);
  #if LANG_CXX11
  void set_sourcename(::std::string&& value);
  #endif
  void set_sourcename(const char* value);
  void set_sourcename(const void* value, size_t size);
  ::std::string* mutable_sourcename();
  ::std::string* release_sourcename();
  void set_allocated_sourcename(::std::string* sourcename);

  // uint64 uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  ::google::protobuf::uint64 uuid() const;
  void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgRemoveItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr sourcename_;
  ::google::protobuf::uint64 uuid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgRemoveItemCountReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgRemoveItemCountReq) */ {
 public:
  MsgRemoveItemCountReq();
  virtual ~MsgRemoveItemCountReq();

  MsgRemoveItemCountReq(const MsgRemoveItemCountReq& from);

  inline MsgRemoveItemCountReq& operator=(const MsgRemoveItemCountReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgRemoveItemCountReq(MsgRemoveItemCountReq&& from) noexcept
    : MsgRemoveItemCountReq() {
    *this = ::std::move(from);
  }

  inline MsgRemoveItemCountReq& operator=(MsgRemoveItemCountReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgRemoveItemCountReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgRemoveItemCountReq* internal_default_instance() {
    return reinterpret_cast<const MsgRemoveItemCountReq*>(
               &_MsgRemoveItemCountReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(MsgRemoveItemCountReq* other);
  friend void swap(MsgRemoveItemCountReq& a, MsgRemoveItemCountReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgRemoveItemCountReq* New() const final {
    return CreateMaybeMessage<MsgRemoveItemCountReq>(NULL);
  }

  MsgRemoveItemCountReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgRemoveItemCountReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgRemoveItemCountReq& from);
  void MergeFrom(const MsgRemoveItemCountReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgRemoveItemCountReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 itemid = 1;
  void clear_itemid();
  static const int kItemidFieldNumber = 1;
  ::google::protobuf::uint32 itemid() const;
  void set_itemid(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgRemoveItemCountReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgUseItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgUseItemReq) */ {
 public:
  MsgUseItemReq();
  virtual ~MsgUseItemReq();

  MsgUseItemReq(const MsgUseItemReq& from);

  inline MsgUseItemReq& operator=(const MsgUseItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgUseItemReq(MsgUseItemReq&& from) noexcept
    : MsgUseItemReq() {
    *this = ::std::move(from);
  }

  inline MsgUseItemReq& operator=(MsgUseItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgUseItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgUseItemReq* internal_default_instance() {
    return reinterpret_cast<const MsgUseItemReq*>(
               &_MsgUseItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(MsgUseItemReq* other);
  friend void swap(MsgUseItemReq& a, MsgUseItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgUseItemReq* New() const final {
    return CreateMaybeMessage<MsgUseItemReq>(NULL);
  }

  MsgUseItemReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgUseItemReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgUseItemReq& from);
  void MergeFrom(const MsgUseItemReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgUseItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  ::google::protobuf::uint64 uuid() const;
  void set_uuid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgUseItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 uuid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSellItemReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSellItemReq) */ {
 public:
  MsgSellItemReq();
  virtual ~MsgSellItemReq();

  MsgSellItemReq(const MsgSellItemReq& from);

  inline MsgSellItemReq& operator=(const MsgSellItemReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSellItemReq(MsgSellItemReq&& from) noexcept
    : MsgSellItemReq() {
    *this = ::std::move(from);
  }

  inline MsgSellItemReq& operator=(MsgSellItemReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSellItemReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSellItemReq* internal_default_instance() {
    return reinterpret_cast<const MsgSellItemReq*>(
               &_MsgSellItemReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(MsgSellItemReq* other);
  friend void swap(MsgSellItemReq& a, MsgSellItemReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSellItemReq* New() const final {
    return CreateMaybeMessage<MsgSellItemReq>(NULL);
  }

  MsgSellItemReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSellItemReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSellItemReq& from);
  void MergeFrom(const MsgSellItemReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSellItemReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint64 uuid = 2;
  void clear_uuid();
  static const int kUuidFieldNumber = 2;
  ::google::protobuf::uint64 uuid() const;
  void set_uuid(::google::protobuf::uint64 value);

  // uint32 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSellItemReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint64 uuid_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSellItemAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSellItemAck) */ {
 public:
  MsgSellItemAck();
  virtual ~MsgSellItemAck();

  MsgSellItemAck(const MsgSellItemAck& from);

  inline MsgSellItemAck& operator=(const MsgSellItemAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSellItemAck(MsgSellItemAck&& from) noexcept
    : MsgSellItemAck() {
    *this = ::std::move(from);
  }

  inline MsgSellItemAck& operator=(MsgSellItemAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSellItemAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSellItemAck* internal_default_instance() {
    return reinterpret_cast<const MsgSellItemAck*>(
               &_MsgSellItemAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(MsgSellItemAck* other);
  friend void swap(MsgSellItemAck& a, MsgSellItemAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSellItemAck* New() const final {
    return CreateMaybeMessage<MsgSellItemAck>(NULL);
  }

  MsgSellItemAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSellItemAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSellItemAck& from);
  void MergeFrom(const MsgSellItemAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSellItemAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 itemid = 1;
  void clear_itemid();
  static const int kItemidFieldNumber = 1;
  ::google::protobuf::uint32 itemid() const;
  void set_itemid(::google::protobuf::uint32 value);

  // uint32 count = 2;
  void clear_count();
  static const int kCountFieldNumber = 2;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSellItemAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 itemid_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgViewMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgViewMailReq) */ {
 public:
  MsgViewMailReq();
  virtual ~MsgViewMailReq();

  MsgViewMailReq(const MsgViewMailReq& from);

  inline MsgViewMailReq& operator=(const MsgViewMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgViewMailReq(MsgViewMailReq&& from) noexcept
    : MsgViewMailReq() {
    *this = ::std::move(from);
  }

  inline MsgViewMailReq& operator=(MsgViewMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgViewMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgViewMailReq* internal_default_instance() {
    return reinterpret_cast<const MsgViewMailReq*>(
               &_MsgViewMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(MsgViewMailReq* other);
  friend void swap(MsgViewMailReq& a, MsgViewMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgViewMailReq* New() const final {
    return CreateMaybeMessage<MsgViewMailReq>(NULL);
  }

  MsgViewMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgViewMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgViewMailReq& from);
  void MergeFrom(const MsgViewMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgViewMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgViewMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDeleteMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDeleteMailReq) */ {
 public:
  MsgDeleteMailReq();
  virtual ~MsgDeleteMailReq();

  MsgDeleteMailReq(const MsgDeleteMailReq& from);

  inline MsgDeleteMailReq& operator=(const MsgDeleteMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDeleteMailReq(MsgDeleteMailReq&& from) noexcept
    : MsgDeleteMailReq() {
    *this = ::std::move(from);
  }

  inline MsgDeleteMailReq& operator=(MsgDeleteMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDeleteMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDeleteMailReq* internal_default_instance() {
    return reinterpret_cast<const MsgDeleteMailReq*>(
               &_MsgDeleteMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(MsgDeleteMailReq* other);
  friend void swap(MsgDeleteMailReq& a, MsgDeleteMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDeleteMailReq* New() const final {
    return CreateMaybeMessage<MsgDeleteMailReq>(NULL);
  }

  MsgDeleteMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDeleteMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDeleteMailReq& from);
  void MergeFrom(const MsgDeleteMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDeleteMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDeleteMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryMailReq) */ {
 public:
  MsgQueryMailReq();
  virtual ~MsgQueryMailReq();

  MsgQueryMailReq(const MsgQueryMailReq& from);

  inline MsgQueryMailReq& operator=(const MsgQueryMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryMailReq(MsgQueryMailReq&& from) noexcept
    : MsgQueryMailReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryMailReq& operator=(MsgQueryMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryMailReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryMailReq*>(
               &_MsgQueryMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(MsgQueryMailReq* other);
  friend void swap(MsgQueryMailReq& a, MsgQueryMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryMailReq* New() const final {
    return CreateMaybeMessage<MsgQueryMailReq>(NULL);
  }

  MsgQueryMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryMailReq& from);
  void MergeFrom(const MsgQueryMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgMailRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgMailRewardReq) */ {
 public:
  MsgMailRewardReq();
  virtual ~MsgMailRewardReq();

  MsgMailRewardReq(const MsgMailRewardReq& from);

  inline MsgMailRewardReq& operator=(const MsgMailRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgMailRewardReq(MsgMailRewardReq&& from) noexcept
    : MsgMailRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgMailRewardReq& operator=(MsgMailRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgMailRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgMailRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgMailRewardReq*>(
               &_MsgMailRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(MsgMailRewardReq* other);
  friend void swap(MsgMailRewardReq& a, MsgMailRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgMailRewardReq* New() const final {
    return CreateMaybeMessage<MsgMailRewardReq>(NULL);
  }

  MsgMailRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgMailRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgMailRewardReq& from);
  void MergeFrom(const MsgMailRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgMailRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgMailRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgStoreBuyGoodsReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgStoreBuyGoodsReq) */ {
 public:
  MsgStoreBuyGoodsReq();
  virtual ~MsgStoreBuyGoodsReq();

  MsgStoreBuyGoodsReq(const MsgStoreBuyGoodsReq& from);

  inline MsgStoreBuyGoodsReq& operator=(const MsgStoreBuyGoodsReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgStoreBuyGoodsReq(MsgStoreBuyGoodsReq&& from) noexcept
    : MsgStoreBuyGoodsReq() {
    *this = ::std::move(from);
  }

  inline MsgStoreBuyGoodsReq& operator=(MsgStoreBuyGoodsReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStoreBuyGoodsReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgStoreBuyGoodsReq* internal_default_instance() {
    return reinterpret_cast<const MsgStoreBuyGoodsReq*>(
               &_MsgStoreBuyGoodsReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(MsgStoreBuyGoodsReq* other);
  friend void swap(MsgStoreBuyGoodsReq& a, MsgStoreBuyGoodsReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgStoreBuyGoodsReq* New() const final {
    return CreateMaybeMessage<MsgStoreBuyGoodsReq>(NULL);
  }

  MsgStoreBuyGoodsReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgStoreBuyGoodsReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgStoreBuyGoodsReq& from);
  void MergeFrom(const MsgStoreBuyGoodsReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStoreBuyGoodsReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 storeid = 1;
  void clear_storeid();
  static const int kStoreidFieldNumber = 1;
  ::google::protobuf::uint32 storeid() const;
  void set_storeid(::google::protobuf::uint32 value);

  // uint32 goodsid = 2;
  void clear_goodsid();
  static const int kGoodsidFieldNumber = 2;
  ::google::protobuf::uint32 goodsid() const;
  void set_goodsid(::google::protobuf::uint32 value);

  // uint32 index = 3;
  void clear_index();
  static const int kIndexFieldNumber = 3;
  ::google::protobuf::uint32 index() const;
  void set_index(::google::protobuf::uint32 value);

  // uint32 buycount = 4;
  void clear_buycount();
  static const int kBuycountFieldNumber = 4;
  ::google::protobuf::uint32 buycount() const;
  void set_buycount(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgStoreBuyGoodsReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 storeid_;
  ::google::protobuf::uint32 goodsid_;
  ::google::protobuf::uint32 index_;
  ::google::protobuf::uint32 buycount_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgStoreRefreshReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgStoreRefreshReq) */ {
 public:
  MsgStoreRefreshReq();
  virtual ~MsgStoreRefreshReq();

  MsgStoreRefreshReq(const MsgStoreRefreshReq& from);

  inline MsgStoreRefreshReq& operator=(const MsgStoreRefreshReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgStoreRefreshReq(MsgStoreRefreshReq&& from) noexcept
    : MsgStoreRefreshReq() {
    *this = ::std::move(from);
  }

  inline MsgStoreRefreshReq& operator=(MsgStoreRefreshReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgStoreRefreshReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgStoreRefreshReq* internal_default_instance() {
    return reinterpret_cast<const MsgStoreRefreshReq*>(
               &_MsgStoreRefreshReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(MsgStoreRefreshReq* other);
  friend void swap(MsgStoreRefreshReq& a, MsgStoreRefreshReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgStoreRefreshReq* New() const final {
    return CreateMaybeMessage<MsgStoreRefreshReq>(NULL);
  }

  MsgStoreRefreshReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgStoreRefreshReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgStoreRefreshReq& from);
  void MergeFrom(const MsgStoreRefreshReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgStoreRefreshReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 storeid = 1;
  void clear_storeid();
  static const int kStoreidFieldNumber = 1;
  ::google::protobuf::uint32 storeid() const;
  void set_storeid(::google::protobuf::uint32 value);

  // uint32 refreshtype = 2;
  void clear_refreshtype();
  static const int kRefreshtypeFieldNumber = 2;
  ::google::protobuf::uint32 refreshtype() const;
  void set_refreshtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgStoreRefreshReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 storeid_;
  ::google::protobuf::uint32 refreshtype_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgApplyPayOrderReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgApplyPayOrderReq) */ {
 public:
  MsgApplyPayOrderReq();
  virtual ~MsgApplyPayOrderReq();

  MsgApplyPayOrderReq(const MsgApplyPayOrderReq& from);

  inline MsgApplyPayOrderReq& operator=(const MsgApplyPayOrderReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgApplyPayOrderReq(MsgApplyPayOrderReq&& from) noexcept
    : MsgApplyPayOrderReq() {
    *this = ::std::move(from);
  }

  inline MsgApplyPayOrderReq& operator=(MsgApplyPayOrderReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApplyPayOrderReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgApplyPayOrderReq* internal_default_instance() {
    return reinterpret_cast<const MsgApplyPayOrderReq*>(
               &_MsgApplyPayOrderReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(MsgApplyPayOrderReq* other);
  friend void swap(MsgApplyPayOrderReq& a, MsgApplyPayOrderReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgApplyPayOrderReq* New() const final {
    return CreateMaybeMessage<MsgApplyPayOrderReq>(NULL);
  }

  MsgApplyPayOrderReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgApplyPayOrderReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgApplyPayOrderReq& from);
  void MergeFrom(const MsgApplyPayOrderReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgApplyPayOrderReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string payid = 1;
  void clear_payid();
  static const int kPayidFieldNumber = 1;
  const ::std::string& payid() const;
  void set_payid(const ::std::string& value);
  #if LANG_CXX11
  void set_payid(::std::string&& value);
  #endif
  void set_payid(const char* value);
  void set_payid(const char* value, size_t size);
  ::std::string* mutable_payid();
  ::std::string* release_payid();
  void set_allocated_payid(::std::string* payid);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgApplyPayOrderReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgApplyPayOrderAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgApplyPayOrderAck) */ {
 public:
  MsgApplyPayOrderAck();
  virtual ~MsgApplyPayOrderAck();

  MsgApplyPayOrderAck(const MsgApplyPayOrderAck& from);

  inline MsgApplyPayOrderAck& operator=(const MsgApplyPayOrderAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgApplyPayOrderAck(MsgApplyPayOrderAck&& from) noexcept
    : MsgApplyPayOrderAck() {
    *this = ::std::move(from);
  }

  inline MsgApplyPayOrderAck& operator=(MsgApplyPayOrderAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgApplyPayOrderAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgApplyPayOrderAck* internal_default_instance() {
    return reinterpret_cast<const MsgApplyPayOrderAck*>(
               &_MsgApplyPayOrderAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(MsgApplyPayOrderAck* other);
  friend void swap(MsgApplyPayOrderAck& a, MsgApplyPayOrderAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgApplyPayOrderAck* New() const final {
    return CreateMaybeMessage<MsgApplyPayOrderAck>(NULL);
  }

  MsgApplyPayOrderAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgApplyPayOrderAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgApplyPayOrderAck& from);
  void MergeFrom(const MsgApplyPayOrderAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgApplyPayOrderAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string payid = 1;
  void clear_payid();
  static const int kPayidFieldNumber = 1;
  const ::std::string& payid() const;
  void set_payid(const ::std::string& value);
  #if LANG_CXX11
  void set_payid(::std::string&& value);
  #endif
  void set_payid(const char* value);
  void set_payid(const char* value, size_t size);
  ::std::string* mutable_payid();
  ::std::string* release_payid();
  void set_allocated_payid(::std::string* payid);

  // string order = 2;
  void clear_order();
  static const int kOrderFieldNumber = 2;
  const ::std::string& order() const;
  void set_order(const ::std::string& value);
  #if LANG_CXX11
  void set_order(::std::string&& value);
  #endif
  void set_order(const char* value);
  void set_order(const char* value, size_t size);
  ::std::string* mutable_order();
  ::std::string* release_order();
  void set_allocated_order(::std::string* order);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgApplyPayOrderAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payid_;
  ::google::protobuf::internal::ArenaStringPtr order_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgPayResultReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgPayResultReq) */ {
 public:
  MsgPayResultReq();
  virtual ~MsgPayResultReq();

  MsgPayResultReq(const MsgPayResultReq& from);

  inline MsgPayResultReq& operator=(const MsgPayResultReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgPayResultReq(MsgPayResultReq&& from) noexcept
    : MsgPayResultReq() {
    *this = ::std::move(from);
  }

  inline MsgPayResultReq& operator=(MsgPayResultReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgPayResultReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgPayResultReq* internal_default_instance() {
    return reinterpret_cast<const MsgPayResultReq*>(
               &_MsgPayResultReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    47;

  void Swap(MsgPayResultReq* other);
  friend void swap(MsgPayResultReq& a, MsgPayResultReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgPayResultReq* New() const final {
    return CreateMaybeMessage<MsgPayResultReq>(NULL);
  }

  MsgPayResultReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgPayResultReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgPayResultReq& from);
  void MergeFrom(const MsgPayResultReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgPayResultReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string payid = 1;
  void clear_payid();
  static const int kPayidFieldNumber = 1;
  const ::std::string& payid() const;
  void set_payid(const ::std::string& value);
  #if LANG_CXX11
  void set_payid(::std::string&& value);
  #endif
  void set_payid(const char* value);
  void set_payid(const char* value, size_t size);
  ::std::string* mutable_payid();
  ::std::string* release_payid();
  void set_allocated_payid(::std::string* payid);

  // string order = 2;
  void clear_order();
  static const int kOrderFieldNumber = 2;
  const ::std::string& order() const;
  void set_order(const ::std::string& value);
  #if LANG_CXX11
  void set_order(::std::string&& value);
  #endif
  void set_order(const char* value);
  void set_order(const char* value, size_t size);
  ::std::string* mutable_order();
  ::std::string* release_order();
  void set_allocated_order(::std::string* order);

  // bool result = 3;
  void clear_result();
  static const int kResultFieldNumber = 3;
  bool result() const;
  void set_result(bool value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgPayResultReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payid_;
  ::google::protobuf::internal::ArenaStringPtr order_;
  bool result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryPayReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryPayReq) */ {
 public:
  MsgQueryPayReq();
  virtual ~MsgQueryPayReq();

  MsgQueryPayReq(const MsgQueryPayReq& from);

  inline MsgQueryPayReq& operator=(const MsgQueryPayReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryPayReq(MsgQueryPayReq&& from) noexcept
    : MsgQueryPayReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryPayReq& operator=(MsgQueryPayReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryPayReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryPayReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryPayReq*>(
               &_MsgQueryPayReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(MsgQueryPayReq* other);
  friend void swap(MsgQueryPayReq& a, MsgQueryPayReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryPayReq* New() const final {
    return CreateMaybeMessage<MsgQueryPayReq>(NULL);
  }

  MsgQueryPayReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryPayReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryPayReq& from);
  void MergeFrom(const MsgQueryPayReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryPayReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryPayReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryRankListReq) */ {
 public:
  MsgQueryRankListReq();
  virtual ~MsgQueryRankListReq();

  MsgQueryRankListReq(const MsgQueryRankListReq& from);

  inline MsgQueryRankListReq& operator=(const MsgQueryRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryRankListReq(MsgQueryRankListReq&& from) noexcept
    : MsgQueryRankListReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryRankListReq& operator=(MsgQueryRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryRankListReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRankListReq*>(
               &_MsgQueryRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    49;

  void Swap(MsgQueryRankListReq* other);
  friend void swap(MsgQueryRankListReq& a, MsgQueryRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRankListReq* New() const final {
    return CreateMaybeMessage<MsgQueryRankListReq>(NULL);
  }

  MsgQueryRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryRankListReq& from);
  void MergeFrom(const MsgQueryRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // uint32 start = 2;
  void clear_start();
  static const int kStartFieldNumber = 2;
  ::google::protobuf::uint32 start() const;
  void set_start(::google::protobuf::uint32 value);

  // uint32 count = 3;
  void clear_count();
  static const int kCountFieldNumber = 3;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 start_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryRankListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryRankListAck) */ {
 public:
  MsgQueryRankListAck();
  virtual ~MsgQueryRankListAck();

  MsgQueryRankListAck(const MsgQueryRankListAck& from);

  inline MsgQueryRankListAck& operator=(const MsgQueryRankListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryRankListAck(MsgQueryRankListAck&& from) noexcept
    : MsgQueryRankListAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryRankListAck& operator=(MsgQueryRankListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryRankListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryRankListAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryRankListAck*>(
               &_MsgQueryRankListAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(MsgQueryRankListAck* other);
  friend void swap(MsgQueryRankListAck& a, MsgQueryRankListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryRankListAck* New() const final {
    return CreateMaybeMessage<MsgQueryRankListAck>(NULL);
  }

  MsgQueryRankListAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryRankListAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryRankListAck& from);
  void MergeFrom(const MsgQueryRankListAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryRankListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRankDatas rankdatas = 2;
  bool has_rankdatas() const;
  void clear_rankdatas();
  static const int kRankdatasFieldNumber = 2;
  private:
  const ::KFMsg::PBRankDatas& _internal_rankdatas() const;
  public:
  const ::KFMsg::PBRankDatas& rankdatas() const;
  ::KFMsg::PBRankDatas* release_rankdatas();
  ::KFMsg::PBRankDatas* mutable_rankdatas();
  void set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas);

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // uint32 selfindex = 3;
  void clear_selfindex();
  static const int kSelfindexFieldNumber = 3;
  ::google::protobuf::uint32 selfindex() const;
  void set_selfindex(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryRankListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRankDatas* rankdatas_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 selfindex_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryFriendRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryFriendRankListReq) */ {
 public:
  MsgQueryFriendRankListReq();
  virtual ~MsgQueryFriendRankListReq();

  MsgQueryFriendRankListReq(const MsgQueryFriendRankListReq& from);

  inline MsgQueryFriendRankListReq& operator=(const MsgQueryFriendRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryFriendRankListReq(MsgQueryFriendRankListReq&& from) noexcept
    : MsgQueryFriendRankListReq() {
    *this = ::std::move(from);
  }

  inline MsgQueryFriendRankListReq& operator=(MsgQueryFriendRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryFriendRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryFriendRankListReq* internal_default_instance() {
    return reinterpret_cast<const MsgQueryFriendRankListReq*>(
               &_MsgQueryFriendRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(MsgQueryFriendRankListReq* other);
  friend void swap(MsgQueryFriendRankListReq& a, MsgQueryFriendRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryFriendRankListReq* New() const final {
    return CreateMaybeMessage<MsgQueryFriendRankListReq>(NULL);
  }

  MsgQueryFriendRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryFriendRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryFriendRankListReq& from);
  void MergeFrom(const MsgQueryFriendRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryFriendRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryFriendRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgQueryFriendRankListAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgQueryFriendRankListAck) */ {
 public:
  MsgQueryFriendRankListAck();
  virtual ~MsgQueryFriendRankListAck();

  MsgQueryFriendRankListAck(const MsgQueryFriendRankListAck& from);

  inline MsgQueryFriendRankListAck& operator=(const MsgQueryFriendRankListAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgQueryFriendRankListAck(MsgQueryFriendRankListAck&& from) noexcept
    : MsgQueryFriendRankListAck() {
    *this = ::std::move(from);
  }

  inline MsgQueryFriendRankListAck& operator=(MsgQueryFriendRankListAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgQueryFriendRankListAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgQueryFriendRankListAck* internal_default_instance() {
    return reinterpret_cast<const MsgQueryFriendRankListAck*>(
               &_MsgQueryFriendRankListAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(MsgQueryFriendRankListAck* other);
  friend void swap(MsgQueryFriendRankListAck& a, MsgQueryFriendRankListAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgQueryFriendRankListAck* New() const final {
    return CreateMaybeMessage<MsgQueryFriendRankListAck>(NULL);
  }

  MsgQueryFriendRankListAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgQueryFriendRankListAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgQueryFriendRankListAck& from);
  void MergeFrom(const MsgQueryFriendRankListAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgQueryFriendRankListAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRankDatas rankdatas = 2;
  bool has_rankdatas() const;
  void clear_rankdatas();
  static const int kRankdatasFieldNumber = 2;
  private:
  const ::KFMsg::PBRankDatas& _internal_rankdatas() const;
  public:
  const ::KFMsg::PBRankDatas& rankdatas() const;
  ::KFMsg::PBRankDatas* release_rankdatas();
  ::KFMsg::PBRankDatas* mutable_rankdatas();
  void set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas);

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgQueryFriendRankListAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRankDatas* rankdatas_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgAddRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgAddRelationReq) */ {
 public:
  MsgAddRelationReq();
  virtual ~MsgAddRelationReq();

  MsgAddRelationReq(const MsgAddRelationReq& from);

  inline MsgAddRelationReq& operator=(const MsgAddRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgAddRelationReq(MsgAddRelationReq&& from) noexcept
    : MsgAddRelationReq() {
    *this = ::std::move(from);
  }

  inline MsgAddRelationReq& operator=(MsgAddRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgAddRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgAddRelationReq* internal_default_instance() {
    return reinterpret_cast<const MsgAddRelationReq*>(
               &_MsgAddRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    53;

  void Swap(MsgAddRelationReq* other);
  friend void swap(MsgAddRelationReq& a, MsgAddRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgAddRelationReq* New() const final {
    return CreateMaybeMessage<MsgAddRelationReq>(NULL);
  }

  MsgAddRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgAddRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgAddRelationReq& from);
  void MergeFrom(const MsgAddRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgAddRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // bytes playername = 2;
  void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // bytes message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgAddRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgDelRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgDelRelationReq) */ {
 public:
  MsgDelRelationReq();
  virtual ~MsgDelRelationReq();

  MsgDelRelationReq(const MsgDelRelationReq& from);

  inline MsgDelRelationReq& operator=(const MsgDelRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgDelRelationReq(MsgDelRelationReq&& from) noexcept
    : MsgDelRelationReq() {
    *this = ::std::move(from);
  }

  inline MsgDelRelationReq& operator=(MsgDelRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgDelRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgDelRelationReq* internal_default_instance() {
    return reinterpret_cast<const MsgDelRelationReq*>(
               &_MsgDelRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(MsgDelRelationReq* other);
  friend void swap(MsgDelRelationReq& a, MsgDelRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgDelRelationReq* New() const final {
    return CreateMaybeMessage<MsgDelRelationReq>(NULL);
  }

  MsgDelRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgDelRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgDelRelationReq& from);
  void MergeFrom(const MsgDelRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgDelRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgDelRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgReplyRelationInviteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgReplyRelationInviteReq) */ {
 public:
  MsgReplyRelationInviteReq();
  virtual ~MsgReplyRelationInviteReq();

  MsgReplyRelationInviteReq(const MsgReplyRelationInviteReq& from);

  inline MsgReplyRelationInviteReq& operator=(const MsgReplyRelationInviteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgReplyRelationInviteReq(MsgReplyRelationInviteReq&& from) noexcept
    : MsgReplyRelationInviteReq() {
    *this = ::std::move(from);
  }

  inline MsgReplyRelationInviteReq& operator=(MsgReplyRelationInviteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgReplyRelationInviteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgReplyRelationInviteReq* internal_default_instance() {
    return reinterpret_cast<const MsgReplyRelationInviteReq*>(
               &_MsgReplyRelationInviteReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(MsgReplyRelationInviteReq* other);
  friend void swap(MsgReplyRelationInviteReq& a, MsgReplyRelationInviteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgReplyRelationInviteReq* New() const final {
    return CreateMaybeMessage<MsgReplyRelationInviteReq>(NULL);
  }

  MsgReplyRelationInviteReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgReplyRelationInviteReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgReplyRelationInviteReq& from);
  void MergeFrom(const MsgReplyRelationInviteReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgReplyRelationInviteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 operate = 3;
  void clear_operate();
  static const int kOperateFieldNumber = 3;
  ::google::protobuf::uint32 operate() const;
  void set_operate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgReplyRelationInviteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 operate_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgSetRefuseRelationInviteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgSetRefuseRelationInviteReq) */ {
 public:
  MsgSetRefuseRelationInviteReq();
  virtual ~MsgSetRefuseRelationInviteReq();

  MsgSetRefuseRelationInviteReq(const MsgSetRefuseRelationInviteReq& from);

  inline MsgSetRefuseRelationInviteReq& operator=(const MsgSetRefuseRelationInviteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgSetRefuseRelationInviteReq(MsgSetRefuseRelationInviteReq&& from) noexcept
    : MsgSetRefuseRelationInviteReq() {
    *this = ::std::move(from);
  }

  inline MsgSetRefuseRelationInviteReq& operator=(MsgSetRefuseRelationInviteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgSetRefuseRelationInviteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgSetRefuseRelationInviteReq* internal_default_instance() {
    return reinterpret_cast<const MsgSetRefuseRelationInviteReq*>(
               &_MsgSetRefuseRelationInviteReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(MsgSetRefuseRelationInviteReq* other);
  friend void swap(MsgSetRefuseRelationInviteReq& a, MsgSetRefuseRelationInviteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgSetRefuseRelationInviteReq* New() const final {
    return CreateMaybeMessage<MsgSetRefuseRelationInviteReq>(NULL);
  }

  MsgSetRefuseRelationInviteReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgSetRefuseRelationInviteReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgSetRefuseRelationInviteReq& from);
  void MergeFrom(const MsgSetRefuseRelationInviteReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgSetRefuseRelationInviteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes refusename = 1;
  void clear_refusename();
  static const int kRefusenameFieldNumber = 1;
  const ::std::string& refusename() const;
  void set_refusename(const ::std::string& value);
  #if LANG_CXX11
  void set_refusename(::std::string&& value);
  #endif
  void set_refusename(const char* value);
  void set_refusename(const void* value, size_t size);
  ::std::string* mutable_refusename();
  ::std::string* release_refusename();
  void set_allocated_refusename(::std::string* refusename);

  // uint32 refuse = 2;
  void clear_refuse();
  static const int kRefuseFieldNumber = 2;
  ::google::protobuf::uint32 refuse() const;
  void set_refuse(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgSetRefuseRelationInviteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr refusename_;
  ::google::protobuf::uint32 refuse_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTaskReceiveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTaskReceiveReq) */ {
 public:
  MsgTaskReceiveReq();
  virtual ~MsgTaskReceiveReq();

  MsgTaskReceiveReq(const MsgTaskReceiveReq& from);

  inline MsgTaskReceiveReq& operator=(const MsgTaskReceiveReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTaskReceiveReq(MsgTaskReceiveReq&& from) noexcept
    : MsgTaskReceiveReq() {
    *this = ::std::move(from);
  }

  inline MsgTaskReceiveReq& operator=(MsgTaskReceiveReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTaskReceiveReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTaskReceiveReq* internal_default_instance() {
    return reinterpret_cast<const MsgTaskReceiveReq*>(
               &_MsgTaskReceiveReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    57;

  void Swap(MsgTaskReceiveReq* other);
  friend void swap(MsgTaskReceiveReq& a, MsgTaskReceiveReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTaskReceiveReq* New() const final {
    return CreateMaybeMessage<MsgTaskReceiveReq>(NULL);
  }

  MsgTaskReceiveReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTaskReceiveReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTaskReceiveReq& from);
  void MergeFrom(const MsgTaskReceiveReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTaskReceiveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTaskReceiveReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTaskRewardReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTaskRewardReq) */ {
 public:
  MsgTaskRewardReq();
  virtual ~MsgTaskRewardReq();

  MsgTaskRewardReq(const MsgTaskRewardReq& from);

  inline MsgTaskRewardReq& operator=(const MsgTaskRewardReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTaskRewardReq(MsgTaskRewardReq&& from) noexcept
    : MsgTaskRewardReq() {
    *this = ::std::move(from);
  }

  inline MsgTaskRewardReq& operator=(MsgTaskRewardReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTaskRewardReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTaskRewardReq* internal_default_instance() {
    return reinterpret_cast<const MsgTaskRewardReq*>(
               &_MsgTaskRewardReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    58;

  void Swap(MsgTaskRewardReq* other);
  friend void swap(MsgTaskRewardReq& a, MsgTaskRewardReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTaskRewardReq* New() const final {
    return CreateMaybeMessage<MsgTaskRewardReq>(NULL);
  }

  MsgTaskRewardReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTaskRewardReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTaskRewardReq& from);
  void MergeFrom(const MsgTaskRewardReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTaskRewardReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTaskRewardReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTaskRemoveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTaskRemoveReq) */ {
 public:
  MsgTaskRemoveReq();
  virtual ~MsgTaskRemoveReq();

  MsgTaskRemoveReq(const MsgTaskRemoveReq& from);

  inline MsgTaskRemoveReq& operator=(const MsgTaskRemoveReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTaskRemoveReq(MsgTaskRemoveReq&& from) noexcept
    : MsgTaskRemoveReq() {
    *this = ::std::move(from);
  }

  inline MsgTaskRemoveReq& operator=(MsgTaskRemoveReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTaskRemoveReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTaskRemoveReq* internal_default_instance() {
    return reinterpret_cast<const MsgTaskRemoveReq*>(
               &_MsgTaskRemoveReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(MsgTaskRemoveReq* other);
  friend void swap(MsgTaskRemoveReq& a, MsgTaskRemoveReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTaskRemoveReq* New() const final {
    return CreateMaybeMessage<MsgTaskRemoveReq>(NULL);
  }

  MsgTaskRemoveReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTaskRemoveReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTaskRemoveReq& from);
  void MergeFrom(const MsgTaskRemoveReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTaskRemoveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTaskRemoveReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTaskAddReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTaskAddReq) */ {
 public:
  MsgTaskAddReq();
  virtual ~MsgTaskAddReq();

  MsgTaskAddReq(const MsgTaskAddReq& from);

  inline MsgTaskAddReq& operator=(const MsgTaskAddReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTaskAddReq(MsgTaskAddReq&& from) noexcept
    : MsgTaskAddReq() {
    *this = ::std::move(from);
  }

  inline MsgTaskAddReq& operator=(MsgTaskAddReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTaskAddReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTaskAddReq* internal_default_instance() {
    return reinterpret_cast<const MsgTaskAddReq*>(
               &_MsgTaskAddReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(MsgTaskAddReq* other);
  friend void swap(MsgTaskAddReq& a, MsgTaskAddReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTaskAddReq* New() const final {
    return CreateMaybeMessage<MsgTaskAddReq>(NULL);
  }

  MsgTaskAddReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTaskAddReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTaskAddReq& from);
  void MergeFrom(const MsgTaskAddReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTaskAddReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTaskAddReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgFriendChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgFriendChatReq) */ {
 public:
  MsgFriendChatReq();
  virtual ~MsgFriendChatReq();

  MsgFriendChatReq(const MsgFriendChatReq& from);

  inline MsgFriendChatReq& operator=(const MsgFriendChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgFriendChatReq(MsgFriendChatReq&& from) noexcept
    : MsgFriendChatReq() {
    *this = ::std::move(from);
  }

  inline MsgFriendChatReq& operator=(MsgFriendChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgFriendChatReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgFriendChatReq* internal_default_instance() {
    return reinterpret_cast<const MsgFriendChatReq*>(
               &_MsgFriendChatReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(MsgFriendChatReq* other);
  friend void swap(MsgFriendChatReq& a, MsgFriendChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgFriendChatReq* New() const final {
    return CreateMaybeMessage<MsgFriendChatReq>(NULL);
  }

  MsgFriendChatReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgFriendChatReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgFriendChatReq& from);
  void MergeFrom(const MsgFriendChatReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgFriendChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgFriendChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellFriendChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellFriendChat) */ {
 public:
  MsgTellFriendChat();
  virtual ~MsgTellFriendChat();

  MsgTellFriendChat(const MsgTellFriendChat& from);

  inline MsgTellFriendChat& operator=(const MsgTellFriendChat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellFriendChat(MsgTellFriendChat&& from) noexcept
    : MsgTellFriendChat() {
    *this = ::std::move(from);
  }

  inline MsgTellFriendChat& operator=(MsgTellFriendChat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellFriendChat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellFriendChat* internal_default_instance() {
    return reinterpret_cast<const MsgTellFriendChat*>(
               &_MsgTellFriendChat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(MsgTellFriendChat* other);
  friend void swap(MsgTellFriendChat& a, MsgTellFriendChat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellFriendChat* New() const final {
    return CreateMaybeMessage<MsgTellFriendChat>(NULL);
  }

  MsgTellFriendChat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellFriendChat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellFriendChat& from);
  void MergeFrom(const MsgTellFriendChat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellFriendChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellFriendChat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgServerChatReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgServerChatReq) */ {
 public:
  MsgServerChatReq();
  virtual ~MsgServerChatReq();

  MsgServerChatReq(const MsgServerChatReq& from);

  inline MsgServerChatReq& operator=(const MsgServerChatReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgServerChatReq(MsgServerChatReq&& from) noexcept
    : MsgServerChatReq() {
    *this = ::std::move(from);
  }

  inline MsgServerChatReq& operator=(MsgServerChatReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgServerChatReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgServerChatReq* internal_default_instance() {
    return reinterpret_cast<const MsgServerChatReq*>(
               &_MsgServerChatReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(MsgServerChatReq* other);
  friend void swap(MsgServerChatReq& a, MsgServerChatReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgServerChatReq* New() const final {
    return CreateMaybeMessage<MsgServerChatReq>(NULL);
  }

  MsgServerChatReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgServerChatReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgServerChatReq& from);
  void MergeFrom(const MsgServerChatReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgServerChatReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 1;
  void clear_content();
  static const int kContentFieldNumber = 1;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgServerChatReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTellServerChat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTellServerChat) */ {
 public:
  MsgTellServerChat();
  virtual ~MsgTellServerChat();

  MsgTellServerChat(const MsgTellServerChat& from);

  inline MsgTellServerChat& operator=(const MsgTellServerChat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTellServerChat(MsgTellServerChat&& from) noexcept
    : MsgTellServerChat() {
    *this = ::std::move(from);
  }

  inline MsgTellServerChat& operator=(MsgTellServerChat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTellServerChat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTellServerChat* internal_default_instance() {
    return reinterpret_cast<const MsgTellServerChat*>(
               &_MsgTellServerChat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    64;

  void Swap(MsgTellServerChat* other);
  friend void swap(MsgTellServerChat& a, MsgTellServerChat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTellServerChat* New() const final {
    return CreateMaybeMessage<MsgTellServerChat>(NULL);
  }

  MsgTellServerChat* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTellServerChat>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTellServerChat& from);
  void MergeFrom(const MsgTellServerChat& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTellServerChat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes content = 2;
  void clear_content();
  static const int kContentFieldNumber = 2;
  const ::std::string& content() const;
  void set_content(const ::std::string& value);
  #if LANG_CXX11
  void set_content(::std::string&& value);
  #endif
  void set_content(const char* value);
  void set_content(const void* value, size_t size);
  ::std::string* mutable_content();
  ::std::string* release_content();
  void set_allocated_content(::std::string* content);

  // .KFMsg.PBObject player = 1;
  bool has_player() const;
  void clear_player();
  static const int kPlayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_player() const;
  public:
  const ::KFMsg::PBObject& player() const;
  ::KFMsg::PBObject* release_player();
  ::KFMsg::PBObject* mutable_player();
  void set_allocated_player(::KFMsg::PBObject* player);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTellServerChat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr content_;
  ::KFMsg::PBObject* player_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTeamCreateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTeamCreateReq) */ {
 public:
  MsgTeamCreateReq();
  virtual ~MsgTeamCreateReq();

  MsgTeamCreateReq(const MsgTeamCreateReq& from);

  inline MsgTeamCreateReq& operator=(const MsgTeamCreateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTeamCreateReq(MsgTeamCreateReq&& from) noexcept
    : MsgTeamCreateReq() {
    *this = ::std::move(from);
  }

  inline MsgTeamCreateReq& operator=(MsgTeamCreateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTeamCreateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTeamCreateReq* internal_default_instance() {
    return reinterpret_cast<const MsgTeamCreateReq*>(
               &_MsgTeamCreateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(MsgTeamCreateReq* other);
  friend void swap(MsgTeamCreateReq& a, MsgTeamCreateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTeamCreateReq* New() const final {
    return CreateMaybeMessage<MsgTeamCreateReq>(NULL);
  }

  MsgTeamCreateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTeamCreateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTeamCreateReq& from);
  void MergeFrom(const MsgTeamCreateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTeamCreateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes info = 3;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::std::string& info() const;
  void set_info(const ::std::string& value);
  #if LANG_CXX11
  void set_info(::std::string&& value);
  #endif
  void set_info(const char* value);
  void set_info(const void* value, size_t size);
  ::std::string* mutable_info();
  ::std::string* release_info();
  void set_allocated_info(::std::string* info);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTeamCreateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr info_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTeamLeaveReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTeamLeaveReq) */ {
 public:
  MsgTeamLeaveReq();
  virtual ~MsgTeamLeaveReq();

  MsgTeamLeaveReq(const MsgTeamLeaveReq& from);

  inline MsgTeamLeaveReq& operator=(const MsgTeamLeaveReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTeamLeaveReq(MsgTeamLeaveReq&& from) noexcept
    : MsgTeamLeaveReq() {
    *this = ::std::move(from);
  }

  inline MsgTeamLeaveReq& operator=(MsgTeamLeaveReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTeamLeaveReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTeamLeaveReq* internal_default_instance() {
    return reinterpret_cast<const MsgTeamLeaveReq*>(
               &_MsgTeamLeaveReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    66;

  void Swap(MsgTeamLeaveReq* other);
  friend void swap(MsgTeamLeaveReq& a, MsgTeamLeaveReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTeamLeaveReq* New() const final {
    return CreateMaybeMessage<MsgTeamLeaveReq>(NULL);
  }

  MsgTeamLeaveReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTeamLeaveReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTeamLeaveReq& from);
  void MergeFrom(const MsgTeamLeaveReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTeamLeaveReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTeamLeaveReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTeamKickReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTeamKickReq) */ {
 public:
  MsgTeamKickReq();
  virtual ~MsgTeamKickReq();

  MsgTeamKickReq(const MsgTeamKickReq& from);

  inline MsgTeamKickReq& operator=(const MsgTeamKickReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTeamKickReq(MsgTeamKickReq&& from) noexcept
    : MsgTeamKickReq() {
    *this = ::std::move(from);
  }

  inline MsgTeamKickReq& operator=(MsgTeamKickReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTeamKickReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTeamKickReq* internal_default_instance() {
    return reinterpret_cast<const MsgTeamKickReq*>(
               &_MsgTeamKickReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(MsgTeamKickReq* other);
  friend void swap(MsgTeamKickReq& a, MsgTeamKickReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTeamKickReq* New() const final {
    return CreateMaybeMessage<MsgTeamKickReq>(NULL);
  }

  MsgTeamKickReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTeamKickReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTeamKickReq& from);
  void MergeFrom(const MsgTeamKickReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTeamKickReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 memberid = 1;
  void clear_memberid();
  static const int kMemberidFieldNumber = 1;
  ::google::protobuf::uint64 memberid() const;
  void set_memberid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTeamKickReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 memberid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTeamInviteReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTeamInviteReq) */ {
 public:
  MsgTeamInviteReq();
  virtual ~MsgTeamInviteReq();

  MsgTeamInviteReq(const MsgTeamInviteReq& from);

  inline MsgTeamInviteReq& operator=(const MsgTeamInviteReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTeamInviteReq(MsgTeamInviteReq&& from) noexcept
    : MsgTeamInviteReq() {
    *this = ::std::move(from);
  }

  inline MsgTeamInviteReq& operator=(MsgTeamInviteReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTeamInviteReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTeamInviteReq* internal_default_instance() {
    return reinterpret_cast<const MsgTeamInviteReq*>(
               &_MsgTeamInviteReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(MsgTeamInviteReq* other);
  friend void swap(MsgTeamInviteReq& a, MsgTeamInviteReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTeamInviteReq* New() const final {
    return CreateMaybeMessage<MsgTeamInviteReq>(NULL);
  }

  MsgTeamInviteReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTeamInviteReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTeamInviteReq& from);
  void MergeFrom(const MsgTeamInviteReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTeamInviteReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTeamInviteReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTeamApplyReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTeamApplyReq) */ {
 public:
  MsgTeamApplyReq();
  virtual ~MsgTeamApplyReq();

  MsgTeamApplyReq(const MsgTeamApplyReq& from);

  inline MsgTeamApplyReq& operator=(const MsgTeamApplyReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTeamApplyReq(MsgTeamApplyReq&& from) noexcept
    : MsgTeamApplyReq() {
    *this = ::std::move(from);
  }

  inline MsgTeamApplyReq& operator=(MsgTeamApplyReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTeamApplyReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTeamApplyReq* internal_default_instance() {
    return reinterpret_cast<const MsgTeamApplyReq*>(
               &_MsgTeamApplyReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(MsgTeamApplyReq* other);
  friend void swap(MsgTeamApplyReq& a, MsgTeamApplyReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTeamApplyReq* New() const final {
    return CreateMaybeMessage<MsgTeamApplyReq>(NULL);
  }

  MsgTeamApplyReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTeamApplyReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTeamApplyReq& from);
  void MergeFrom(const MsgTeamApplyReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTeamApplyReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTeamApplyReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 serverid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTeamTellInvite : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTeamTellInvite) */ {
 public:
  MsgTeamTellInvite();
  virtual ~MsgTeamTellInvite();

  MsgTeamTellInvite(const MsgTeamTellInvite& from);

  inline MsgTeamTellInvite& operator=(const MsgTeamTellInvite& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTeamTellInvite(MsgTeamTellInvite&& from) noexcept
    : MsgTeamTellInvite() {
    *this = ::std::move(from);
  }

  inline MsgTeamTellInvite& operator=(MsgTeamTellInvite&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTeamTellInvite& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTeamTellInvite* internal_default_instance() {
    return reinterpret_cast<const MsgTeamTellInvite*>(
               &_MsgTeamTellInvite_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(MsgTeamTellInvite* other);
  friend void swap(MsgTeamTellInvite& a, MsgTeamTellInvite& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTeamTellInvite* New() const final {
    return CreateMaybeMessage<MsgTeamTellInvite>(NULL);
  }

  MsgTeamTellInvite* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTeamTellInvite>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTeamTellInvite& from);
  void MergeFrom(const MsgTeamTellInvite& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTeamTellInvite* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbplayer = 1;
  bool has_pbplayer() const;
  void clear_pbplayer();
  static const int kPbplayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbplayer() const;
  public:
  const ::KFMsg::PBObject& pbplayer() const;
  ::KFMsg::PBObject* release_pbplayer();
  ::KFMsg::PBObject* mutable_pbplayer();
  void set_allocated_pbplayer(::KFMsg::PBObject* pbplayer);

  // .KFMsg.PBObject pbteam = 2;
  bool has_pbteam() const;
  void clear_pbteam();
  static const int kPbteamFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbteam() const;
  public:
  const ::KFMsg::PBObject& pbteam() const;
  ::KFMsg::PBObject* release_pbteam();
  ::KFMsg::PBObject* mutable_pbteam();
  void set_allocated_pbteam(::KFMsg::PBObject* pbteam);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTeamTellInvite)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbplayer_;
  ::KFMsg::PBObject* pbteam_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTeamTellApply : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTeamTellApply) */ {
 public:
  MsgTeamTellApply();
  virtual ~MsgTeamTellApply();

  MsgTeamTellApply(const MsgTeamTellApply& from);

  inline MsgTeamTellApply& operator=(const MsgTeamTellApply& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTeamTellApply(MsgTeamTellApply&& from) noexcept
    : MsgTeamTellApply() {
    *this = ::std::move(from);
  }

  inline MsgTeamTellApply& operator=(MsgTeamTellApply&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTeamTellApply& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTeamTellApply* internal_default_instance() {
    return reinterpret_cast<const MsgTeamTellApply*>(
               &_MsgTeamTellApply_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(MsgTeamTellApply* other);
  friend void swap(MsgTeamTellApply& a, MsgTeamTellApply& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTeamTellApply* New() const final {
    return CreateMaybeMessage<MsgTeamTellApply>(NULL);
  }

  MsgTeamTellApply* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTeamTellApply>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTeamTellApply& from);
  void MergeFrom(const MsgTeamTellApply& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTeamTellApply* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbplayer = 1;
  bool has_pbplayer() const;
  void clear_pbplayer();
  static const int kPbplayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbplayer() const;
  public:
  const ::KFMsg::PBObject& pbplayer() const;
  ::KFMsg::PBObject* release_pbplayer();
  ::KFMsg::PBObject* mutable_pbplayer();
  void set_allocated_pbplayer(::KFMsg::PBObject* pbplayer);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTeamTellApply)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbplayer_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT MsgTeamAgreeReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.MsgTeamAgreeReq) */ {
 public:
  MsgTeamAgreeReq();
  virtual ~MsgTeamAgreeReq();

  MsgTeamAgreeReq(const MsgTeamAgreeReq& from);

  inline MsgTeamAgreeReq& operator=(const MsgTeamAgreeReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  MsgTeamAgreeReq(MsgTeamAgreeReq&& from) noexcept
    : MsgTeamAgreeReq() {
    *this = ::std::move(from);
  }

  inline MsgTeamAgreeReq& operator=(MsgTeamAgreeReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const MsgTeamAgreeReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MsgTeamAgreeReq* internal_default_instance() {
    return reinterpret_cast<const MsgTeamAgreeReq*>(
               &_MsgTeamAgreeReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(MsgTeamAgreeReq* other);
  friend void swap(MsgTeamAgreeReq& a, MsgTeamAgreeReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline MsgTeamAgreeReq* New() const final {
    return CreateMaybeMessage<MsgTeamAgreeReq>(NULL);
  }

  MsgTeamAgreeReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<MsgTeamAgreeReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const MsgTeamAgreeReq& from);
  void MergeFrom(const MsgTeamAgreeReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MsgTeamAgreeReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.MsgTeamAgreeReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 teamid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameClientMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// MsgResultDisplay

// uint32 result = 1;
inline void MsgResultDisplay::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 MsgResultDisplay::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgResultDisplay.result)
  return result_;
}
inline void MsgResultDisplay::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.result)
}

// repeated bytes param = 2;
inline int MsgResultDisplay::param_size() const {
  return param_.size();
}
inline void MsgResultDisplay::clear_param() {
  param_.Clear();
}
inline const ::std::string& MsgResultDisplay::param(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgResultDisplay.param)
  return param_.Get(index);
}
inline ::std::string* MsgResultDisplay::mutable_param(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgResultDisplay.param)
  return param_.Mutable(index);
}
inline void MsgResultDisplay::set_param(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.param)
  param_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgResultDisplay::set_param(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgResultDisplay.param)
  param_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgResultDisplay::set_param(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgResultDisplay.param)
}
inline void MsgResultDisplay::set_param(int index, const void* value, size_t size) {
  param_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgResultDisplay.param)
}
inline ::std::string* MsgResultDisplay::add_param() {
  // @@protoc_insertion_point(field_add_mutable:KFMsg.MsgResultDisplay.param)
  return param_.Add();
}
inline void MsgResultDisplay::add_param(const ::std::string& value) {
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:KFMsg.MsgResultDisplay.param)
}
#if LANG_CXX11
inline void MsgResultDisplay::add_param(::std::string&& value) {
  param_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:KFMsg.MsgResultDisplay.param)
}
#endif
inline void MsgResultDisplay::add_param(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  param_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:KFMsg.MsgResultDisplay.param)
}
inline void MsgResultDisplay::add_param(const void* value, size_t size) {
  param_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:KFMsg.MsgResultDisplay.param)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgResultDisplay::param() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgResultDisplay.param)
  return param_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgResultDisplay::mutable_param() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgResultDisplay.param)
  return &param_;
}

// -------------------------------------------------------------------

// MsgTellNotice

// repeated .KFMsg.PBNotice notice = 1;
inline int MsgTellNotice::notice_size() const {
  return notice_.size();
}
inline ::KFMsg::PBNotice* MsgTellNotice::mutable_notice(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellNotice.notice)
  return notice_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBNotice >*
MsgTellNotice::mutable_notice() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgTellNotice.notice)
  return &notice_;
}
inline const ::KFMsg::PBNotice& MsgTellNotice::notice(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellNotice.notice)
  return notice_.Get(index);
}
inline ::KFMsg::PBNotice* MsgTellNotice::add_notice() {
  // @@protoc_insertion_point(field_add:KFMsg.MsgTellNotice.notice)
  return notice_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBNotice >&
MsgTellNotice::notice() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgTellNotice.notice)
  return notice_;
}

// -------------------------------------------------------------------

// MsgCommandReq

// bytes command = 1;
inline void MsgCommandReq::clear_command() {
  command_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCommandReq::command() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCommandReq.command)
  return command_.GetNoArena();
}
inline void MsgCommandReq::set_command(const ::std::string& value) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgCommandReq.command)
}
#if LANG_CXX11
inline void MsgCommandReq::set_command(::std::string&& value) {
  
  command_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgCommandReq.command)
}
#endif
inline void MsgCommandReq::set_command(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCommandReq.command)
}
inline void MsgCommandReq::set_command(const void* value, size_t size) {
  
  command_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCommandReq.command)
}
inline ::std::string* MsgCommandReq::mutable_command() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCommandReq.command)
  return command_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCommandReq::release_command() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgCommandReq.command)
  
  return command_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCommandReq::set_allocated_command(::std::string* command) {
  if (command != NULL) {
    
  } else {
    
  }
  command_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), command);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgCommandReq.command)
}

// repeated bytes params = 2;
inline int MsgCommandReq::params_size() const {
  return params_.size();
}
inline void MsgCommandReq::clear_params() {
  params_.Clear();
}
inline const ::std::string& MsgCommandReq::params(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCommandReq.params)
  return params_.Get(index);
}
inline ::std::string* MsgCommandReq::mutable_params(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCommandReq.params)
  return params_.Mutable(index);
}
inline void MsgCommandReq::set_params(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgCommandReq.params)
  params_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void MsgCommandReq::set_params(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:KFMsg.MsgCommandReq.params)
  params_.Mutable(index)->assign(std::move(value));
}
#endif
inline void MsgCommandReq::set_params(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCommandReq.params)
}
inline void MsgCommandReq::set_params(int index, const void* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCommandReq.params)
}
inline ::std::string* MsgCommandReq::add_params() {
  // @@protoc_insertion_point(field_add_mutable:KFMsg.MsgCommandReq.params)
  return params_.Add();
}
inline void MsgCommandReq::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:KFMsg.MsgCommandReq.params)
}
#if LANG_CXX11
inline void MsgCommandReq::add_params(::std::string&& value) {
  params_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:KFMsg.MsgCommandReq.params)
}
#endif
inline void MsgCommandReq::add_params(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  params_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:KFMsg.MsgCommandReq.params)
}
inline void MsgCommandReq::add_params(const void* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:KFMsg.MsgCommandReq.params)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
MsgCommandReq::params() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgCommandReq.params)
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
MsgCommandReq::mutable_params() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgCommandReq.params)
  return &params_;
}

// -------------------------------------------------------------------

// MsgLoginReq

// bytes token = 1;
inline void MsgLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginReq.token)
  return token_.GetNoArena();
}
inline void MsgLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginReq.token)
}
#if LANG_CXX11
inline void MsgLoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginReq.token)
}
#endif
inline void MsgLoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginReq.token)
}
inline void MsgLoginReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginReq.token)
}
inline ::std::string* MsgLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginReq.token)
}

// uint64 accountid = 2;
inline void MsgLoginReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginReq.accountid)
  return accountid_;
}
inline void MsgLoginReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginReq.accountid)
}

// bytes version = 3;
inline void MsgLoginReq::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgLoginReq::version() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginReq.version)
  return version_.GetNoArena();
}
inline void MsgLoginReq::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginReq.version)
}
#if LANG_CXX11
inline void MsgLoginReq::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgLoginReq.version)
}
#endif
inline void MsgLoginReq::set_version(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgLoginReq.version)
}
inline void MsgLoginReq::set_version(const void* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgLoginReq.version)
}
inline ::std::string* MsgLoginReq::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginReq.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgLoginReq::release_version() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginReq.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgLoginReq::set_allocated_version(::std::string* version) {
  if (version != NULL) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginReq.version)
}

// -------------------------------------------------------------------

// MsgLoginAck

// uint64 playerid = 1;
inline void MsgLoginAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginAck.playerid)
  return playerid_;
}
inline void MsgLoginAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginAck.playerid)
}

// .KFMsg.PBObject playerdata = 2;
inline bool MsgLoginAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgLoginAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& MsgLoginAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgLoginAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgLoginAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgLoginAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgLoginAck.playerdata)
  return playerdata_;
}
inline void MsgLoginAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgLoginAck.playerdata)
}

// uint64 servertime = 3;
inline void MsgLoginAck::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgLoginAck::servertime() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgLoginAck.servertime)
  return servertime_;
}
inline void MsgLoginAck::set_servertime(::google::protobuf::uint64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgLoginAck.servertime)
}

// -------------------------------------------------------------------

// MsgLogoutReq

// -------------------------------------------------------------------

// MsgLogoutAck

// -------------------------------------------------------------------

// MsgTellBeKick

// uint32 type = 1;
inline void MsgTellBeKick::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 MsgTellBeKick::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellBeKick.type)
  return type_;
}
inline void MsgTellBeKick::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellBeKick.type)
}

// -------------------------------------------------------------------

// MsgTellShutDown

// -------------------------------------------------------------------

// PBDebugDrop

// uint32 dataid = 1;
inline void PBDebugDrop::clear_dataid() {
  dataid_ = 0u;
}
inline ::google::protobuf::uint32 PBDebugDrop::dataid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDebugDrop.dataid)
  return dataid_;
}
inline void PBDebugDrop::set_dataid(::google::protobuf::uint32 value) {
  
  dataid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBDebugDrop.dataid)
}

// uint32 dataindex = 2;
inline void PBDebugDrop::clear_dataindex() {
  dataindex_ = 0u;
}
inline ::google::protobuf::uint32 PBDebugDrop::dataindex() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDebugDrop.dataindex)
  return dataindex_;
}
inline void PBDebugDrop::set_dataindex(::google::protobuf::uint32 value) {
  
  dataindex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBDebugDrop.dataindex)
}

// bytes data_name = 3;
inline void PBDebugDrop::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBDebugDrop::data_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDebugDrop.data_name)
  return data_name_.GetNoArena();
}
inline void PBDebugDrop::set_data_name(const ::std::string& value) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBDebugDrop.data_name)
}
#if LANG_CXX11
inline void PBDebugDrop::set_data_name(::std::string&& value) {
  
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBDebugDrop.data_name)
}
#endif
inline void PBDebugDrop::set_data_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBDebugDrop.data_name)
}
inline void PBDebugDrop::set_data_name(const void* value, size_t size) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBDebugDrop.data_name)
}
inline ::std::string* PBDebugDrop::mutable_data_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBDebugDrop.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBDebugDrop::release_data_name() {
  // @@protoc_insertion_point(field_release:KFMsg.PBDebugDrop.data_name)
  
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBDebugDrop::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    
  } else {
    
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBDebugDrop.data_name)
}

// bytes logicname = 4;
inline void PBDebugDrop::clear_logicname() {
  logicname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& PBDebugDrop::logicname() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBDebugDrop.logicname)
  return logicname_.GetNoArena();
}
inline void PBDebugDrop::set_logicname(const ::std::string& value) {
  
  logicname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.PBDebugDrop.logicname)
}
#if LANG_CXX11
inline void PBDebugDrop::set_logicname(::std::string&& value) {
  
  logicname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.PBDebugDrop.logicname)
}
#endif
inline void PBDebugDrop::set_logicname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  logicname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.PBDebugDrop.logicname)
}
inline void PBDebugDrop::set_logicname(const void* value, size_t size) {
  
  logicname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.PBDebugDrop.logicname)
}
inline ::std::string* PBDebugDrop::mutable_logicname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.PBDebugDrop.logicname)
  return logicname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* PBDebugDrop::release_logicname() {
  // @@protoc_insertion_point(field_release:KFMsg.PBDebugDrop.logicname)
  
  return logicname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void PBDebugDrop::set_allocated_logicname(::std::string* logicname) {
  if (logicname != NULL) {
    
  } else {
    
  }
  logicname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), logicname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.PBDebugDrop.logicname)
}

// -------------------------------------------------------------------

// MsgDebugShowDrop

// uint32 dropid = 1;
inline void MsgDebugShowDrop::clear_dropid() {
  dropid_ = 0u;
}
inline ::google::protobuf::uint32 MsgDebugShowDrop::dropid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDebugShowDrop.dropid)
  return dropid_;
}
inline void MsgDebugShowDrop::set_dropid(::google::protobuf::uint32 value) {
  
  dropid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgDebugShowDrop.dropid)
}

// uint32 count = 2;
inline void MsgDebugShowDrop::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 MsgDebugShowDrop::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDebugShowDrop.count)
  return count_;
}
inline void MsgDebugShowDrop::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgDebugShowDrop.count)
}

// repeated .KFMsg.PBDebugDrop dropdata = 3;
inline int MsgDebugShowDrop::dropdata_size() const {
  return dropdata_.size();
}
inline void MsgDebugShowDrop::clear_dropdata() {
  dropdata_.Clear();
}
inline ::KFMsg::PBDebugDrop* MsgDebugShowDrop::mutable_dropdata(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgDebugShowDrop.dropdata)
  return dropdata_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDebugDrop >*
MsgDebugShowDrop::mutable_dropdata() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.MsgDebugShowDrop.dropdata)
  return &dropdata_;
}
inline const ::KFMsg::PBDebugDrop& MsgDebugShowDrop::dropdata(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDebugShowDrop.dropdata)
  return dropdata_.Get(index);
}
inline ::KFMsg::PBDebugDrop* MsgDebugShowDrop::add_dropdata() {
  // @@protoc_insertion_point(field_add:KFMsg.MsgDebugShowDrop.dropdata)
  return dropdata_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBDebugDrop >&
MsgDebugShowDrop::dropdata() const {
  // @@protoc_insertion_point(field_list:KFMsg.MsgDebugShowDrop.dropdata)
  return dropdata_;
}

// -------------------------------------------------------------------

// MsgSyncOnlineData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncOnlineData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncOnlineData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncOnlineData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncOnlineData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncOnlineData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncOnlineData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncOnlineData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncOnlineData.pbdata)
  return pbdata_;
}
inline void MsgSyncOnlineData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncOnlineData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncUpdateData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncUpdateData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncUpdateData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncUpdateData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncUpdateData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncUpdateData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncUpdateData.pbdata)
  return pbdata_;
}
inline void MsgSyncUpdateData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncUpdateData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncAddData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncAddData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncAddData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncAddData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncAddData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncAddData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncAddData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncAddData.pbdata)
  return pbdata_;
}
inline void MsgSyncAddData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncAddData.pbdata)
}

// -------------------------------------------------------------------

// MsgSyncRemoveData

// .KFMsg.PBObject pbdata = 1;
inline bool MsgSyncRemoveData::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& MsgSyncRemoveData::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgSyncRemoveData.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSyncRemoveData.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgSyncRemoveData::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSyncRemoveData.pbdata)
  return pbdata_;
}
inline void MsgSyncRemoveData::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSyncRemoveData.pbdata)
}

// -------------------------------------------------------------------

// MsgShowElement

// .KFMsg.PBShowElements elements = 1;
inline bool MsgShowElement::has_elements() const {
  return this != internal_default_instance() && elements_ != NULL;
}
inline const ::KFMsg::PBShowElements& MsgShowElement::_internal_elements() const {
  return *elements_;
}
inline const ::KFMsg::PBShowElements& MsgShowElement::elements() const {
  const ::KFMsg::PBShowElements* p = elements_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgShowElement.elements)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBShowElements*>(
      &::KFMsg::_PBShowElements_default_instance_);
}
inline ::KFMsg::PBShowElements* MsgShowElement::release_elements() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgShowElement.elements)
  
  ::KFMsg::PBShowElements* temp = elements_;
  elements_ = NULL;
  return temp;
}
inline ::KFMsg::PBShowElements* MsgShowElement::mutable_elements() {
  
  if (elements_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBShowElements>(GetArenaNoVirtual());
    elements_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgShowElement.elements)
  return elements_;
}
inline void MsgShowElement::set_allocated_elements(::KFMsg::PBShowElements* elements) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(elements_);
  }
  if (elements) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      elements = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, elements, submessage_arena);
    }
    
  } else {
    
  }
  elements_ = elements;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgShowElement.elements)
}

// -------------------------------------------------------------------

// MsgRemoveDataReq

// bytes data_name = 1;
inline void MsgRemoveDataReq::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRemoveDataReq::data_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveDataReq.data_name)
  return data_name_.GetNoArena();
}
inline void MsgRemoveDataReq::set_data_name(const ::std::string& value) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveDataReq.data_name)
}
#if LANG_CXX11
inline void MsgRemoveDataReq::set_data_name(::std::string&& value) {
  
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgRemoveDataReq.data_name)
}
#endif
inline void MsgRemoveDataReq::set_data_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgRemoveDataReq.data_name)
}
inline void MsgRemoveDataReq::set_data_name(const void* value, size_t size) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgRemoveDataReq.data_name)
}
inline ::std::string* MsgRemoveDataReq::mutable_data_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgRemoveDataReq.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRemoveDataReq::release_data_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgRemoveDataReq.data_name)
  
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRemoveDataReq::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    
  } else {
    
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgRemoveDataReq.data_name)
}

// uint64 key = 2;
inline void MsgRemoveDataReq::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgRemoveDataReq::key() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveDataReq.key)
  return key_;
}
inline void MsgRemoveDataReq::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveDataReq.key)
}

// -------------------------------------------------------------------

// MsgUpdateIntReq

// bytes parent_name = 1;
inline void MsgUpdateIntReq::clear_parent_name() {
  parent_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgUpdateIntReq::parent_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateIntReq.parent_name)
  return parent_name_.GetNoArena();
}
inline void MsgUpdateIntReq::set_parent_name(const ::std::string& value) {
  
  parent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateIntReq.parent_name)
}
#if LANG_CXX11
inline void MsgUpdateIntReq::set_parent_name(::std::string&& value) {
  
  parent_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgUpdateIntReq.parent_name)
}
#endif
inline void MsgUpdateIntReq::set_parent_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgUpdateIntReq.parent_name)
}
inline void MsgUpdateIntReq::set_parent_name(const void* value, size_t size) {
  
  parent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgUpdateIntReq.parent_name)
}
inline ::std::string* MsgUpdateIntReq::mutable_parent_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgUpdateIntReq.parent_name)
  return parent_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgUpdateIntReq::release_parent_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgUpdateIntReq.parent_name)
  
  return parent_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgUpdateIntReq::set_allocated_parent_name(::std::string* parent_name) {
  if (parent_name != NULL) {
    
  } else {
    
  }
  parent_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgUpdateIntReq.parent_name)
}

// bytes data_name = 2;
inline void MsgUpdateIntReq::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgUpdateIntReq::data_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateIntReq.data_name)
  return data_name_.GetNoArena();
}
inline void MsgUpdateIntReq::set_data_name(const ::std::string& value) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateIntReq.data_name)
}
#if LANG_CXX11
inline void MsgUpdateIntReq::set_data_name(::std::string&& value) {
  
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgUpdateIntReq.data_name)
}
#endif
inline void MsgUpdateIntReq::set_data_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgUpdateIntReq.data_name)
}
inline void MsgUpdateIntReq::set_data_name(const void* value, size_t size) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgUpdateIntReq.data_name)
}
inline ::std::string* MsgUpdateIntReq::mutable_data_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgUpdateIntReq.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgUpdateIntReq::release_data_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgUpdateIntReq.data_name)
  
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgUpdateIntReq::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    
  } else {
    
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgUpdateIntReq.data_name)
}

// uint64 key = 3;
inline void MsgUpdateIntReq::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgUpdateIntReq::key() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateIntReq.key)
  return key_;
}
inline void MsgUpdateIntReq::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateIntReq.key)
}

// uint64 value = 4;
inline void MsgUpdateIntReq::clear_value() {
  value_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgUpdateIntReq::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateIntReq.value)
  return value_;
}
inline void MsgUpdateIntReq::set_value(::google::protobuf::uint64 value) {
  
  value_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateIntReq.value)
}

// uint32 operate = 5;
inline void MsgUpdateIntReq::clear_operate() {
  operate_ = 0u;
}
inline ::google::protobuf::uint32 MsgUpdateIntReq::operate() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateIntReq.operate)
  return operate_;
}
inline void MsgUpdateIntReq::set_operate(::google::protobuf::uint32 value) {
  
  operate_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateIntReq.operate)
}

// -------------------------------------------------------------------

// MsgUpdateStrReq

// bytes parent_name = 1;
inline void MsgUpdateStrReq::clear_parent_name() {
  parent_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgUpdateStrReq::parent_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateStrReq.parent_name)
  return parent_name_.GetNoArena();
}
inline void MsgUpdateStrReq::set_parent_name(const ::std::string& value) {
  
  parent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateStrReq.parent_name)
}
#if LANG_CXX11
inline void MsgUpdateStrReq::set_parent_name(::std::string&& value) {
  
  parent_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgUpdateStrReq.parent_name)
}
#endif
inline void MsgUpdateStrReq::set_parent_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  parent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgUpdateStrReq.parent_name)
}
inline void MsgUpdateStrReq::set_parent_name(const void* value, size_t size) {
  
  parent_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgUpdateStrReq.parent_name)
}
inline ::std::string* MsgUpdateStrReq::mutable_parent_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgUpdateStrReq.parent_name)
  return parent_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgUpdateStrReq::release_parent_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgUpdateStrReq.parent_name)
  
  return parent_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgUpdateStrReq::set_allocated_parent_name(::std::string* parent_name) {
  if (parent_name != NULL) {
    
  } else {
    
  }
  parent_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), parent_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgUpdateStrReq.parent_name)
}

// bytes data_name = 2;
inline void MsgUpdateStrReq::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgUpdateStrReq::data_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateStrReq.data_name)
  return data_name_.GetNoArena();
}
inline void MsgUpdateStrReq::set_data_name(const ::std::string& value) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateStrReq.data_name)
}
#if LANG_CXX11
inline void MsgUpdateStrReq::set_data_name(::std::string&& value) {
  
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgUpdateStrReq.data_name)
}
#endif
inline void MsgUpdateStrReq::set_data_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgUpdateStrReq.data_name)
}
inline void MsgUpdateStrReq::set_data_name(const void* value, size_t size) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgUpdateStrReq.data_name)
}
inline ::std::string* MsgUpdateStrReq::mutable_data_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgUpdateStrReq.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgUpdateStrReq::release_data_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgUpdateStrReq.data_name)
  
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgUpdateStrReq::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    
  } else {
    
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgUpdateStrReq.data_name)
}

// uint64 key = 3;
inline void MsgUpdateStrReq::clear_key() {
  key_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgUpdateStrReq::key() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateStrReq.key)
  return key_;
}
inline void MsgUpdateStrReq::set_key(::google::protobuf::uint64 value) {
  
  key_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateStrReq.key)
}

// bytes value = 4;
inline void MsgUpdateStrReq::clear_value() {
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgUpdateStrReq::value() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUpdateStrReq.value)
  return value_.GetNoArena();
}
inline void MsgUpdateStrReq::set_value(const ::std::string& value) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgUpdateStrReq.value)
}
#if LANG_CXX11
inline void MsgUpdateStrReq::set_value(::std::string&& value) {
  
  value_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgUpdateStrReq.value)
}
#endif
inline void MsgUpdateStrReq::set_value(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgUpdateStrReq.value)
}
inline void MsgUpdateStrReq::set_value(const void* value, size_t size) {
  
  value_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgUpdateStrReq.value)
}
inline ::std::string* MsgUpdateStrReq::mutable_value() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgUpdateStrReq.value)
  return value_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgUpdateStrReq::release_value() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgUpdateStrReq.value)
  
  return value_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgUpdateStrReq::set_allocated_value(::std::string* value) {
  if (value != NULL) {
    
  } else {
    
  }
  value_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgUpdateStrReq.value)
}

// -------------------------------------------------------------------

// MsgRequestSyncReq

// bytes data_name = 1;
inline void MsgRequestSyncReq::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRequestSyncReq::data_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRequestSyncReq.data_name)
  return data_name_.GetNoArena();
}
inline void MsgRequestSyncReq::set_data_name(const ::std::string& value) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgRequestSyncReq.data_name)
}
#if LANG_CXX11
inline void MsgRequestSyncReq::set_data_name(::std::string&& value) {
  
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgRequestSyncReq.data_name)
}
#endif
inline void MsgRequestSyncReq::set_data_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgRequestSyncReq.data_name)
}
inline void MsgRequestSyncReq::set_data_name(const void* value, size_t size) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgRequestSyncReq.data_name)
}
inline ::std::string* MsgRequestSyncReq::mutable_data_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgRequestSyncReq.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRequestSyncReq::release_data_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgRequestSyncReq.data_name)
  
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRequestSyncReq::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    
  } else {
    
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgRequestSyncReq.data_name)
}

// -------------------------------------------------------------------

// MsgCancelSyncReq

// bytes data_name = 1;
inline void MsgCancelSyncReq::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgCancelSyncReq::data_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCancelSyncReq.data_name)
  return data_name_.GetNoArena();
}
inline void MsgCancelSyncReq::set_data_name(const ::std::string& value) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgCancelSyncReq.data_name)
}
#if LANG_CXX11
inline void MsgCancelSyncReq::set_data_name(::std::string&& value) {
  
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgCancelSyncReq.data_name)
}
#endif
inline void MsgCancelSyncReq::set_data_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgCancelSyncReq.data_name)
}
inline void MsgCancelSyncReq::set_data_name(const void* value, size_t size) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgCancelSyncReq.data_name)
}
inline ::std::string* MsgCancelSyncReq::mutable_data_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgCancelSyncReq.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgCancelSyncReq::release_data_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgCancelSyncReq.data_name)
  
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgCancelSyncReq::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    
  } else {
    
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgCancelSyncReq.data_name)
}

// -------------------------------------------------------------------

// MsgQueryBasicReq

// bytes name = 1;
inline void MsgQueryBasicReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgQueryBasicReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryBasicReq.name)
  return name_.GetNoArena();
}
inline void MsgQueryBasicReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryBasicReq.name)
}
#if LANG_CXX11
inline void MsgQueryBasicReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgQueryBasicReq.name)
}
#endif
inline void MsgQueryBasicReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgQueryBasicReq.name)
}
inline void MsgQueryBasicReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgQueryBasicReq.name)
}
inline ::std::string* MsgQueryBasicReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryBasicReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgQueryBasicReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryBasicReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgQueryBasicReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryBasicReq.name)
}

// -------------------------------------------------------------------

// MsgQueryBasicAck

// .KFMsg.PBObject player = 1;
inline bool MsgQueryBasicAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgQueryBasicAck::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgQueryBasicAck::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryBasicAck.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgQueryBasicAck::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryBasicAck.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgQueryBasicAck::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryBasicAck.player)
  return player_;
}
inline void MsgQueryBasicAck::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryBasicAck.player)
}

// -------------------------------------------------------------------

// MsgQueryPlayerReq

// uint64 playerid = 1;
inline void MsgQueryPlayerReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgQueryPlayerReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryPlayerReq.playerid)
  return playerid_;
}
inline void MsgQueryPlayerReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryPlayerReq.playerid)
}

// -------------------------------------------------------------------

// MsgQueryPlayerAck

// .KFMsg.PBObject player = 1;
inline bool MsgQueryPlayerAck::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgQueryPlayerAck::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgQueryPlayerAck::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryPlayerAck.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgQueryPlayerAck::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryPlayerAck.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgQueryPlayerAck::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryPlayerAck.player)
  return player_;
}
inline void MsgQueryPlayerAck::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryPlayerAck.player)
}

// -------------------------------------------------------------------

// MsgSetNameReq

// bytes name = 1;
inline void MsgSetNameReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetNameReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetNameReq.name)
  return name_.GetNoArena();
}
inline void MsgSetNameReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetNameReq.name)
}
#if LANG_CXX11
inline void MsgSetNameReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSetNameReq.name)
}
#endif
inline void MsgSetNameReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSetNameReq.name)
}
inline void MsgSetNameReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSetNameReq.name)
}
inline ::std::string* MsgSetNameReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSetNameReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetNameReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSetNameReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetNameReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSetNameReq.name)
}

// -------------------------------------------------------------------

// MsgSetSexReq

// uint32 sex = 1;
inline void MsgSetSexReq::clear_sex() {
  sex_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetSexReq::sex() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetSexReq.sex)
  return sex_;
}
inline void MsgSetSexReq::set_sex(::google::protobuf::uint32 value) {
  
  sex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetSexReq.sex)
}

// -------------------------------------------------------------------

// MsgCompoundReq

// uint32 id = 1;
inline void MsgCompoundReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgCompoundReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgCompoundReq.id)
  return id_;
}
inline void MsgCompoundReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgCompoundReq.id)
}

// -------------------------------------------------------------------

// MsgAchieveRewardReq

// uint32 id = 1;
inline void MsgAchieveRewardReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgAchieveRewardReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAchieveRewardReq.id)
  return id_;
}
inline void MsgAchieveRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgAchieveRewardReq.id)
}

// -------------------------------------------------------------------

// MsgActivityRewardReq

// uint32 type = 1;
inline void MsgActivityRewardReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 MsgActivityRewardReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgActivityRewardReq.type)
  return type_;
}
inline void MsgActivityRewardReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgActivityRewardReq.type)
}

// uint32 id = 2;
inline void MsgActivityRewardReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgActivityRewardReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgActivityRewardReq.id)
  return id_;
}
inline void MsgActivityRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgActivityRewardReq.id)
}

// -------------------------------------------------------------------

// MsgSevenSignRewardReq

// uint32 day = 1;
inline void MsgSevenSignRewardReq::clear_day() {
  day_ = 0u;
}
inline ::google::protobuf::uint32 MsgSevenSignRewardReq::day() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSevenSignRewardReq.day)
  return day_;
}
inline void MsgSevenSignRewardReq::set_day(::google::protobuf::uint32 value) {
  
  day_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSevenSignRewardReq.day)
}

// -------------------------------------------------------------------

// MsgMoveItemReq

// bytes sourcename = 1;
inline void MsgMoveItemReq::clear_sourcename() {
  sourcename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgMoveItemReq::sourcename() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMoveItemReq.sourcename)
  return sourcename_.GetNoArena();
}
inline void MsgMoveItemReq::set_sourcename(const ::std::string& value) {
  
  sourcename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgMoveItemReq.sourcename)
}
#if LANG_CXX11
inline void MsgMoveItemReq::set_sourcename(::std::string&& value) {
  
  sourcename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgMoveItemReq.sourcename)
}
#endif
inline void MsgMoveItemReq::set_sourcename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sourcename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgMoveItemReq.sourcename)
}
inline void MsgMoveItemReq::set_sourcename(const void* value, size_t size) {
  
  sourcename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgMoveItemReq.sourcename)
}
inline ::std::string* MsgMoveItemReq::mutable_sourcename() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgMoveItemReq.sourcename)
  return sourcename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMoveItemReq::release_sourcename() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgMoveItemReq.sourcename)
  
  return sourcename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMoveItemReq::set_allocated_sourcename(::std::string* sourcename) {
  if (sourcename != NULL) {
    
  } else {
    
  }
  sourcename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sourcename);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgMoveItemReq.sourcename)
}

// uint64 sourceuuid = 2;
inline void MsgMoveItemReq::clear_sourceuuid() {
  sourceuuid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgMoveItemReq::sourceuuid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMoveItemReq.sourceuuid)
  return sourceuuid_;
}
inline void MsgMoveItemReq::set_sourceuuid(::google::protobuf::uint64 value) {
  
  sourceuuid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgMoveItemReq.sourceuuid)
}

// bytes targetname = 3;
inline void MsgMoveItemReq::clear_targetname() {
  targetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgMoveItemReq::targetname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMoveItemReq.targetname)
  return targetname_.GetNoArena();
}
inline void MsgMoveItemReq::set_targetname(const ::std::string& value) {
  
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgMoveItemReq.targetname)
}
#if LANG_CXX11
inline void MsgMoveItemReq::set_targetname(::std::string&& value) {
  
  targetname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgMoveItemReq.targetname)
}
#endif
inline void MsgMoveItemReq::set_targetname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgMoveItemReq.targetname)
}
inline void MsgMoveItemReq::set_targetname(const void* value, size_t size) {
  
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgMoveItemReq.targetname)
}
inline ::std::string* MsgMoveItemReq::mutable_targetname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgMoveItemReq.targetname)
  return targetname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMoveItemReq::release_targetname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgMoveItemReq.targetname)
  
  return targetname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMoveItemReq::set_allocated_targetname(::std::string* targetname) {
  if (targetname != NULL) {
    
  } else {
    
  }
  targetname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgMoveItemReq.targetname)
}

// uint32 targetindex = 4;
inline void MsgMoveItemReq::clear_targetindex() {
  targetindex_ = 0u;
}
inline ::google::protobuf::uint32 MsgMoveItemReq::targetindex() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMoveItemReq.targetindex)
  return targetindex_;
}
inline void MsgMoveItemReq::set_targetindex(::google::protobuf::uint32 value) {
  
  targetindex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgMoveItemReq.targetindex)
}

// bytes tabname = 5;
inline void MsgMoveItemReq::clear_tabname() {
  tabname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgMoveItemReq::tabname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMoveItemReq.tabname)
  return tabname_.GetNoArena();
}
inline void MsgMoveItemReq::set_tabname(const ::std::string& value) {
  
  tabname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgMoveItemReq.tabname)
}
#if LANG_CXX11
inline void MsgMoveItemReq::set_tabname(::std::string&& value) {
  
  tabname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgMoveItemReq.tabname)
}
#endif
inline void MsgMoveItemReq::set_tabname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tabname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgMoveItemReq.tabname)
}
inline void MsgMoveItemReq::set_tabname(const void* value, size_t size) {
  
  tabname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgMoveItemReq.tabname)
}
inline ::std::string* MsgMoveItemReq::mutable_tabname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgMoveItemReq.tabname)
  return tabname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMoveItemReq::release_tabname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgMoveItemReq.tabname)
  
  return tabname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMoveItemReq::set_allocated_tabname(::std::string* tabname) {
  if (tabname != NULL) {
    
  } else {
    
  }
  tabname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tabname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgMoveItemReq.tabname)
}

// -------------------------------------------------------------------

// MsgMoveAllItemReq

// bytes sourcename = 1;
inline void MsgMoveAllItemReq::clear_sourcename() {
  sourcename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgMoveAllItemReq::sourcename() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMoveAllItemReq.sourcename)
  return sourcename_.GetNoArena();
}
inline void MsgMoveAllItemReq::set_sourcename(const ::std::string& value) {
  
  sourcename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgMoveAllItemReq.sourcename)
}
#if LANG_CXX11
inline void MsgMoveAllItemReq::set_sourcename(::std::string&& value) {
  
  sourcename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgMoveAllItemReq.sourcename)
}
#endif
inline void MsgMoveAllItemReq::set_sourcename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sourcename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgMoveAllItemReq.sourcename)
}
inline void MsgMoveAllItemReq::set_sourcename(const void* value, size_t size) {
  
  sourcename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgMoveAllItemReq.sourcename)
}
inline ::std::string* MsgMoveAllItemReq::mutable_sourcename() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgMoveAllItemReq.sourcename)
  return sourcename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMoveAllItemReq::release_sourcename() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgMoveAllItemReq.sourcename)
  
  return sourcename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMoveAllItemReq::set_allocated_sourcename(::std::string* sourcename) {
  if (sourcename != NULL) {
    
  } else {
    
  }
  sourcename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sourcename);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgMoveAllItemReq.sourcename)
}

// bytes targetname = 2;
inline void MsgMoveAllItemReq::clear_targetname() {
  targetname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgMoveAllItemReq::targetname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMoveAllItemReq.targetname)
  return targetname_.GetNoArena();
}
inline void MsgMoveAllItemReq::set_targetname(const ::std::string& value) {
  
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgMoveAllItemReq.targetname)
}
#if LANG_CXX11
inline void MsgMoveAllItemReq::set_targetname(::std::string&& value) {
  
  targetname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgMoveAllItemReq.targetname)
}
#endif
inline void MsgMoveAllItemReq::set_targetname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgMoveAllItemReq.targetname)
}
inline void MsgMoveAllItemReq::set_targetname(const void* value, size_t size) {
  
  targetname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgMoveAllItemReq.targetname)
}
inline ::std::string* MsgMoveAllItemReq::mutable_targetname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgMoveAllItemReq.targetname)
  return targetname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgMoveAllItemReq::release_targetname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgMoveAllItemReq.targetname)
  
  return targetname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgMoveAllItemReq::set_allocated_targetname(::std::string* targetname) {
  if (targetname != NULL) {
    
  } else {
    
  }
  targetname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), targetname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgMoveAllItemReq.targetname)
}

// -------------------------------------------------------------------

// MsgSortItemReq

// bytes bagname = 1;
inline void MsgSortItemReq::clear_bagname() {
  bagname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSortItemReq::bagname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSortItemReq.bagname)
  return bagname_.GetNoArena();
}
inline void MsgSortItemReq::set_bagname(const ::std::string& value) {
  
  bagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSortItemReq.bagname)
}
#if LANG_CXX11
inline void MsgSortItemReq::set_bagname(::std::string&& value) {
  
  bagname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSortItemReq.bagname)
}
#endif
inline void MsgSortItemReq::set_bagname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  bagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSortItemReq.bagname)
}
inline void MsgSortItemReq::set_bagname(const void* value, size_t size) {
  
  bagname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSortItemReq.bagname)
}
inline ::std::string* MsgSortItemReq::mutable_bagname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSortItemReq.bagname)
  return bagname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSortItemReq::release_bagname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSortItemReq.bagname)
  
  return bagname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSortItemReq::set_allocated_bagname(::std::string* bagname) {
  if (bagname != NULL) {
    
  } else {
    
  }
  bagname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), bagname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSortItemReq.bagname)
}

// bytes tabname = 2;
inline void MsgSortItemReq::clear_tabname() {
  tabname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSortItemReq::tabname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSortItemReq.tabname)
  return tabname_.GetNoArena();
}
inline void MsgSortItemReq::set_tabname(const ::std::string& value) {
  
  tabname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSortItemReq.tabname)
}
#if LANG_CXX11
inline void MsgSortItemReq::set_tabname(::std::string&& value) {
  
  tabname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSortItemReq.tabname)
}
#endif
inline void MsgSortItemReq::set_tabname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  tabname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSortItemReq.tabname)
}
inline void MsgSortItemReq::set_tabname(const void* value, size_t size) {
  
  tabname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSortItemReq.tabname)
}
inline ::std::string* MsgSortItemReq::mutable_tabname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSortItemReq.tabname)
  return tabname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSortItemReq::release_tabname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSortItemReq.tabname)
  
  return tabname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSortItemReq::set_allocated_tabname(::std::string* tabname) {
  if (tabname != NULL) {
    
  } else {
    
  }
  tabname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), tabname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSortItemReq.tabname)
}

// -------------------------------------------------------------------

// MsgRemoveItemReq

// bytes sourcename = 1;
inline void MsgRemoveItemReq::clear_sourcename() {
  sourcename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgRemoveItemReq::sourcename() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveItemReq.sourcename)
  return sourcename_.GetNoArena();
}
inline void MsgRemoveItemReq::set_sourcename(const ::std::string& value) {
  
  sourcename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveItemReq.sourcename)
}
#if LANG_CXX11
inline void MsgRemoveItemReq::set_sourcename(::std::string&& value) {
  
  sourcename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgRemoveItemReq.sourcename)
}
#endif
inline void MsgRemoveItemReq::set_sourcename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  sourcename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgRemoveItemReq.sourcename)
}
inline void MsgRemoveItemReq::set_sourcename(const void* value, size_t size) {
  
  sourcename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgRemoveItemReq.sourcename)
}
inline ::std::string* MsgRemoveItemReq::mutable_sourcename() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgRemoveItemReq.sourcename)
  return sourcename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgRemoveItemReq::release_sourcename() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgRemoveItemReq.sourcename)
  
  return sourcename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgRemoveItemReq::set_allocated_sourcename(::std::string* sourcename) {
  if (sourcename != NULL) {
    
  } else {
    
  }
  sourcename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), sourcename);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgRemoveItemReq.sourcename)
}

// uint64 uuid = 2;
inline void MsgRemoveItemReq::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgRemoveItemReq::uuid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveItemReq.uuid)
  return uuid_;
}
inline void MsgRemoveItemReq::set_uuid(::google::protobuf::uint64 value) {
  
  uuid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveItemReq.uuid)
}

// -------------------------------------------------------------------

// MsgRemoveItemCountReq

// uint32 itemid = 1;
inline void MsgRemoveItemCountReq::clear_itemid() {
  itemid_ = 0u;
}
inline ::google::protobuf::uint32 MsgRemoveItemCountReq::itemid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveItemCountReq.itemid)
  return itemid_;
}
inline void MsgRemoveItemCountReq::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveItemCountReq.itemid)
}

// uint32 count = 2;
inline void MsgRemoveItemCountReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 MsgRemoveItemCountReq::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgRemoveItemCountReq.count)
  return count_;
}
inline void MsgRemoveItemCountReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgRemoveItemCountReq.count)
}

// -------------------------------------------------------------------

// MsgUseItemReq

// bytes name = 1;
inline void MsgUseItemReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgUseItemReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUseItemReq.name)
  return name_.GetNoArena();
}
inline void MsgUseItemReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgUseItemReq.name)
}
#if LANG_CXX11
inline void MsgUseItemReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgUseItemReq.name)
}
#endif
inline void MsgUseItemReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgUseItemReq.name)
}
inline void MsgUseItemReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgUseItemReq.name)
}
inline ::std::string* MsgUseItemReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgUseItemReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgUseItemReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgUseItemReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgUseItemReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgUseItemReq.name)
}

// uint64 uuid = 2;
inline void MsgUseItemReq::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgUseItemReq::uuid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgUseItemReq.uuid)
  return uuid_;
}
inline void MsgUseItemReq::set_uuid(::google::protobuf::uint64 value) {
  
  uuid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgUseItemReq.uuid)
}

// -------------------------------------------------------------------

// MsgSellItemReq

// bytes name = 1;
inline void MsgSellItemReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSellItemReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSellItemReq.name)
  return name_.GetNoArena();
}
inline void MsgSellItemReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSellItemReq.name)
}
#if LANG_CXX11
inline void MsgSellItemReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSellItemReq.name)
}
#endif
inline void MsgSellItemReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSellItemReq.name)
}
inline void MsgSellItemReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSellItemReq.name)
}
inline ::std::string* MsgSellItemReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSellItemReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSellItemReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSellItemReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSellItemReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSellItemReq.name)
}

// uint64 uuid = 2;
inline void MsgSellItemReq::clear_uuid() {
  uuid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgSellItemReq::uuid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSellItemReq.uuid)
  return uuid_;
}
inline void MsgSellItemReq::set_uuid(::google::protobuf::uint64 value) {
  
  uuid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSellItemReq.uuid)
}

// uint32 count = 3;
inline void MsgSellItemReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 MsgSellItemReq::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSellItemReq.count)
  return count_;
}
inline void MsgSellItemReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSellItemReq.count)
}

// -------------------------------------------------------------------

// MsgSellItemAck

// uint32 itemid = 1;
inline void MsgSellItemAck::clear_itemid() {
  itemid_ = 0u;
}
inline ::google::protobuf::uint32 MsgSellItemAck::itemid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSellItemAck.itemid)
  return itemid_;
}
inline void MsgSellItemAck::set_itemid(::google::protobuf::uint32 value) {
  
  itemid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSellItemAck.itemid)
}

// uint32 count = 2;
inline void MsgSellItemAck::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 MsgSellItemAck::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSellItemAck.count)
  return count_;
}
inline void MsgSellItemAck::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSellItemAck.count)
}

// -------------------------------------------------------------------

// MsgViewMailReq

// uint64 id = 1;
inline void MsgViewMailReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgViewMailReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgViewMailReq.id)
  return id_;
}
inline void MsgViewMailReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgViewMailReq.id)
}

// -------------------------------------------------------------------

// MsgDeleteMailReq

// uint64 id = 1;
inline void MsgDeleteMailReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgDeleteMailReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDeleteMailReq.id)
  return id_;
}
inline void MsgDeleteMailReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgDeleteMailReq.id)
}

// -------------------------------------------------------------------

// MsgQueryMailReq

// -------------------------------------------------------------------

// MsgMailRewardReq

// uint64 id = 1;
inline void MsgMailRewardReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgMailRewardReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgMailRewardReq.id)
  return id_;
}
inline void MsgMailRewardReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgMailRewardReq.id)
}

// -------------------------------------------------------------------

// MsgStoreBuyGoodsReq

// uint32 storeid = 1;
inline void MsgStoreBuyGoodsReq::clear_storeid() {
  storeid_ = 0u;
}
inline ::google::protobuf::uint32 MsgStoreBuyGoodsReq::storeid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStoreBuyGoodsReq.storeid)
  return storeid_;
}
inline void MsgStoreBuyGoodsReq::set_storeid(::google::protobuf::uint32 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStoreBuyGoodsReq.storeid)
}

// uint32 goodsid = 2;
inline void MsgStoreBuyGoodsReq::clear_goodsid() {
  goodsid_ = 0u;
}
inline ::google::protobuf::uint32 MsgStoreBuyGoodsReq::goodsid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStoreBuyGoodsReq.goodsid)
  return goodsid_;
}
inline void MsgStoreBuyGoodsReq::set_goodsid(::google::protobuf::uint32 value) {
  
  goodsid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStoreBuyGoodsReq.goodsid)
}

// uint32 index = 3;
inline void MsgStoreBuyGoodsReq::clear_index() {
  index_ = 0u;
}
inline ::google::protobuf::uint32 MsgStoreBuyGoodsReq::index() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStoreBuyGoodsReq.index)
  return index_;
}
inline void MsgStoreBuyGoodsReq::set_index(::google::protobuf::uint32 value) {
  
  index_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStoreBuyGoodsReq.index)
}

// uint32 buycount = 4;
inline void MsgStoreBuyGoodsReq::clear_buycount() {
  buycount_ = 0u;
}
inline ::google::protobuf::uint32 MsgStoreBuyGoodsReq::buycount() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStoreBuyGoodsReq.buycount)
  return buycount_;
}
inline void MsgStoreBuyGoodsReq::set_buycount(::google::protobuf::uint32 value) {
  
  buycount_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStoreBuyGoodsReq.buycount)
}

// -------------------------------------------------------------------

// MsgStoreRefreshReq

// uint32 storeid = 1;
inline void MsgStoreRefreshReq::clear_storeid() {
  storeid_ = 0u;
}
inline ::google::protobuf::uint32 MsgStoreRefreshReq::storeid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStoreRefreshReq.storeid)
  return storeid_;
}
inline void MsgStoreRefreshReq::set_storeid(::google::protobuf::uint32 value) {
  
  storeid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStoreRefreshReq.storeid)
}

// uint32 refreshtype = 2;
inline void MsgStoreRefreshReq::clear_refreshtype() {
  refreshtype_ = 0u;
}
inline ::google::protobuf::uint32 MsgStoreRefreshReq::refreshtype() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgStoreRefreshReq.refreshtype)
  return refreshtype_;
}
inline void MsgStoreRefreshReq::set_refreshtype(::google::protobuf::uint32 value) {
  
  refreshtype_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgStoreRefreshReq.refreshtype)
}

// -------------------------------------------------------------------

// MsgApplyPayOrderReq

// string payid = 1;
inline void MsgApplyPayOrderReq::clear_payid() {
  payid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgApplyPayOrderReq::payid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgApplyPayOrderReq.payid)
  return payid_.GetNoArena();
}
inline void MsgApplyPayOrderReq::set_payid(const ::std::string& value) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgApplyPayOrderReq.payid)
}
#if LANG_CXX11
inline void MsgApplyPayOrderReq::set_payid(::std::string&& value) {
  
  payid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgApplyPayOrderReq.payid)
}
#endif
inline void MsgApplyPayOrderReq::set_payid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgApplyPayOrderReq.payid)
}
inline void MsgApplyPayOrderReq::set_payid(const char* value, size_t size) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgApplyPayOrderReq.payid)
}
inline ::std::string* MsgApplyPayOrderReq::mutable_payid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgApplyPayOrderReq.payid)
  return payid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgApplyPayOrderReq::release_payid() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgApplyPayOrderReq.payid)
  
  return payid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgApplyPayOrderReq::set_allocated_payid(::std::string* payid) {
  if (payid != NULL) {
    
  } else {
    
  }
  payid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgApplyPayOrderReq.payid)
}

// -------------------------------------------------------------------

// MsgApplyPayOrderAck

// string payid = 1;
inline void MsgApplyPayOrderAck::clear_payid() {
  payid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgApplyPayOrderAck::payid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgApplyPayOrderAck.payid)
  return payid_.GetNoArena();
}
inline void MsgApplyPayOrderAck::set_payid(const ::std::string& value) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgApplyPayOrderAck.payid)
}
#if LANG_CXX11
inline void MsgApplyPayOrderAck::set_payid(::std::string&& value) {
  
  payid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgApplyPayOrderAck.payid)
}
#endif
inline void MsgApplyPayOrderAck::set_payid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgApplyPayOrderAck.payid)
}
inline void MsgApplyPayOrderAck::set_payid(const char* value, size_t size) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgApplyPayOrderAck.payid)
}
inline ::std::string* MsgApplyPayOrderAck::mutable_payid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgApplyPayOrderAck.payid)
  return payid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgApplyPayOrderAck::release_payid() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgApplyPayOrderAck.payid)
  
  return payid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgApplyPayOrderAck::set_allocated_payid(::std::string* payid) {
  if (payid != NULL) {
    
  } else {
    
  }
  payid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgApplyPayOrderAck.payid)
}

// string order = 2;
inline void MsgApplyPayOrderAck::clear_order() {
  order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgApplyPayOrderAck::order() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgApplyPayOrderAck.order)
  return order_.GetNoArena();
}
inline void MsgApplyPayOrderAck::set_order(const ::std::string& value) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgApplyPayOrderAck.order)
}
#if LANG_CXX11
inline void MsgApplyPayOrderAck::set_order(::std::string&& value) {
  
  order_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgApplyPayOrderAck.order)
}
#endif
inline void MsgApplyPayOrderAck::set_order(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgApplyPayOrderAck.order)
}
inline void MsgApplyPayOrderAck::set_order(const char* value, size_t size) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgApplyPayOrderAck.order)
}
inline ::std::string* MsgApplyPayOrderAck::mutable_order() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgApplyPayOrderAck.order)
  return order_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgApplyPayOrderAck::release_order() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgApplyPayOrderAck.order)
  
  return order_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgApplyPayOrderAck::set_allocated_order(::std::string* order) {
  if (order != NULL) {
    
  } else {
    
  }
  order_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgApplyPayOrderAck.order)
}

// -------------------------------------------------------------------

// MsgPayResultReq

// string payid = 1;
inline void MsgPayResultReq::clear_payid() {
  payid_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgPayResultReq::payid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgPayResultReq.payid)
  return payid_.GetNoArena();
}
inline void MsgPayResultReq::set_payid(const ::std::string& value) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgPayResultReq.payid)
}
#if LANG_CXX11
inline void MsgPayResultReq::set_payid(::std::string&& value) {
  
  payid_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgPayResultReq.payid)
}
#endif
inline void MsgPayResultReq::set_payid(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgPayResultReq.payid)
}
inline void MsgPayResultReq::set_payid(const char* value, size_t size) {
  
  payid_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgPayResultReq.payid)
}
inline ::std::string* MsgPayResultReq::mutable_payid() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgPayResultReq.payid)
  return payid_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgPayResultReq::release_payid() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgPayResultReq.payid)
  
  return payid_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgPayResultReq::set_allocated_payid(::std::string* payid) {
  if (payid != NULL) {
    
  } else {
    
  }
  payid_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payid);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgPayResultReq.payid)
}

// string order = 2;
inline void MsgPayResultReq::clear_order() {
  order_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgPayResultReq::order() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgPayResultReq.order)
  return order_.GetNoArena();
}
inline void MsgPayResultReq::set_order(const ::std::string& value) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgPayResultReq.order)
}
#if LANG_CXX11
inline void MsgPayResultReq::set_order(::std::string&& value) {
  
  order_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgPayResultReq.order)
}
#endif
inline void MsgPayResultReq::set_order(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgPayResultReq.order)
}
inline void MsgPayResultReq::set_order(const char* value, size_t size) {
  
  order_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgPayResultReq.order)
}
inline ::std::string* MsgPayResultReq::mutable_order() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgPayResultReq.order)
  return order_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgPayResultReq::release_order() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgPayResultReq.order)
  
  return order_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgPayResultReq::set_allocated_order(::std::string* order) {
  if (order != NULL) {
    
  } else {
    
  }
  order_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), order);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgPayResultReq.order)
}

// bool result = 3;
inline void MsgPayResultReq::clear_result() {
  result_ = false;
}
inline bool MsgPayResultReq::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgPayResultReq.result)
  return result_;
}
inline void MsgPayResultReq::set_result(bool value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgPayResultReq.result)
}

// -------------------------------------------------------------------

// MsgQueryPayReq

// -------------------------------------------------------------------

// MsgQueryRankListReq

// uint32 rankid = 1;
inline void MsgQueryRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListReq.rankid)
  return rankid_;
}
inline void MsgQueryRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryRankListReq.rankid)
}

// uint32 start = 2;
inline void MsgQueryRankListReq::clear_start() {
  start_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryRankListReq::start() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListReq.start)
  return start_;
}
inline void MsgQueryRankListReq::set_start(::google::protobuf::uint32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryRankListReq.start)
}

// uint32 count = 3;
inline void MsgQueryRankListReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryRankListReq::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListReq.count)
  return count_;
}
inline void MsgQueryRankListReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryRankListReq.count)
}

// -------------------------------------------------------------------

// MsgQueryRankListAck

// uint32 rankid = 1;
inline void MsgQueryRankListAck::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryRankListAck::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListAck.rankid)
  return rankid_;
}
inline void MsgQueryRankListAck::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryRankListAck.rankid)
}

// .KFMsg.PBRankDatas rankdatas = 2;
inline bool MsgQueryRankListAck::has_rankdatas() const {
  return this != internal_default_instance() && rankdatas_ != NULL;
}
inline const ::KFMsg::PBRankDatas& MsgQueryRankListAck::_internal_rankdatas() const {
  return *rankdatas_;
}
inline const ::KFMsg::PBRankDatas& MsgQueryRankListAck::rankdatas() const {
  const ::KFMsg::PBRankDatas* p = rankdatas_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListAck.rankdatas)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRankDatas*>(
      &::KFMsg::_PBRankDatas_default_instance_);
}
inline ::KFMsg::PBRankDatas* MsgQueryRankListAck::release_rankdatas() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryRankListAck.rankdatas)
  
  ::KFMsg::PBRankDatas* temp = rankdatas_;
  rankdatas_ = NULL;
  return temp;
}
inline ::KFMsg::PBRankDatas* MsgQueryRankListAck::mutable_rankdatas() {
  
  if (rankdatas_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRankDatas>(GetArenaNoVirtual());
    rankdatas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryRankListAck.rankdatas)
  return rankdatas_;
}
inline void MsgQueryRankListAck::set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rankdatas_);
  }
  if (rankdatas) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rankdatas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rankdatas, submessage_arena);
    }
    
  } else {
    
  }
  rankdatas_ = rankdatas;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryRankListAck.rankdatas)
}

// uint32 selfindex = 3;
inline void MsgQueryRankListAck::clear_selfindex() {
  selfindex_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryRankListAck::selfindex() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryRankListAck.selfindex)
  return selfindex_;
}
inline void MsgQueryRankListAck::set_selfindex(::google::protobuf::uint32 value) {
  
  selfindex_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryRankListAck.selfindex)
}

// -------------------------------------------------------------------

// MsgQueryFriendRankListReq

// uint32 rankid = 1;
inline void MsgQueryFriendRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryFriendRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryFriendRankListReq.rankid)
  return rankid_;
}
inline void MsgQueryFriendRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryFriendRankListReq.rankid)
}

// -------------------------------------------------------------------

// MsgQueryFriendRankListAck

// uint32 rankid = 1;
inline void MsgQueryFriendRankListAck::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 MsgQueryFriendRankListAck::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryFriendRankListAck.rankid)
  return rankid_;
}
inline void MsgQueryFriendRankListAck::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgQueryFriendRankListAck.rankid)
}

// .KFMsg.PBRankDatas rankdatas = 2;
inline bool MsgQueryFriendRankListAck::has_rankdatas() const {
  return this != internal_default_instance() && rankdatas_ != NULL;
}
inline const ::KFMsg::PBRankDatas& MsgQueryFriendRankListAck::_internal_rankdatas() const {
  return *rankdatas_;
}
inline const ::KFMsg::PBRankDatas& MsgQueryFriendRankListAck::rankdatas() const {
  const ::KFMsg::PBRankDatas* p = rankdatas_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgQueryFriendRankListAck.rankdatas)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRankDatas*>(
      &::KFMsg::_PBRankDatas_default_instance_);
}
inline ::KFMsg::PBRankDatas* MsgQueryFriendRankListAck::release_rankdatas() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgQueryFriendRankListAck.rankdatas)
  
  ::KFMsg::PBRankDatas* temp = rankdatas_;
  rankdatas_ = NULL;
  return temp;
}
inline ::KFMsg::PBRankDatas* MsgQueryFriendRankListAck::mutable_rankdatas() {
  
  if (rankdatas_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRankDatas>(GetArenaNoVirtual());
    rankdatas_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgQueryFriendRankListAck.rankdatas)
  return rankdatas_;
}
inline void MsgQueryFriendRankListAck::set_allocated_rankdatas(::KFMsg::PBRankDatas* rankdatas) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(rankdatas_);
  }
  if (rankdatas) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      rankdatas = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, rankdatas, submessage_arena);
    }
    
  } else {
    
  }
  rankdatas_ = rankdatas;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgQueryFriendRankListAck.rankdatas)
}

// -------------------------------------------------------------------

// MsgAddRelationReq

// bytes relationname = 1;
inline void MsgAddRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgAddRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void MsgAddRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddRelationReq.relationname)
}
#if LANG_CXX11
inline void MsgAddRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgAddRelationReq.relationname)
}
#endif
inline void MsgAddRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgAddRelationReq.relationname)
}
inline void MsgAddRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgAddRelationReq.relationname)
}
inline ::std::string* MsgAddRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgAddRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgAddRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgAddRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgAddRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgAddRelationReq.relationname)
}

// bytes playername = 2;
inline void MsgAddRelationReq::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgAddRelationReq::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddRelationReq.playername)
  return playername_.GetNoArena();
}
inline void MsgAddRelationReq::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddRelationReq.playername)
}
#if LANG_CXX11
inline void MsgAddRelationReq::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgAddRelationReq.playername)
}
#endif
inline void MsgAddRelationReq::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgAddRelationReq.playername)
}
inline void MsgAddRelationReq::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgAddRelationReq.playername)
}
inline ::std::string* MsgAddRelationReq::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgAddRelationReq.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgAddRelationReq::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgAddRelationReq.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgAddRelationReq::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgAddRelationReq.playername)
}

// uint64 playerid = 3;
inline void MsgAddRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgAddRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddRelationReq.playerid)
  return playerid_;
}
inline void MsgAddRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddRelationReq.playerid)
}

// bytes message = 4;
inline void MsgAddRelationReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgAddRelationReq::message() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgAddRelationReq.message)
  return message_.GetNoArena();
}
inline void MsgAddRelationReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgAddRelationReq.message)
}
#if LANG_CXX11
inline void MsgAddRelationReq::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgAddRelationReq.message)
}
#endif
inline void MsgAddRelationReq::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgAddRelationReq.message)
}
inline void MsgAddRelationReq::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgAddRelationReq.message)
}
inline ::std::string* MsgAddRelationReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgAddRelationReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgAddRelationReq::release_message() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgAddRelationReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgAddRelationReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgAddRelationReq.message)
}

// -------------------------------------------------------------------

// MsgDelRelationReq

// bytes relationname = 1;
inline void MsgDelRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgDelRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDelRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void MsgDelRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgDelRelationReq.relationname)
}
#if LANG_CXX11
inline void MsgDelRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgDelRelationReq.relationname)
}
#endif
inline void MsgDelRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgDelRelationReq.relationname)
}
inline void MsgDelRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgDelRelationReq.relationname)
}
inline ::std::string* MsgDelRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgDelRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgDelRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgDelRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgDelRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgDelRelationReq.relationname)
}

// uint64 playerid = 2;
inline void MsgDelRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgDelRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgDelRelationReq.playerid)
  return playerid_;
}
inline void MsgDelRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgDelRelationReq.playerid)
}

// -------------------------------------------------------------------

// MsgReplyRelationInviteReq

// bytes relationname = 1;
inline void MsgReplyRelationInviteReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgReplyRelationInviteReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyRelationInviteReq.relationname)
  return relationname_.GetNoArena();
}
inline void MsgReplyRelationInviteReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyRelationInviteReq.relationname)
}
#if LANG_CXX11
inline void MsgReplyRelationInviteReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgReplyRelationInviteReq.relationname)
}
#endif
inline void MsgReplyRelationInviteReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgReplyRelationInviteReq.relationname)
}
inline void MsgReplyRelationInviteReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgReplyRelationInviteReq.relationname)
}
inline ::std::string* MsgReplyRelationInviteReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgReplyRelationInviteReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgReplyRelationInviteReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgReplyRelationInviteReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgReplyRelationInviteReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgReplyRelationInviteReq.relationname)
}

// uint64 playerid = 2;
inline void MsgReplyRelationInviteReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgReplyRelationInviteReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyRelationInviteReq.playerid)
  return playerid_;
}
inline void MsgReplyRelationInviteReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyRelationInviteReq.playerid)
}

// uint32 operate = 3;
inline void MsgReplyRelationInviteReq::clear_operate() {
  operate_ = 0u;
}
inline ::google::protobuf::uint32 MsgReplyRelationInviteReq::operate() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgReplyRelationInviteReq.operate)
  return operate_;
}
inline void MsgReplyRelationInviteReq::set_operate(::google::protobuf::uint32 value) {
  
  operate_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgReplyRelationInviteReq.operate)
}

// -------------------------------------------------------------------

// MsgSetRefuseRelationInviteReq

// bytes refusename = 1;
inline void MsgSetRefuseRelationInviteReq::clear_refusename() {
  refusename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgSetRefuseRelationInviteReq::refusename() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetRefuseRelationInviteReq.refusename)
  return refusename_.GetNoArena();
}
inline void MsgSetRefuseRelationInviteReq::set_refusename(const ::std::string& value) {
  
  refusename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetRefuseRelationInviteReq.refusename)
}
#if LANG_CXX11
inline void MsgSetRefuseRelationInviteReq::set_refusename(::std::string&& value) {
  
  refusename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgSetRefuseRelationInviteReq.refusename)
}
#endif
inline void MsgSetRefuseRelationInviteReq::set_refusename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  refusename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgSetRefuseRelationInviteReq.refusename)
}
inline void MsgSetRefuseRelationInviteReq::set_refusename(const void* value, size_t size) {
  
  refusename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgSetRefuseRelationInviteReq.refusename)
}
inline ::std::string* MsgSetRefuseRelationInviteReq::mutable_refusename() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgSetRefuseRelationInviteReq.refusename)
  return refusename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgSetRefuseRelationInviteReq::release_refusename() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgSetRefuseRelationInviteReq.refusename)
  
  return refusename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgSetRefuseRelationInviteReq::set_allocated_refusename(::std::string* refusename) {
  if (refusename != NULL) {
    
  } else {
    
  }
  refusename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), refusename);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgSetRefuseRelationInviteReq.refusename)
}

// uint32 refuse = 2;
inline void MsgSetRefuseRelationInviteReq::clear_refuse() {
  refuse_ = 0u;
}
inline ::google::protobuf::uint32 MsgSetRefuseRelationInviteReq::refuse() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgSetRefuseRelationInviteReq.refuse)
  return refuse_;
}
inline void MsgSetRefuseRelationInviteReq::set_refuse(::google::protobuf::uint32 value) {
  
  refuse_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgSetRefuseRelationInviteReq.refuse)
}

// -------------------------------------------------------------------

// MsgTaskReceiveReq

// uint32 id = 1;
inline void MsgTaskReceiveReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgTaskReceiveReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTaskReceiveReq.id)
  return id_;
}
inline void MsgTaskReceiveReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTaskReceiveReq.id)
}

// -------------------------------------------------------------------

// MsgTaskRewardReq

// uint32 id = 1;
inline void MsgTaskRewardReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgTaskRewardReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTaskRewardReq.id)
  return id_;
}
inline void MsgTaskRewardReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTaskRewardReq.id)
}

// -------------------------------------------------------------------

// MsgTaskRemoveReq

// uint32 id = 1;
inline void MsgTaskRemoveReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgTaskRemoveReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTaskRemoveReq.id)
  return id_;
}
inline void MsgTaskRemoveReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTaskRemoveReq.id)
}

// -------------------------------------------------------------------

// MsgTaskAddReq

// uint32 id = 1;
inline void MsgTaskAddReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgTaskAddReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTaskAddReq.id)
  return id_;
}
inline void MsgTaskAddReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTaskAddReq.id)
}

// -------------------------------------------------------------------

// MsgFriendChatReq

// uint64 playerid = 1;
inline void MsgFriendChatReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgFriendChatReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgFriendChatReq.playerid)
  return playerid_;
}
inline void MsgFriendChatReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgFriendChatReq.playerid)
}

// bytes content = 2;
inline void MsgFriendChatReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgFriendChatReq::content() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgFriendChatReq.content)
  return content_.GetNoArena();
}
inline void MsgFriendChatReq::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgFriendChatReq.content)
}
#if LANG_CXX11
inline void MsgFriendChatReq::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgFriendChatReq.content)
}
#endif
inline void MsgFriendChatReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgFriendChatReq.content)
}
inline void MsgFriendChatReq::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgFriendChatReq.content)
}
inline ::std::string* MsgFriendChatReq::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgFriendChatReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgFriendChatReq::release_content() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgFriendChatReq.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgFriendChatReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgFriendChatReq.content)
}

// -------------------------------------------------------------------

// MsgTellFriendChat

// uint64 playerid = 1;
inline void MsgTellFriendChat::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgTellFriendChat::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellFriendChat.playerid)
  return playerid_;
}
inline void MsgTellFriendChat::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellFriendChat.playerid)
}

// bytes content = 2;
inline void MsgTellFriendChat::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTellFriendChat::content() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellFriendChat.content)
  return content_.GetNoArena();
}
inline void MsgTellFriendChat::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellFriendChat.content)
}
#if LANG_CXX11
inline void MsgTellFriendChat::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgTellFriendChat.content)
}
#endif
inline void MsgTellFriendChat::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgTellFriendChat.content)
}
inline void MsgTellFriendChat::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgTellFriendChat.content)
}
inline ::std::string* MsgTellFriendChat::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellFriendChat.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTellFriendChat::release_content() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellFriendChat.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTellFriendChat::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellFriendChat.content)
}

// -------------------------------------------------------------------

// MsgServerChatReq

// bytes content = 1;
inline void MsgServerChatReq::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgServerChatReq::content() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgServerChatReq.content)
  return content_.GetNoArena();
}
inline void MsgServerChatReq::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgServerChatReq.content)
}
#if LANG_CXX11
inline void MsgServerChatReq::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgServerChatReq.content)
}
#endif
inline void MsgServerChatReq::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgServerChatReq.content)
}
inline void MsgServerChatReq::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgServerChatReq.content)
}
inline ::std::string* MsgServerChatReq::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgServerChatReq.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgServerChatReq::release_content() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgServerChatReq.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgServerChatReq::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgServerChatReq.content)
}

// -------------------------------------------------------------------

// MsgTellServerChat

// .KFMsg.PBObject player = 1;
inline bool MsgTellServerChat::has_player() const {
  return this != internal_default_instance() && player_ != NULL;
}
inline const ::KFMsg::PBObject& MsgTellServerChat::_internal_player() const {
  return *player_;
}
inline const ::KFMsg::PBObject& MsgTellServerChat::player() const {
  const ::KFMsg::PBObject* p = player_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellServerChat.player)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgTellServerChat::release_player() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellServerChat.player)
  
  ::KFMsg::PBObject* temp = player_;
  player_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgTellServerChat::mutable_player() {
  
  if (player_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    player_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellServerChat.player)
  return player_;
}
inline void MsgTellServerChat::set_allocated_player(::KFMsg::PBObject* player) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(player_);
  }
  if (player) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      player = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, player, submessage_arena);
    }
    
  } else {
    
  }
  player_ = player;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellServerChat.player)
}

// bytes content = 2;
inline void MsgTellServerChat::clear_content() {
  content_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTellServerChat::content() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTellServerChat.content)
  return content_.GetNoArena();
}
inline void MsgTellServerChat::set_content(const ::std::string& value) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgTellServerChat.content)
}
#if LANG_CXX11
inline void MsgTellServerChat::set_content(::std::string&& value) {
  
  content_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgTellServerChat.content)
}
#endif
inline void MsgTellServerChat::set_content(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgTellServerChat.content)
}
inline void MsgTellServerChat::set_content(const void* value, size_t size) {
  
  content_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgTellServerChat.content)
}
inline ::std::string* MsgTellServerChat::mutable_content() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTellServerChat.content)
  return content_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTellServerChat::release_content() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTellServerChat.content)
  
  return content_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTellServerChat::set_allocated_content(::std::string* content) {
  if (content != NULL) {
    
  } else {
    
  }
  content_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), content);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTellServerChat.content)
}

// -------------------------------------------------------------------

// MsgTeamCreateReq

// uint32 id = 1;
inline void MsgTeamCreateReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 MsgTeamCreateReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamCreateReq.id)
  return id_;
}
inline void MsgTeamCreateReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTeamCreateReq.id)
}

// bytes name = 2;
inline void MsgTeamCreateReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTeamCreateReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamCreateReq.name)
  return name_.GetNoArena();
}
inline void MsgTeamCreateReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgTeamCreateReq.name)
}
#if LANG_CXX11
inline void MsgTeamCreateReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgTeamCreateReq.name)
}
#endif
inline void MsgTeamCreateReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgTeamCreateReq.name)
}
inline void MsgTeamCreateReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgTeamCreateReq.name)
}
inline ::std::string* MsgTeamCreateReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTeamCreateReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTeamCreateReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTeamCreateReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTeamCreateReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTeamCreateReq.name)
}

// bytes info = 3;
inline void MsgTeamCreateReq::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& MsgTeamCreateReq::info() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamCreateReq.info)
  return info_.GetNoArena();
}
inline void MsgTeamCreateReq::set_info(const ::std::string& value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.MsgTeamCreateReq.info)
}
#if LANG_CXX11
inline void MsgTeamCreateReq::set_info(::std::string&& value) {
  
  info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.MsgTeamCreateReq.info)
}
#endif
inline void MsgTeamCreateReq::set_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.MsgTeamCreateReq.info)
}
inline void MsgTeamCreateReq::set_info(const void* value, size_t size) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.MsgTeamCreateReq.info)
}
inline ::std::string* MsgTeamCreateReq::mutable_info() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTeamCreateReq.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* MsgTeamCreateReq::release_info() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTeamCreateReq.info)
  
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void MsgTeamCreateReq::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    
  } else {
    
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTeamCreateReq.info)
}

// -------------------------------------------------------------------

// MsgTeamLeaveReq

// -------------------------------------------------------------------

// MsgTeamKickReq

// uint64 memberid = 1;
inline void MsgTeamKickReq::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgTeamKickReq::memberid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamKickReq.memberid)
  return memberid_;
}
inline void MsgTeamKickReq::set_memberid(::google::protobuf::uint64 value) {
  
  memberid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTeamKickReq.memberid)
}

// -------------------------------------------------------------------

// MsgTeamInviteReq

// uint64 serverid = 1;
inline void MsgTeamInviteReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgTeamInviteReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamInviteReq.serverid)
  return serverid_;
}
inline void MsgTeamInviteReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTeamInviteReq.serverid)
}

// uint64 playerid = 2;
inline void MsgTeamInviteReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgTeamInviteReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamInviteReq.playerid)
  return playerid_;
}
inline void MsgTeamInviteReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTeamInviteReq.playerid)
}

// -------------------------------------------------------------------

// MsgTeamApplyReq

// uint64 serverid = 1;
inline void MsgTeamApplyReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgTeamApplyReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamApplyReq.serverid)
  return serverid_;
}
inline void MsgTeamApplyReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTeamApplyReq.serverid)
}

// uint64 playerid = 2;
inline void MsgTeamApplyReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgTeamApplyReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamApplyReq.playerid)
  return playerid_;
}
inline void MsgTeamApplyReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTeamApplyReq.playerid)
}

// -------------------------------------------------------------------

// MsgTeamTellInvite

// .KFMsg.PBObject pbplayer = 1;
inline bool MsgTeamTellInvite::has_pbplayer() const {
  return this != internal_default_instance() && pbplayer_ != NULL;
}
inline const ::KFMsg::PBObject& MsgTeamTellInvite::_internal_pbplayer() const {
  return *pbplayer_;
}
inline const ::KFMsg::PBObject& MsgTeamTellInvite::pbplayer() const {
  const ::KFMsg::PBObject* p = pbplayer_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamTellInvite.pbplayer)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgTeamTellInvite::release_pbplayer() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTeamTellInvite.pbplayer)
  
  ::KFMsg::PBObject* temp = pbplayer_;
  pbplayer_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgTeamTellInvite::mutable_pbplayer() {
  
  if (pbplayer_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbplayer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTeamTellInvite.pbplayer)
  return pbplayer_;
}
inline void MsgTeamTellInvite::set_allocated_pbplayer(::KFMsg::PBObject* pbplayer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbplayer_);
  }
  if (pbplayer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbplayer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbplayer, submessage_arena);
    }
    
  } else {
    
  }
  pbplayer_ = pbplayer;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTeamTellInvite.pbplayer)
}

// .KFMsg.PBObject pbteam = 2;
inline bool MsgTeamTellInvite::has_pbteam() const {
  return this != internal_default_instance() && pbteam_ != NULL;
}
inline const ::KFMsg::PBObject& MsgTeamTellInvite::_internal_pbteam() const {
  return *pbteam_;
}
inline const ::KFMsg::PBObject& MsgTeamTellInvite::pbteam() const {
  const ::KFMsg::PBObject* p = pbteam_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamTellInvite.pbteam)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgTeamTellInvite::release_pbteam() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTeamTellInvite.pbteam)
  
  ::KFMsg::PBObject* temp = pbteam_;
  pbteam_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgTeamTellInvite::mutable_pbteam() {
  
  if (pbteam_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbteam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTeamTellInvite.pbteam)
  return pbteam_;
}
inline void MsgTeamTellInvite::set_allocated_pbteam(::KFMsg::PBObject* pbteam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbteam_);
  }
  if (pbteam) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbteam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbteam, submessage_arena);
    }
    
  } else {
    
  }
  pbteam_ = pbteam;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTeamTellInvite.pbteam)
}

// -------------------------------------------------------------------

// MsgTeamTellApply

// .KFMsg.PBObject pbplayer = 1;
inline bool MsgTeamTellApply::has_pbplayer() const {
  return this != internal_default_instance() && pbplayer_ != NULL;
}
inline const ::KFMsg::PBObject& MsgTeamTellApply::_internal_pbplayer() const {
  return *pbplayer_;
}
inline const ::KFMsg::PBObject& MsgTeamTellApply::pbplayer() const {
  const ::KFMsg::PBObject* p = pbplayer_;
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamTellApply.pbplayer)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* MsgTeamTellApply::release_pbplayer() {
  // @@protoc_insertion_point(field_release:KFMsg.MsgTeamTellApply.pbplayer)
  
  ::KFMsg::PBObject* temp = pbplayer_;
  pbplayer_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* MsgTeamTellApply::mutable_pbplayer() {
  
  if (pbplayer_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbplayer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.MsgTeamTellApply.pbplayer)
  return pbplayer_;
}
inline void MsgTeamTellApply::set_allocated_pbplayer(::KFMsg::PBObject* pbplayer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbplayer_);
  }
  if (pbplayer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbplayer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbplayer, submessage_arena);
    }
    
  } else {
    
  }
  pbplayer_ = pbplayer;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.MsgTeamTellApply.pbplayer)
}

// -------------------------------------------------------------------

// MsgTeamAgreeReq

// uint64 teamid = 1;
inline void MsgTeamAgreeReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 MsgTeamAgreeReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.MsgTeamAgreeReq.teamid)
  return teamid_;
}
inline void MsgTeamAgreeReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.MsgTeamAgreeReq.teamid)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::FrameClientProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::FrameClientProtocol>() {
  return ::KFMsg::FrameClientProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)


#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif
#endif  // PROTOBUF_INCLUDED_FrameClientMessage_2eproto
