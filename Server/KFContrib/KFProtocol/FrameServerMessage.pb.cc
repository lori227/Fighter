// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameServerMessage.proto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4125)
	#pragma warning(disable : 4668)
	#pragma warning(disable : 4800)
	#pragma warning(disable : 4647)
#endif

#include "FrameServerMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FrameDefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBLoginData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PBRankData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_PBObject;
}  // namespace protobuf_FrameDefineMessage_2eproto
namespace protobuf_FrameServerMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBMail_DataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBRelation_BasicdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBRelation_RelationdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBMail;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PBRelation;
}  // namespace protobuf_FrameServerMessage_2eproto
namespace KFMsg {
class S2SAddGateToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddGateToWorldReq>
      _instance;
} _S2SAddGateToWorldReq_default_instance_;
class S2SRemoveGateToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRemoveGateToWorldReq>
      _instance;
} _S2SRemoveGateToWorldReq_default_instance_;
class S2SLoginToLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToLoginReq>
      _instance;
} _S2SLoginToLoginReq_default_instance_;
class S2SLoginToGateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToGateAck>
      _instance;
} _S2SLoginToGateAck_default_instance_;
class S2SLoginToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToWorldReq>
      _instance;
} _S2SLoginToWorldReq_default_instance_;
class S2SLoginToLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToLoginAck>
      _instance;
} _S2SLoginToLoginAck_default_instance_;
class S2SLoginToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToGameReq>
      _instance;
} _S2SLoginToGameReq_default_instance_;
class S2SEnterToGateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SEnterToGateAck>
      _instance;
} _S2SEnterToGateAck_default_instance_;
class S2SLogoutToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLogoutToGameReq>
      _instance;
} _S2SLogoutToGameReq_default_instance_;
class S2SDisconnectToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDisconnectToGameReq>
      _instance;
} _S2SDisconnectToGameReq_default_instance_;
class S2SLeaveToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLeaveToGameReq>
      _instance;
} _S2SLeaveToGameReq_default_instance_;
class S2SConnectToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SConnectToGameReq>
      _instance;
} _S2SConnectToGameReq_default_instance_;
class S2SReLoginToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SReLoginToGameReq>
      _instance;
} _S2SReLoginToGameReq_default_instance_;
class S2SReLoginToGateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SReLoginToGateAck>
      _instance;
} _S2SReLoginToGateAck_default_instance_;
class S2SLoadPlayerToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoadPlayerToDataReq>
      _instance;
} _S2SLoadPlayerToDataReq_default_instance_;
class S2SLoadPlayerToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoadPlayerToGameAck>
      _instance;
} _S2SLoadPlayerToGameAck_default_instance_;
class S2SSavePlayerToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSavePlayerToDataReq>
      _instance;
} _S2SSavePlayerToDataReq_default_instance_;
class S2SSavePlayerToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSavePlayerToGameAck>
      _instance;
} _S2SSavePlayerToGameAck_default_instance_;
class S2SQueryPlayerToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryPlayerToDataReq>
      _instance;
} _S2SQueryPlayerToDataReq_default_instance_;
class S2SQueryPlayerToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryPlayerToGameAck>
      _instance;
} _S2SQueryPlayerToGameAck_default_instance_;
class S2SSyncUpdateDataFromServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSyncUpdateDataFromServer>
      _instance;
} _S2SSyncUpdateDataFromServer_default_instance_;
class S2SSyncAddDataFromServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSyncAddDataFromServer>
      _instance;
} _S2SSyncAddDataFromServer_default_instance_;
class S2SSyncRemoveDataFromServerDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSyncRemoveDataFromServer>
      _instance;
} _S2SSyncRemoveDataFromServer_default_instance_;
class S2SPlayerEnterToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerEnterToWorldReq>
      _instance;
} _S2SPlayerEnterToWorldReq_default_instance_;
class S2SPlayerLeaveToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLeaveToWorldReq>
      _instance;
} _S2SPlayerLeaveToWorldReq_default_instance_;
class S2SKickPlayerToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickPlayerToGameReq>
      _instance;
} _S2SKickPlayerToGameReq_default_instance_;
class S2SKickPlayerToGateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickPlayerToGateReq>
      _instance;
} _S2SKickPlayerToGateReq_default_instance_;
class S2SBroadcastToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGameReq>
      _instance;
} _S2SBroadcastToGameReq_default_instance_;
class S2SBroadcastToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGameAck>
      _instance;
} _S2SBroadcastToGameAck_default_instance_;
class S2SBroadcastToGateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGateReq>
      _instance;
} _S2SBroadcastToGateReq_default_instance_;
class S2SBroadcastToServerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToServerReq>
      _instance;
} _S2SBroadcastToServerReq_default_instance_;
class S2SBroadcastToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToWorldReq>
      _instance;
} _S2SBroadcastToWorldReq_default_instance_;
class S2SBroadcastToWorldAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToWorldAck>
      _instance;
} _S2SBroadcastToWorldAck_default_instance_;
class PBMail_DataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMail_DataEntry_DoNotUse>
      _instance;
} _PBMail_DataEntry_DoNotUse_default_instance_;
class PBMailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMail>
      _instance;
} _PBMail_default_instance_;
class S2SQueryMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryMailReq>
      _instance;
} _S2SQueryMailReq_default_instance_;
class S2SQueryMailAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryMailAck>
      _instance;
} _S2SQueryMailAck_default_instance_;
class S2SAddMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddMailReq>
      _instance;
} _S2SAddMailReq_default_instance_;
class S2SNoticeNewMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNoticeNewMailReq>
      _instance;
} _S2SNoticeNewMailReq_default_instance_;
class S2SNewPlayerMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNewPlayerMailReq>
      _instance;
} _S2SNewPlayerMailReq_default_instance_;
class S2SUpdateMailStatusReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateMailStatusReq>
      _instance;
} _S2SUpdateMailStatusReq_default_instance_;
class S2SUpdateMailStatusAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateMailStatusAck>
      _instance;
} _S2SUpdateMailStatusAck_default_instance_;
class S2SNoticeRankWorkerReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNoticeRankWorkerReq>
      _instance;
} _S2SNoticeRankWorkerReq_default_instance_;
class S2SSyncRefreshRankDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSyncRefreshRank>
      _instance;
} _S2SSyncRefreshRank_default_instance_;
class S2SUpdateRankDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateRankDataReq>
      _instance;
} _S2SUpdateRankDataReq_default_instance_;
class S2SQueryRankListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRankListReq>
      _instance;
} _S2SQueryRankListReq_default_instance_;
class S2SQueryFriendRankListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendRankListReq>
      _instance;
} _S2SQueryFriendRankListReq_default_instance_;
class S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse>
      _instance;
} _S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateIntValueToBasicReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateIntValueToBasicReq>
      _instance;
} _S2SUpdateIntValueToBasicReq_default_instance_;
class S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse>
      _instance;
} _S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateStrValueToBasicReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateStrValueToBasicReq>
      _instance;
} _S2SUpdateStrValueToBasicReq_default_instance_;
class S2SClearOnlineToBasicReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SClearOnlineToBasicReq>
      _instance;
} _S2SClearOnlineToBasicReq_default_instance_;
class S2SQueryAttributeToBasicReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryAttributeToBasicReq>
      _instance;
} _S2SQueryAttributeToBasicReq_default_instance_;
class S2SQueryAttributeToGameAck_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse>
      _instance;
} _S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse_default_instance_;
class S2SQueryAttributeToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryAttributeToGameAck>
      _instance;
} _S2SQueryAttributeToGameAck_default_instance_;
class S2SSetPlayerNameToBasicReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSetPlayerNameToBasicReq>
      _instance;
} _S2SSetPlayerNameToBasicReq_default_instance_;
class S2SSetPlayerNameToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSetPlayerNameToGameAck>
      _instance;
} _S2SSetPlayerNameToGameAck_default_instance_;
class PBRelation_BasicdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRelation_BasicdataEntry_DoNotUse>
      _instance;
} _PBRelation_BasicdataEntry_DoNotUse_default_instance_;
class PBRelation_RelationdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRelation_RelationdataEntry_DoNotUse>
      _instance;
} _PBRelation_RelationdataEntry_DoNotUse_default_instance_;
class PBRelationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRelation>
      _instance;
} _PBRelation_default_instance_;
class S2SQueryRelationToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRelationToRelationReq>
      _instance;
} _S2SQueryRelationToRelationReq_default_instance_;
class S2SQueryRelationToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRelationToGameAck>
      _instance;
} _S2SQueryRelationToGameAck_default_instance_;
class S2SQueryRelationInviteToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRelationInviteToRelationReq>
      _instance;
} _S2SQueryRelationInviteToRelationReq_default_instance_;
class S2SQueryRelationInviteToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRelationInviteToGameAck>
      _instance;
} _S2SQueryRelationInviteToGameAck_default_instance_;
class S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse>
      _instance;
} _S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateIntValueToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateIntValueToRelationReq>
      _instance;
} _S2SUpdateIntValueToRelationReq_default_instance_;
class S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse>
      _instance;
} _S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateStrValueToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateStrValueToRelationReq>
      _instance;
} _S2SUpdateStrValueToRelationReq_default_instance_;
class S2SApplyAddRelationToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SApplyAddRelationToRelationReq>
      _instance;
} _S2SApplyAddRelationToRelationReq_default_instance_;
class S2SApplyAddRelationToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SApplyAddRelationToGameAck>
      _instance;
} _S2SApplyAddRelationToGameAck_default_instance_;
class S2SDelRelationInviteToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDelRelationInviteToRelationReq>
      _instance;
} _S2SDelRelationInviteToRelationReq_default_instance_;
class S2SAddRelationToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddRelationToRelationReq>
      _instance;
} _S2SAddRelationToRelationReq_default_instance_;
class S2SAddRelationToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddRelationToGameAck>
      _instance;
} _S2SAddRelationToGameAck_default_instance_;
class S2SDelRelationToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDelRelationToRelationReq>
      _instance;
} _S2SDelRelationToRelationReq_default_instance_;
class S2SDelRelationToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDelRelationToGameAck>
      _instance;
} _S2SDelRelationToGameAck_default_instance_;
class S2SUpdateFriendLinessToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateFriendLinessToRelationReq>
      _instance;
} _S2SUpdateFriendLinessToRelationReq_default_instance_;
class S2SUpdateFriendLinessToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateFriendLinessToGameAck>
      _instance;
} _S2SUpdateFriendLinessToGameAck_default_instance_;
class S2SRefuseRelationToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRefuseRelationToRelationReq>
      _instance;
} _S2SRefuseRelationToRelationReq_default_instance_;
class S2STeamCreateToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamCreateToTeamReq>
      _instance;
} _S2STeamCreateToTeamReq_default_instance_;
class S2STeamJoinToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamJoinToGameAck>
      _instance;
} _S2STeamJoinToGameAck_default_instance_;
class S2STeamJoinFailedToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamJoinFailedToTeamReq>
      _instance;
} _S2STeamJoinFailedToTeamReq_default_instance_;
class S2STeamOnlineQueryToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamOnlineQueryToTeamReq>
      _instance;
} _S2STeamOnlineQueryToTeamReq_default_instance_;
class S2STeamOnlineQueryToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamOnlineQueryToGameAck>
      _instance;
} _S2STeamOnlineQueryToGameAck_default_instance_;
class S2STeamIntValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse>
      _instance;
} _S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
class S2STeamIntValueToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamIntValueToTeamReq>
      _instance;
} _S2STeamIntValueToTeamReq_default_instance_;
class S2STeamStrValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse>
      _instance;
} _S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
class S2STeamStrValueToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamStrValueToTeamReq>
      _instance;
} _S2STeamStrValueToTeamReq_default_instance_;
class S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse>
      _instance;
} _S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
class S2STeamMemberIntValueToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamMemberIntValueToTeamReq>
      _instance;
} _S2STeamMemberIntValueToTeamReq_default_instance_;
class S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse>
      _instance;
} _S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
class S2STeamMemberStrValueToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamMemberStrValueToTeamReq>
      _instance;
} _S2STeamMemberStrValueToTeamReq_default_instance_;
class S2STeamLeaveToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamLeaveToTeamReq>
      _instance;
} _S2STeamLeaveToTeamReq_default_instance_;
class S2STeamKickToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamKickToTeamReq>
      _instance;
} _S2STeamKickToTeamReq_default_instance_;
class S2STeamLeaveToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamLeaveToGameAck>
      _instance;
} _S2STeamLeaveToGameAck_default_instance_;
class S2STeamTellInviteToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamTellInviteToGameAck>
      _instance;
} _S2STeamTellInviteToGameAck_default_instance_;
class S2STeamTellApplyToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamTellApplyToGameAck>
      _instance;
} _S2STeamTellApplyToGameAck_default_instance_;
class S2STeamAgreeToTeamReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STeamAgreeToTeamReq>
      _instance;
} _S2STeamAgreeToTeamReq_default_instance_;
}  // namespace KFMsg
namespace protobuf_FrameServerMessage_2eproto {
static void InitDefaultsS2SAddGateToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddGateToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddGateToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddGateToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAddGateToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAddGateToWorldReq}, {}};

static void InitDefaultsS2SRemoveGateToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRemoveGateToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SRemoveGateToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRemoveGateToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRemoveGateToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRemoveGateToWorldReq}, {}};

static void InitDefaultsS2SLoginToLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToLoginReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToLoginReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginToLoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginToLoginReq}, {}};

static void InitDefaultsS2SLoginToGateAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToGateAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToGateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToGateAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginToGateAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginToGateAck}, {}};

static void InitDefaultsS2SLoginToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginToWorldReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SLoginToLoginAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToLoginAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToLoginAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginToLoginAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginToLoginAck}, {}};

static void InitDefaultsS2SLoginToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginToGameReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SEnterToGateAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SEnterToGateAck_default_instance_;
    new (ptr) ::KFMsg::S2SEnterToGateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SEnterToGateAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_S2SEnterToGateAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsS2SEnterToGateAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SLogoutToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLogoutToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SLogoutToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLogoutToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLogoutToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLogoutToGameReq}, {}};

static void InitDefaultsS2SDisconnectToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDisconnectToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SDisconnectToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDisconnectToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDisconnectToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDisconnectToGameReq}, {}};

static void InitDefaultsS2SLeaveToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLeaveToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SLeaveToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLeaveToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLeaveToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLeaveToGameReq}, {}};

static void InitDefaultsS2SConnectToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SConnectToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SConnectToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SConnectToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SConnectToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SConnectToGameReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SReLoginToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SReLoginToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SReLoginToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SReLoginToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SReLoginToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SReLoginToGameReq}, {}};

static void InitDefaultsS2SReLoginToGateAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SReLoginToGateAck_default_instance_;
    new (ptr) ::KFMsg::S2SReLoginToGateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SReLoginToGateAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SReLoginToGateAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SReLoginToGateAck}, {}};

static void InitDefaultsS2SLoadPlayerToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoadPlayerToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoadPlayerToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoadPlayerToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoadPlayerToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoadPlayerToDataReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SLoadPlayerToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoadPlayerToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoadPlayerToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoadPlayerToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_S2SLoadPlayerToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsS2SLoadPlayerToGameAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSavePlayerToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSavePlayerToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SSavePlayerToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSavePlayerToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SSavePlayerToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SSavePlayerToDataReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSavePlayerToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSavePlayerToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SSavePlayerToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSavePlayerToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSavePlayerToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSavePlayerToGameAck}, {}};

static void InitDefaultsS2SQueryPlayerToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryPlayerToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryPlayerToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryPlayerToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryPlayerToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryPlayerToDataReq}, {}};

static void InitDefaultsS2SQueryPlayerToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryPlayerToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryPlayerToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryPlayerToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryPlayerToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryPlayerToGameAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSyncUpdateDataFromServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSyncUpdateDataFromServer_default_instance_;
    new (ptr) ::KFMsg::S2SSyncUpdateDataFromServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSyncUpdateDataFromServer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SSyncUpdateDataFromServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SSyncUpdateDataFromServer}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSyncAddDataFromServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSyncAddDataFromServer_default_instance_;
    new (ptr) ::KFMsg::S2SSyncAddDataFromServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSyncAddDataFromServer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SSyncAddDataFromServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SSyncAddDataFromServer}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSyncRemoveDataFromServer() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSyncRemoveDataFromServer_default_instance_;
    new (ptr) ::KFMsg::S2SSyncRemoveDataFromServer();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSyncRemoveDataFromServer::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SSyncRemoveDataFromServer =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SSyncRemoveDataFromServer}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SPlayerEnterToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerEnterToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerEnterToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerEnterToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerEnterToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerEnterToWorldReq}, {}};

static void InitDefaultsS2SPlayerLeaveToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLeaveToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLeaveToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLeaveToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLeaveToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLeaveToWorldReq}, {}};

static void InitDefaultsS2SKickPlayerToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickPlayerToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickPlayerToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickPlayerToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickPlayerToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickPlayerToGameReq}, {}};

static void InitDefaultsS2SKickPlayerToGateReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickPlayerToGateReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickPlayerToGateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickPlayerToGateReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickPlayerToGateReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickPlayerToGateReq}, {}};

static void InitDefaultsS2SBroadcastToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGameReq}, {}};

static void InitDefaultsS2SBroadcastToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGameAck}, {}};

static void InitDefaultsS2SBroadcastToGateReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGateReq_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGateReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGateReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGateReq}, {}};

static void InitDefaultsS2SBroadcastToServerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToServerReq_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToServerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToServerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToServerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToServerReq}, {}};

static void InitDefaultsS2SBroadcastToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToWorldReq}, {}};

static void InitDefaultsS2SBroadcastToWorldAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToWorldAck_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToWorldAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToWorldAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToWorldAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToWorldAck}, {}};

static void InitDefaultsPBMail_DataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMail_DataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBMail_DataEntry_DoNotUse();
  }
  ::KFMsg::PBMail_DataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBMail_DataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBMail_DataEntry_DoNotUse}, {}};

static void InitDefaultsPBMail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMail_default_instance_;
    new (ptr) ::KFMsg::PBMail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBMail::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBMail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBMail}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBMail_DataEntry_DoNotUse.base,}};

static void InitDefaultsS2SQueryMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryMailReq}, {}};

static void InitDefaultsS2SQueryMailAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryMailAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryMailAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryMailAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryMailAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryMailAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBMail.base,}};

static void InitDefaultsS2SAddMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddMailReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBMail.base,}};

static void InitDefaultsS2SNoticeNewMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SNoticeNewMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SNoticeNewMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SNoticeNewMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SNoticeNewMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SNoticeNewMailReq}, {}};

static void InitDefaultsS2SNewPlayerMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SNewPlayerMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SNewPlayerMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SNewPlayerMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SNewPlayerMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SNewPlayerMailReq}, {}};

static void InitDefaultsS2SUpdateMailStatusReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateMailStatusReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateMailStatusReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateMailStatusReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateMailStatusReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateMailStatusReq}, {}};

static void InitDefaultsS2SUpdateMailStatusAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateMailStatusAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateMailStatusAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateMailStatusAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateMailStatusAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateMailStatusAck}, {}};

static void InitDefaultsS2SNoticeRankWorkerReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SNoticeRankWorkerReq_default_instance_;
    new (ptr) ::KFMsg::S2SNoticeRankWorkerReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SNoticeRankWorkerReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SNoticeRankWorkerReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SNoticeRankWorkerReq}, {}};

static void InitDefaultsS2SSyncRefreshRank() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSyncRefreshRank_default_instance_;
    new (ptr) ::KFMsg::S2SSyncRefreshRank();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSyncRefreshRank::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSyncRefreshRank =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSyncRefreshRank}, {}};

static void InitDefaultsS2SUpdateRankDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateRankDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateRankDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateRankDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateRankDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateRankDataReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBRankData.base,}};

static void InitDefaultsS2SQueryRankListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRankListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRankListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRankListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryRankListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryRankListReq}, {}};

static void InitDefaultsS2SQueryFriendRankListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendRankListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendRankListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendRankListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryFriendRankListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryFriendRankListReq}, {}};

static void InitDefaultsS2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2SUpdateIntValueToBasicReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateIntValueToBasicReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateIntValueToBasicReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateIntValueToBasicReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateIntValueToBasicReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateIntValueToBasicReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2SUpdateStrValueToBasicReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateStrValueToBasicReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateStrValueToBasicReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateStrValueToBasicReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateStrValueToBasicReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateStrValueToBasicReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2SClearOnlineToBasicReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SClearOnlineToBasicReq_default_instance_;
    new (ptr) ::KFMsg::S2SClearOnlineToBasicReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SClearOnlineToBasicReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SClearOnlineToBasicReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SClearOnlineToBasicReq}, {}};

static void InitDefaultsS2SQueryAttributeToBasicReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryAttributeToBasicReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryAttributeToBasicReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryAttributeToBasicReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryAttributeToBasicReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryAttributeToBasicReq}, {}};

static void InitDefaultsS2SQueryAttributeToGameAck_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryAttributeToGameAck_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2SQueryAttributeToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryAttributeToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryAttributeToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryAttributeToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryAttributeToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryAttributeToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2SSetPlayerNameToBasicReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSetPlayerNameToBasicReq_default_instance_;
    new (ptr) ::KFMsg::S2SSetPlayerNameToBasicReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSetPlayerNameToBasicReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSetPlayerNameToBasicReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSetPlayerNameToBasicReq}, {}};

static void InitDefaultsS2SSetPlayerNameToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSetPlayerNameToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SSetPlayerNameToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSetPlayerNameToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSetPlayerNameToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSetPlayerNameToGameAck}, {}};

static void InitDefaultsPBRelation_BasicdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRelation_BasicdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBRelation_BasicdataEntry_DoNotUse();
  }
  ::KFMsg::PBRelation_BasicdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRelation_BasicdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRelation_BasicdataEntry_DoNotUse}, {}};

static void InitDefaultsPBRelation_RelationdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRelation_RelationdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBRelation_RelationdataEntry_DoNotUse();
  }
  ::KFMsg::PBRelation_RelationdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRelation_RelationdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRelation_RelationdataEntry_DoNotUse}, {}};

static void InitDefaultsPBRelation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRelation_default_instance_;
    new (ptr) ::KFMsg::PBRelation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRelation::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_PBRelation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPBRelation}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation_BasicdataEntry_DoNotUse.base,
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation_RelationdataEntry_DoNotUse.base,}};

static void InitDefaultsS2SQueryRelationToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRelationToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRelationToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRelationToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryRelationToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryRelationToRelationReq}, {}};

static void InitDefaultsS2SQueryRelationToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRelationToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRelationToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRelationToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryRelationToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryRelationToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SQueryRelationInviteToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRelationInviteToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRelationInviteToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRelationInviteToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryRelationInviteToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryRelationInviteToRelationReq}, {}};

static void InitDefaultsS2SQueryRelationInviteToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRelationInviteToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRelationInviteToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRelationInviteToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryRelationInviteToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryRelationInviteToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2SUpdateIntValueToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateIntValueToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateIntValueToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateIntValueToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateIntValueToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateIntValueToRelationReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2SUpdateStrValueToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateStrValueToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateStrValueToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateStrValueToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateStrValueToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateStrValueToRelationReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2SApplyAddRelationToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SApplyAddRelationToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SApplyAddRelationToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SApplyAddRelationToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SApplyAddRelationToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SApplyAddRelationToRelationReq}, {}};

static void InitDefaultsS2SApplyAddRelationToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SApplyAddRelationToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SApplyAddRelationToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SApplyAddRelationToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SApplyAddRelationToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SApplyAddRelationToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SDelRelationInviteToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDelRelationInviteToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SDelRelationInviteToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDelRelationInviteToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDelRelationInviteToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDelRelationInviteToRelationReq}, {}};

static void InitDefaultsS2SAddRelationToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddRelationToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddRelationToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddRelationToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAddRelationToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAddRelationToRelationReq}, {}};

static void InitDefaultsS2SAddRelationToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddRelationToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SAddRelationToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddRelationToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddRelationToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddRelationToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SDelRelationToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDelRelationToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SDelRelationToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDelRelationToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDelRelationToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDelRelationToRelationReq}, {}};

static void InitDefaultsS2SDelRelationToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDelRelationToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SDelRelationToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDelRelationToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDelRelationToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDelRelationToGameAck}, {}};

static void InitDefaultsS2SUpdateFriendLinessToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateFriendLinessToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateFriendLinessToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateFriendLinessToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateFriendLinessToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateFriendLinessToRelationReq}, {}};

static void InitDefaultsS2SUpdateFriendLinessToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateFriendLinessToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateFriendLinessToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateFriendLinessToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateFriendLinessToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateFriendLinessToGameAck}, {}};

static void InitDefaultsS2SRefuseRelationToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRefuseRelationToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SRefuseRelationToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRefuseRelationToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRefuseRelationToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRefuseRelationToRelationReq}, {}};

static void InitDefaultsS2STeamCreateToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamCreateToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamCreateToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamCreateToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamCreateToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamCreateToTeamReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2STeamJoinToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamJoinToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2STeamJoinToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamJoinToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamJoinToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamJoinToGameAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2STeamJoinFailedToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamJoinFailedToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamJoinFailedToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamJoinFailedToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamJoinFailedToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STeamJoinFailedToTeamReq}, {}};

static void InitDefaultsS2STeamOnlineQueryToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamOnlineQueryToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamOnlineQueryToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamOnlineQueryToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamOnlineQueryToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STeamOnlineQueryToTeamReq}, {}};

static void InitDefaultsS2STeamOnlineQueryToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamOnlineQueryToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2STeamOnlineQueryToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamOnlineQueryToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamOnlineQueryToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamOnlineQueryToGameAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2STeamIntValueToTeamReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STeamIntValueToTeamReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2STeamIntValueToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamIntValueToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamIntValueToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamIntValueToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamIntValueToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamIntValueToTeamReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2STeamStrValueToTeamReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STeamStrValueToTeamReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2STeamStrValueToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamStrValueToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamStrValueToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamStrValueToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamStrValueToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamStrValueToTeamReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2STeamMemberIntValueToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamMemberIntValueToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamMemberIntValueToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamMemberIntValueToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamMemberIntValueToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamMemberIntValueToTeamReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2STeamMemberStrValueToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamMemberStrValueToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamMemberStrValueToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamMemberStrValueToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamMemberStrValueToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamMemberStrValueToTeamReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2STeamLeaveToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamLeaveToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamLeaveToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamLeaveToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamLeaveToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STeamLeaveToTeamReq}, {}};

static void InitDefaultsS2STeamKickToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamKickToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamKickToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamKickToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamKickToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STeamKickToTeamReq}, {}};

static void InitDefaultsS2STeamLeaveToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamLeaveToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2STeamLeaveToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamLeaveToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STeamLeaveToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STeamLeaveToGameAck}, {}};

static void InitDefaultsS2STeamTellInviteToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamTellInviteToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2STeamTellInviteToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamTellInviteToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamTellInviteToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamTellInviteToGameAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2STeamTellApplyToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamTellApplyToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2STeamTellApplyToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamTellApplyToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamTellApplyToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamTellApplyToGameAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2STeamAgreeToTeamReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STeamAgreeToTeamReq_default_instance_;
    new (ptr) ::KFMsg::S2STeamAgreeToTeamReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STeamAgreeToTeamReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2STeamAgreeToTeamReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2STeamAgreeToTeamReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddGateToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRemoveGateToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToLoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToGateAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToLoginAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SEnterToGateAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLogoutToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDisconnectToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLeaveToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SConnectToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SReLoginToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SReLoginToGateAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoadPlayerToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoadPlayerToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSavePlayerToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSavePlayerToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryPlayerToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryPlayerToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSyncUpdateDataFromServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSyncAddDataFromServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSyncRemoveDataFromServer.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerEnterToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLeaveToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickPlayerToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickPlayerToGateReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGateReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToServerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToWorldAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMail_DataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryMailAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNoticeNewMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNewPlayerMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateMailStatusReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateMailStatusAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNoticeRankWorkerReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSyncRefreshRank.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateRankDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRankListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendRankListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateIntValueToBasicReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateStrValueToBasicReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SClearOnlineToBasicReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryAttributeToBasicReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryAttributeToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSetPlayerNameToBasicReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSetPlayerNameToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRelation_BasicdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRelation_RelationdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRelation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRelationToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRelationToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRelationInviteToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRelationInviteToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateIntValueToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateStrValueToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SApplyAddRelationToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SApplyAddRelationToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDelRelationInviteToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddRelationToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddRelationToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDelRelationToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDelRelationToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateFriendLinessToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateFriendLinessToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRefuseRelationToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamCreateToTeamReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamJoinToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamJoinFailedToTeamReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamOnlineQueryToTeamReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamOnlineQueryToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamIntValueToTeamReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamStrValueToTeamReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamMemberIntValueToTeamReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamMemberStrValueToTeamReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamLeaveToTeamReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamKickToTeamReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamLeaveToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamTellInviteToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamTellApplyToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STeamAgreeToTeamReq.base);
}

::google::protobuf::Metadata file_level_metadata[97];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGateToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGateToWorldReq, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGateToWorldReq, gateid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoveGateToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoveGateToWorldReq, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoveGateToWorldReq, gateid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, bantime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToWorldReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGameReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, pblogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, playerdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, servertime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLogoutToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLogoutToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConnectToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SConnectToGameReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToDataReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, pblogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToGameAck, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToDataReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToGameAck, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncUpdateDataFromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncUpdateDataFromServer, data_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncUpdateDataFromServer, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncAddDataFromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncAddDataFromServer, data_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncAddDataFromServer, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncRemoveDataFromServer, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncRemoveDataFromServer, data_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncRemoveDataFromServer, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterToWorldReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterToWorldReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveToWorldReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveToWorldReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGameReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGateReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGateReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, msgdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, worldid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, msgdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, worldid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToServerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToServerReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToServerReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, msgdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, maxid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, mail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, objectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, pbmail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeNewMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeNewMailReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerMailReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeRankWorkerReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeRankWorkerReq, workerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncRefreshRank, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSyncRefreshRank, rankid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, pbrankdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, start_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, friendid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToBasicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToBasicReq, pbdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToBasicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToBasicReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClearOnlineToBasicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SClearOnlineToBasicReq, serverid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToBasicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToBasicReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToBasicReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToGameAck, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryAttributeToGameAck, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToBasicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToBasicReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToBasicReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToBasicReq, oldname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToBasicReq, newname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToBasicReq, costdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, costdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_BasicdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_BasicdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_BasicdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_BasicdataEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_RelationdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_RelationdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_RelationdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_RelationdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, basicdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, relationdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationToRelationReq, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationToRelationReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationToGameAck, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationToGameAck, pbrelation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationInviteToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationInviteToRelationReq, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationInviteToRelationReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationInviteToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationInviteToGameAck, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationInviteToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRelationInviteToGameAck, pbinvite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToRelationReq, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToRelationReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateIntValueToRelationReq, pbdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToRelationReq, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToRelationReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateStrValueToRelationReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyAddRelationToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyAddRelationToRelationReq, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyAddRelationToRelationReq, playername_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyAddRelationToRelationReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyAddRelationToRelationReq, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyAddRelationToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyAddRelationToGameAck, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyAddRelationToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SApplyAddRelationToGameAck, pbinvite_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationInviteToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationInviteToRelationReq, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationInviteToRelationReq, listname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationInviteToRelationReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationInviteToRelationReq, targetplayerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRelationToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRelationToRelationReq, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRelationToRelationReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRelationToRelationReq, playername_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRelationToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRelationToGameAck, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRelationToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddRelationToGameAck, pbrelation_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationToRelationReq, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationToRelationReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationToGameAck, relationname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelRelationToGameAck, relationid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, friendliness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToGameAck, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToGameAck, friendliness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRefuseRelationToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRefuseRelationToRelationReq, refusename_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRefuseRelationToRelationReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRefuseRelationToRelationReq, refusevalue_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamCreateToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamCreateToTeamReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamCreateToTeamReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamCreateToTeamReq, info_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamCreateToTeamReq, pbcaptain_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamJoinToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamJoinToGameAck, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamJoinToGameAck, pbteam_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamJoinFailedToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamJoinFailedToTeamReq, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamJoinFailedToTeamReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamOnlineQueryToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamOnlineQueryToTeamReq, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamOnlineQueryToTeamReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamOnlineQueryToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamOnlineQueryToGameAck, pbteam_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamIntValueToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamIntValueToTeamReq, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamIntValueToTeamReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamIntValueToTeamReq, pbdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamStrValueToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamStrValueToTeamReq, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamStrValueToTeamReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamStrValueToTeamReq, pbdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberIntValueToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberIntValueToTeamReq, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberIntValueToTeamReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberIntValueToTeamReq, pbdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberStrValueToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberStrValueToTeamReq, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberStrValueToTeamReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamMemberStrValueToTeamReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamLeaveToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamLeaveToTeamReq, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamLeaveToTeamReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamKickToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamKickToTeamReq, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamKickToTeamReq, captainid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamKickToTeamReq, memberid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamLeaveToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamLeaveToGameAck, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamLeaveToGameAck, type_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamTellInviteToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamTellInviteToGameAck, pbplayer_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamTellInviteToGameAck, pbteam_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamTellApplyToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamTellApplyToGameAck, pbplayer_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamAgreeToTeamReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamAgreeToTeamReq, teamid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STeamAgreeToTeamReq, pbplayer_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KFMsg::S2SAddGateToWorldReq)},
  { 7, -1, sizeof(::KFMsg::S2SRemoveGateToWorldReq)},
  { 14, -1, sizeof(::KFMsg::S2SLoginToLoginReq)},
  { 23, -1, sizeof(::KFMsg::S2SLoginToGateAck)},
  { 32, -1, sizeof(::KFMsg::S2SLoginToWorldReq)},
  { 38, -1, sizeof(::KFMsg::S2SLoginToLoginAck)},
  { 47, -1, sizeof(::KFMsg::S2SLoginToGameReq)},
  { 53, -1, sizeof(::KFMsg::S2SEnterToGateAck)},
  { 61, -1, sizeof(::KFMsg::S2SLogoutToGameReq)},
  { 67, -1, sizeof(::KFMsg::S2SDisconnectToGameReq)},
  { 73, -1, sizeof(::KFMsg::S2SLeaveToGameReq)},
  { 79, -1, sizeof(::KFMsg::S2SConnectToGameReq)},
  { 85, -1, sizeof(::KFMsg::S2SReLoginToGameReq)},
  { 94, -1, sizeof(::KFMsg::S2SReLoginToGateAck)},
  { 103, -1, sizeof(::KFMsg::S2SLoadPlayerToDataReq)},
  { 109, -1, sizeof(::KFMsg::S2SLoadPlayerToGameAck)},
  { 117, -1, sizeof(::KFMsg::S2SSavePlayerToDataReq)},
  { 126, -1, sizeof(::KFMsg::S2SSavePlayerToGameAck)},
  { 132, -1, sizeof(::KFMsg::S2SQueryPlayerToDataReq)},
  { 139, -1, sizeof(::KFMsg::S2SQueryPlayerToGameAck)},
  { 146, -1, sizeof(::KFMsg::S2SSyncUpdateDataFromServer)},
  { 153, -1, sizeof(::KFMsg::S2SSyncAddDataFromServer)},
  { 160, -1, sizeof(::KFMsg::S2SSyncRemoveDataFromServer)},
  { 167, -1, sizeof(::KFMsg::S2SPlayerEnterToWorldReq)},
  { 174, -1, sizeof(::KFMsg::S2SPlayerLeaveToWorldReq)},
  { 181, -1, sizeof(::KFMsg::S2SKickPlayerToGameReq)},
  { 188, -1, sizeof(::KFMsg::S2SKickPlayerToGateReq)},
  { 195, -1, sizeof(::KFMsg::S2SBroadcastToGameReq)},
  { 202, -1, sizeof(::KFMsg::S2SBroadcastToGameAck)},
  { 211, -1, sizeof(::KFMsg::S2SBroadcastToGateReq)},
  { 220, -1, sizeof(::KFMsg::S2SBroadcastToServerReq)},
  { 227, -1, sizeof(::KFMsg::S2SBroadcastToWorldReq)},
  { 234, -1, sizeof(::KFMsg::S2SBroadcastToWorldAck)},
  { 243, 250, sizeof(::KFMsg::PBMail_DataEntry_DoNotUse)},
  { 252, -1, sizeof(::KFMsg::PBMail)},
  { 258, -1, sizeof(::KFMsg::S2SQueryMailReq)},
  { 266, -1, sizeof(::KFMsg::S2SQueryMailAck)},
  { 273, -1, sizeof(::KFMsg::S2SAddMailReq)},
  { 281, -1, sizeof(::KFMsg::S2SNoticeNewMailReq)},
  { 287, -1, sizeof(::KFMsg::S2SNewPlayerMailReq)},
  { 294, -1, sizeof(::KFMsg::S2SUpdateMailStatusReq)},
  { 303, -1, sizeof(::KFMsg::S2SUpdateMailStatusAck)},
  { 311, -1, sizeof(::KFMsg::S2SNoticeRankWorkerReq)},
  { 317, -1, sizeof(::KFMsg::S2SSyncRefreshRank)},
  { 323, -1, sizeof(::KFMsg::S2SUpdateRankDataReq)},
  { 332, -1, sizeof(::KFMsg::S2SQueryRankListReq)},
  { 341, -1, sizeof(::KFMsg::S2SQueryFriendRankListReq)},
  { 348, 355, sizeof(::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse)},
  { 357, -1, sizeof(::KFMsg::S2SUpdateIntValueToBasicReq)},
  { 363, 370, sizeof(::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse)},
  { 372, -1, sizeof(::KFMsg::S2SUpdateStrValueToBasicReq)},
  { 378, -1, sizeof(::KFMsg::S2SClearOnlineToBasicReq)},
  { 384, -1, sizeof(::KFMsg::S2SQueryAttributeToBasicReq)},
  { 391, 398, sizeof(::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse)},
  { 400, -1, sizeof(::KFMsg::S2SQueryAttributeToGameAck)},
  { 408, -1, sizeof(::KFMsg::S2SSetPlayerNameToBasicReq)},
  { 418, -1, sizeof(::KFMsg::S2SSetPlayerNameToGameAck)},
  { 427, 434, sizeof(::KFMsg::PBRelation_BasicdataEntry_DoNotUse)},
  { 436, 443, sizeof(::KFMsg::PBRelation_RelationdataEntry_DoNotUse)},
  { 445, -1, sizeof(::KFMsg::PBRelation)},
  { 453, -1, sizeof(::KFMsg::S2SQueryRelationToRelationReq)},
  { 460, -1, sizeof(::KFMsg::S2SQueryRelationToGameAck)},
  { 468, -1, sizeof(::KFMsg::S2SQueryRelationInviteToRelationReq)},
  { 475, -1, sizeof(::KFMsg::S2SQueryRelationInviteToGameAck)},
  { 483, 490, sizeof(::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse)},
  { 492, -1, sizeof(::KFMsg::S2SUpdateIntValueToRelationReq)},
  { 500, 507, sizeof(::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse)},
  { 509, -1, sizeof(::KFMsg::S2SUpdateStrValueToRelationReq)},
  { 517, -1, sizeof(::KFMsg::S2SApplyAddRelationToRelationReq)},
  { 526, -1, sizeof(::KFMsg::S2SApplyAddRelationToGameAck)},
  { 534, -1, sizeof(::KFMsg::S2SDelRelationInviteToRelationReq)},
  { 543, -1, sizeof(::KFMsg::S2SAddRelationToRelationReq)},
  { 551, -1, sizeof(::KFMsg::S2SAddRelationToGameAck)},
  { 559, -1, sizeof(::KFMsg::S2SDelRelationToRelationReq)},
  { 566, -1, sizeof(::KFMsg::S2SDelRelationToGameAck)},
  { 574, -1, sizeof(::KFMsg::S2SUpdateFriendLinessToRelationReq)},
  { 583, -1, sizeof(::KFMsg::S2SUpdateFriendLinessToGameAck)},
  { 591, -1, sizeof(::KFMsg::S2SRefuseRelationToRelationReq)},
  { 599, -1, sizeof(::KFMsg::S2STeamCreateToTeamReq)},
  { 608, -1, sizeof(::KFMsg::S2STeamJoinToGameAck)},
  { 615, -1, sizeof(::KFMsg::S2STeamJoinFailedToTeamReq)},
  { 622, -1, sizeof(::KFMsg::S2STeamOnlineQueryToTeamReq)},
  { 629, -1, sizeof(::KFMsg::S2STeamOnlineQueryToGameAck)},
  { 635, 642, sizeof(::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse)},
  { 644, -1, sizeof(::KFMsg::S2STeamIntValueToTeamReq)},
  { 652, 659, sizeof(::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse)},
  { 661, -1, sizeof(::KFMsg::S2STeamStrValueToTeamReq)},
  { 669, 676, sizeof(::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse)},
  { 678, -1, sizeof(::KFMsg::S2STeamMemberIntValueToTeamReq)},
  { 686, 693, sizeof(::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse)},
  { 695, -1, sizeof(::KFMsg::S2STeamMemberStrValueToTeamReq)},
  { 703, -1, sizeof(::KFMsg::S2STeamLeaveToTeamReq)},
  { 710, -1, sizeof(::KFMsg::S2STeamKickToTeamReq)},
  { 718, -1, sizeof(::KFMsg::S2STeamLeaveToGameAck)},
  { 725, -1, sizeof(::KFMsg::S2STeamTellInviteToGameAck)},
  { 732, -1, sizeof(::KFMsg::S2STeamTellApplyToGameAck)},
  { 738, -1, sizeof(::KFMsg::S2STeamAgreeToTeamReq)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddGateToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRemoveGateToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToGateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SEnterToGateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLogoutToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDisconnectToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLeaveToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SConnectToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SReLoginToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SReLoginToGateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoadPlayerToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoadPlayerToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSavePlayerToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSavePlayerToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryPlayerToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryPlayerToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSyncUpdateDataFromServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSyncAddDataFromServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSyncRemoveDataFromServer_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerEnterToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLeaveToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickPlayerToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickPlayerToGateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToServerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToWorldAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMail_DataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryMailAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SNoticeNewMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SNewPlayerMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateMailStatusReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateMailStatusAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SNoticeRankWorkerReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSyncRefreshRank_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateRankDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRankListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendRankListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateIntValueToBasicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateStrValueToBasicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SClearOnlineToBasicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryAttributeToBasicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryAttributeToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSetPlayerNameToBasicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSetPlayerNameToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRelation_BasicdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRelation_RelationdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRelation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRelationToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRelationToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRelationInviteToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRelationInviteToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateIntValueToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateStrValueToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SApplyAddRelationToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SApplyAddRelationToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDelRelationInviteToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddRelationToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddRelationToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDelRelationToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDelRelationToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateFriendLinessToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateFriendLinessToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRefuseRelationToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamCreateToTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamJoinToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamJoinFailedToTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamOnlineQueryToTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamOnlineQueryToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamIntValueToTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamStrValueToTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamMemberIntValueToTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamMemberStrValueToTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamLeaveToTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamKickToTeamReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamLeaveToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamTellInviteToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamTellApplyToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STeamAgreeToTeamReq_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameServerMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 97);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030FrameServerMessage.proto\022\005KFMsg\032\030Frame"
      "DefineMessage.proto\"6\n\024S2SAddGateToWorld"
      "Req\022\016\n\006gameid\030\001 \001(\004\022\016\n\006gateid\030\002 \003(\004\"9\n\027S"
      "2SRemoveGateToWorldReq\022\016\n\006gameid\030\001 \001(\004\022\016"
      "\n\006gateid\030\002 \001(\004\"U\n\022S2SLoginToLoginReq\022\n\n\002"
      "ip\030\001 \001(\014\022\r\n\005token\030\002 \001(\014\022\021\n\taccountid\030\003 \001"
      "(\004\022\021\n\tsessionid\030\004 \001(\004\"Z\n\021S2SLoginToGateA"
      "ck\022\016\n\006result\030\001 \001(\r\022\021\n\taccountid\030\002 \001(\004\022\021\n"
      "\tsessionid\030\003 \001(\004\022\017\n\007bantime\030\004 \001(\004\"9\n\022S2S"
      "LoginToWorldReq\022#\n\007pblogin\030\001 \001(\0132\022.KFMsg"
      ".PBLoginData\"Z\n\022S2SLoginToLoginAck\022\016\n\006re"
      "sult\030\001 \001(\r\022\016\n\006gateid\030\002 \001(\004\022\021\n\taccountid\030"
      "\003 \001(\004\022\021\n\tsessionid\030\004 \001(\004\"8\n\021S2SLoginToGa"
      "meReq\022#\n\007pblogin\030\001 \001(\0132\022.KFMsg.PBLoginDa"
      "ta\"q\n\021S2SEnterToGateAck\022#\n\007pblogin\030\001 \001(\013"
      "2\022.KFMsg.PBLoginData\022#\n\nplayerdata\030\002 \001(\013"
      "2\017.KFMsg.PBObject\022\022\n\nservertime\030\003 \001(\004\"&\n"
      "\022S2SLogoutToGameReq\022\020\n\010playerid\030\001 \001(\004\"*\n"
      "\026S2SDisconnectToGameReq\022\020\n\010playerid\030\001 \001("
      "\004\"%\n\021S2SLeaveToGameReq\022\020\n\010playerid\030\001 \001(\004"
      "\":\n\023S2SConnectToGameReq\022#\n\007pblogin\030\001 \003(\013"
      "2\022.KFMsg.PBLoginData\"\\\n\023S2SReLoginToGame"
      "Req\022\r\n\005token\030\001 \001(\014\022\020\n\010playerid\030\002 \001(\004\022\021\n\t"
      "sessionid\030\003 \001(\004\022\021\n\taccountid\030\004 \001(\004\"\\\n\023S2"
      "SReLoginToGateAck\022\r\n\005token\030\001 \001(\014\022\020\n\010play"
      "erid\030\002 \001(\004\022\021\n\tsessionid\030\003 \001(\004\022\021\n\taccount"
      "id\030\004 \001(\004\"=\n\026S2SLoadPlayerToDataReq\022#\n\007pb"
      "login\030\001 \001(\0132\022.KFMsg.PBLoginData\"r\n\026S2SLo"
      "adPlayerToGameAck\022\016\n\006result\030\001 \001(\r\022#\n\007pbl"
      "ogin\030\002 \001(\0132\022.KFMsg.PBLoginData\022#\n\nplayer"
      "data\030\003 \001(\0132\017.KFMsg.PBObject\"a\n\026S2SSavePl"
      "ayerToDataReq\022\n\n\002id\030\001 \001(\004\022\016\n\006zoneid\030\002 \001("
      "\r\022\014\n\004flag\030\003 \001(\r\022\035\n\004data\030\004 \001(\0132\017.KFMsg.PB"
      "Object\"$\n\026S2SSavePlayerToGameAck\022\n\n\002id\030\001"
      " \001(\004\";\n\027S2SQueryPlayerToDataReq\022\020\n\010playe"
      "rid\030\001 \001(\004\022\016\n\006zoneid\030\002 \001(\r\"N\n\027S2SQueryPla"
      "yerToGameAck\022\016\n\006result\030\001 \001(\r\022#\n\nplayerda"
      "ta\030\002 \001(\0132\017.KFMsg.PBObject\"Q\n\033S2SSyncUpda"
      "teDataFromServer\022\021\n\tdata_name\030\001 \001(\014\022\037\n\006p"
      "bdata\030\002 \001(\0132\017.KFMsg.PBObject\"N\n\030S2SSyncA"
      "ddDataFromServer\022\021\n\tdata_name\030\001 \001(\014\022\037\n\006p"
      "bdata\030\002 \001(\0132\017.KFMsg.PBObject\"Q\n\033S2SSyncR"
      "emoveDataFromServer\022\021\n\tdata_name\030\001 \001(\014\022\037"
      "\n\006pbdata\030\002 \001(\0132\017.KFMsg.PBObject\"\?\n\030S2SPl"
      "ayerEnterToWorldReq\022\020\n\010playerid\030\001 \001(\004\022\021\n"
      "\taccountid\030\002 \001(\004\"\?\n\030S2SPlayerLeaveToWorl"
      "dReq\022\020\n\010playerid\030\001 \001(\004\022\021\n\taccountid\030\002 \001("
      "\004\"8\n\026S2SKickPlayerToGameReq\022\014\n\004type\030\001 \001("
      "\r\022\020\n\010playerid\030\002 \001(\004\"8\n\026S2SKickPlayerToGa"
      "teReq\022\014\n\004type\030\001 \001(\r\022\020\n\010playerid\030\002 \001(\004\"7\n"
      "\025S2SBroadcastToGameReq\022\r\n\005msgid\030\001 \001(\r\022\017\n"
      "\007msgdata\030\002 \001(\014\"X\n\025S2SBroadcastToGameAck\022"
      "\r\n\005msgid\030\001 \001(\r\022\017\n\007msgdata\030\002 \001(\014\022\016\n\006seria"
      "l\030\003 \001(\r\022\017\n\007worldid\030\004 \001(\004\"X\n\025S2SBroadcast"
      "ToGateReq\022\r\n\005msgid\030\001 \001(\r\022\017\n\007msgdata\030\002 \001("
      "\014\022\016\n\006serial\030\003 \001(\r\022\017\n\007worldid\030\004 \001(\004\"9\n\027S2"
      "SBroadcastToServerReq\022\r\n\005msgid\030\001 \001(\r\022\017\n\007"
      "msgdata\030\002 \001(\014\"8\n\026S2SBroadcastToWorldReq\022"
      "\r\n\005msgid\030\001 \001(\r\022\017\n\007msgdata\030\002 \001(\014\"Y\n\026S2SBr"
      "oadcastToWorldAck\022\r\n\005msgid\030\001 \001(\r\022\017\n\007msgd"
      "ata\030\002 \001(\014\022\016\n\006serial\030\003 \001(\r\022\017\n\007worldid\030\004 \001"
      "(\004\"\\\n\006PBMail\022%\n\004data\030\001 \003(\0132\027.KFMsg.PBMai"
      "l.DataEntry\032+\n\tDataEntry\022\013\n\003key\030\001 \001(\t\022\r\n"
      "\005value\030\002 \001(\014:\0028\001\"B\n\017S2SQueryMailReq\022\020\n\010p"
      "layerid\030\001 \001(\004\022\016\n\006zoneid\030\002 \001(\r\022\r\n\005maxid\030\003"
      " \001(\004\"@\n\017S2SQueryMailAck\022\020\n\010playerid\030\001 \001("
      "\004\022\033\n\004mail\030\002 \003(\0132\r.KFMsg.PBMail\"N\n\rS2SAdd"
      "MailReq\022\014\n\004flag\030\001 \001(\r\022\020\n\010objectid\030\002 \001(\004\022"
      "\035\n\006pbmail\030\003 \001(\0132\r.KFMsg.PBMail\"\'\n\023S2SNot"
      "iceNewMailReq\022\020\n\010playerid\030\001 \001(\004\"7\n\023S2SNe"
      "wPlayerMailReq\022\020\n\010playerid\030\001 \001(\004\022\016\n\006zone"
      "id\030\002 \001(\r\"T\n\026S2SUpdateMailStatusReq\022\020\n\010pl"
      "ayerid\030\001 \001(\004\022\n\n\002id\030\002 \001(\004\022\014\n\004flag\030\003 \001(\r\022\016"
      "\n\006status\030\004 \001(\r\"F\n\026S2SUpdateMailStatusAck"
      "\022\020\n\010playerid\030\001 \001(\004\022\n\n\002id\030\002 \001(\004\022\016\n\006status"
      "\030\003 \001(\r\"*\n\026S2SNoticeRankWorkerReq\022\020\n\010work"
      "erid\030\001 \001(\r\"$\n\022S2SSyncRefreshRank\022\016\n\006rank"
      "id\030\001 \001(\r\"o\n\024S2SUpdateRankDataReq\022\020\n\010play"
      "erid\030\001 \001(\004\022\016\n\006rankid\030\002 \001(\r\022\016\n\006zoneid\030\003 \001"
      "(\r\022%\n\npbrankdata\030\004 \001(\0132\021.KFMsg.PBRankDat"
      "a\"S\n\023S2SQueryRankListReq\022\016\n\006rankid\030\001 \001(\r"
      "\022\016\n\006zoneid\030\002 \001(\r\022\r\n\005start\030\003 \001(\r\022\r\n\005count"
      "\030\004 \001(\r\"=\n\031S2SQueryFriendRankListReq\022\016\n\006r"
      "ankid\030\001 \001(\r\022\020\n\010friendid\030\002 \003(\004\"\214\001\n\033S2SUpd"
      "ateIntValueToBasicReq\022>\n\006pbdata\030\001 \003(\0132.."
      "KFMsg.S2SUpdateIntValueToBasicReq.Pbdata"
      "Entry\032-\n\013PbdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
      "ue\030\002 \001(\004:\0028\001\"\214\001\n\033S2SUpdateStrValueToBasi"
      "cReq\022>\n\006pbdata\030\001 \003(\0132..KFMsg.S2SUpdateSt"
      "rValueToBasicReq.PbdataEntry\032-\n\013PbdataEn"
      "try\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\",\n\030S"
      "2SClearOnlineToBasicReq\022\020\n\010serverid\030\001 \001("
      "\004\";\n\033S2SQueryAttributeToBasicReq\022\014\n\004name"
      "\030\001 \001(\014\022\016\n\006zoneid\030\002 \001(\r\"\250\001\n\032S2SQueryAttri"
      "buteToGameAck\022\014\n\004name\030\001 \001(\014\022\016\n\006result\030\002 "
      "\001(\r\022=\n\006pbdata\030\003 \003(\0132-.KFMsg.S2SQueryAttr"
      "ibuteToGameAck.PbdataEntry\032-\n\013PbdataEntr"
      "y\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"r\n\032S2S"
      "SetPlayerNameToBasicReq\022\016\n\006zoneid\030\001 \001(\r\022"
      "\020\n\010playerid\030\002 \001(\004\022\017\n\007oldname\030\003 \001(\014\022\017\n\007ne"
      "wname\030\004 \001(\014\022\020\n\010costdata\030\005 \001(\014\"]\n\031S2SSetP"
      "layerNameToGameAck\022\016\n\006result\030\001 \001(\r\022\020\n\010pl"
      "ayerid\030\002 \001(\004\022\014\n\004name\030\003 \001(\014\022\020\n\010costdata\030\004"
      " \001(\014\"\365\001\n\nPBRelation\022\020\n\010playerid\030\001 \001(\004\0223\n"
      "\tbasicdata\030\002 \003(\0132 .KFMsg.PBRelation.Basi"
      "cdataEntry\0229\n\014relationdata\030\003 \003(\0132#.KFMsg"
      ".PBRelation.RelationdataEntry\0320\n\016Basicda"
      "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\032"
      "3\n\021RelationdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005val"
      "ue\030\002 \001(\014:\0028\001\"G\n\035S2SQueryRelationToRelati"
      "onReq\022\024\n\014relationname\030\001 \001(\014\022\020\n\010playerid\030"
      "\002 \001(\004\"j\n\031S2SQueryRelationToGameAck\022\024\n\014re"
      "lationname\030\001 \001(\014\022\020\n\010playerid\030\002 \001(\004\022%\n\npb"
      "relation\030\003 \003(\0132\021.KFMsg.PBRelation\"M\n#S2S"
      "QueryRelationInviteToRelationReq\022\024\n\014rela"
      "tionname\030\001 \001(\014\022\020\n\010playerid\030\002 \001(\004\"n\n\037S2SQ"
      "ueryRelationInviteToGameAck\022\024\n\014relationn"
      "ame\030\001 \001(\014\022\020\n\010playerid\030\002 \001(\004\022#\n\010pbinvite\030"
      "\003 \003(\0132\021.KFMsg.PBRelation\"\272\001\n\036S2SUpdateIn"
      "tValueToRelationReq\022\024\n\014relationname\030\001 \001("
      "\014\022\020\n\010playerid\030\002 \001(\004\022A\n\006pbdata\030\003 \003(\01321.KF"
      "Msg.S2SUpdateIntValueToRelationReq.Pbdat"
      "aEntry\032-\n\013PbdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005va"
      "lue\030\002 \001(\004:\0028\001\"\272\001\n\036S2SUpdateStrValueToRel"
      "ationReq\022\024\n\014relationname\030\001 \001(\014\022\020\n\010player"
      "id\030\002 \001(\004\022A\n\006pbdata\030\003 \003(\01321.KFMsg.S2SUpda"
      "teStrValueToRelationReq.PbdataEntry\032-\n\013P"
      "bdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\002"
      "8\001\"o\n S2SApplyAddRelationToRelationReq\022\024"
      "\n\014relationname\030\001 \001(\014\022\022\n\nplayername\030\002 \001(\014"
      "\022\020\n\010playerid\030\003 \001(\004\022\017\n\007message\030\004 \001(\014\"k\n\034S"
      "2SApplyAddRelationToGameAck\022\024\n\014relationn"
      "ame\030\001 \001(\014\022\020\n\010playerid\030\002 \001(\004\022#\n\010pbinvite\030"
      "\003 \001(\0132\021.KFMsg.PBRelation\"y\n!S2SDelRelati"
      "onInviteToRelationReq\022\024\n\014relationname\030\001 "
      "\001(\014\022\020\n\010listname\030\002 \001(\014\022\024\n\014selfplayerid\030\003 "
      "\001(\004\022\026\n\016targetplayerid\030\004 \001(\004\"Y\n\033S2SAddRel"
      "ationToRelationReq\022\024\n\014relationname\030\001 \001(\014"
      "\022\020\n\010playerid\030\002 \001(\004\022\022\n\nplayername\030\003 \001(\014\"h"
      "\n\027S2SAddRelationToGameAck\022\024\n\014relationnam"
      "e\030\001 \001(\014\022\020\n\010playerid\030\002 \001(\004\022%\n\npbrelation\030"
      "\004 \001(\0132\021.KFMsg.PBRelation\"E\n\033S2SDelRelati"
      "onToRelationReq\022\024\n\014relationname\030\001 \001(\014\022\020\n"
      "\010playerid\030\002 \001(\004\"U\n\027S2SDelRelationToGameA"
      "ck\022\024\n\014relationname\030\001 \001(\014\022\020\n\010playerid\030\002 \001"
      "(\004\022\022\n\nrelationid\030\003 \001(\004\"v\n\"S2SUpdateFrien"
      "dLinessToRelationReq\022\014\n\004type\030\001 \001(\r\022\024\n\014se"
      "lfplayerid\030\002 \001(\004\022\026\n\016targetplayerid\030\003 \001(\004"
      "\022\024\n\014friendliness\030\004 \001(\r\"`\n\036S2SUpdateFrien"
      "dLinessToGameAck\022\020\n\010playerid\030\001 \001(\004\022\026\n\016ta"
      "rgetplayerid\030\002 \001(\004\022\024\n\014friendliness\030\003 \001(\r"
      "\"[\n\036S2SRefuseRelationToRelationReq\022\022\n\nre"
      "fusename\030\001 \001(\014\022\020\n\010playerid\030\002 \001(\004\022\023\n\013refu"
      "sevalue\030\003 \001(\004\"d\n\026S2STeamCreateToTeamReq\022"
      "\n\n\002id\030\001 \001(\r\022\014\n\004name\030\002 \001(\014\022\014\n\004info\030\003 \001(\014\022"
      "\"\n\tpbcaptain\030\004 \001(\0132\017.KFMsg.PBObject\"C\n\024S"
      "2STeamJoinToGameAck\022\n\n\002id\030\001 \001(\004\022\037\n\006pbtea"
      "m\030\002 \001(\0132\017.KFMsg.PBObject\">\n\032S2STeamJoinF"
      "ailedToTeamReq\022\016\n\006teamid\030\001 \001(\004\022\020\n\010player"
      "id\030\002 \001(\004\"\?\n\033S2STeamOnlineQueryToTeamReq\022"
      "\016\n\006teamid\030\001 \001(\004\022\020\n\010playerid\030\002 \001(\004\">\n\033S2S"
      "TeamOnlineQueryToGameAck\022\037\n\006pbteam\030\001 \001(\013"
      "2\017.KFMsg.PBObject\"\250\001\n\030S2STeamIntValueToT"
      "eamReq\022\016\n\006teamid\030\001 \001(\004\022\020\n\010playerid\030\002 \001(\004"
      "\022;\n\006pbdata\030\003 \003(\0132+.KFMsg.S2STeamIntValue"
      "ToTeamReq.PbdataEntry\032-\n\013PbdataEntry\022\013\n\003"
      "key\030\001 \001(\t\022\r\n\005value\030\002 \001(\004:\0028\001\"\250\001\n\030S2STeam"
      "StrValueToTeamReq\022\016\n\006teamid\030\001 \001(\004\022\020\n\010pla"
      "yerid\030\002 \001(\004\022;\n\006pbdata\030\003 \003(\0132+.KFMsg.S2ST"
      "eamStrValueToTeamReq.PbdataEntry\032-\n\013Pbda"
      "taEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001(\014:\0028\001\""
      "\264\001\n\036S2STeamMemberIntValueToTeamReq\022\016\n\006te"
      "amid\030\001 \001(\004\022\020\n\010playerid\030\002 \001(\004\022A\n\006pbdata\030\003"
      " \003(\01321.KFMsg.S2STeamMemberIntValueToTeam"
      "Req.PbdataEntry\032-\n\013PbdataEntry\022\013\n\003key\030\001 "
      "\001(\t\022\r\n\005value\030\002 \001(\004:\0028\001\"\264\001\n\036S2STeamMember"
      "StrValueToTeamReq\022\016\n\006teamid\030\001 \001(\004\022\020\n\010pla"
      "yerid\030\002 \001(\004\022A\n\006pbdata\030\003 \003(\01321.KFMsg.S2ST"
      "eamMemberStrValueToTeamReq.PbdataEntry\032-"
      "\n\013PbdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
      "\014:\0028\001\"9\n\025S2STeamLeaveToTeamReq\022\016\n\006teamid"
      "\030\001 \001(\004\022\020\n\010playerid\030\002 \001(\004\"K\n\024S2STeamKickT"
      "oTeamReq\022\016\n\006teamid\030\001 \001(\004\022\021\n\tcaptainid\030\002 "
      "\001(\004\022\020\n\010memberid\030\003 \001(\004\"5\n\025S2STeamLeaveToG"
      "ameAck\022\016\n\006teamid\030\001 \001(\004\022\014\n\004type\030\002 \001(\r\"`\n\032"
      "S2STeamTellInviteToGameAck\022!\n\010pbplayer\030\001"
      " \001(\0132\017.KFMsg.PBObject\022\037\n\006pbteam\030\002 \001(\0132\017."
      "KFMsg.PBObject\">\n\031S2STeamTellApplyToGame"
      "Ack\022!\n\010pbplayer\030\001 \001(\0132\017.KFMsg.PBObject\"J"
      "\n\025S2STeamAgreeToTeamReq\022\016\n\006teamid\030\001 \001(\004\022"
      "!\n\010pbplayer\030\002 \001(\0132\017.KFMsg.PBObject*\367\027\n\023F"
      "rameServerProtocol\022#\n\037S2S_FRAME_SERVER_P"
      "ROTOCOL_BEGIN\020\000\022\037\n\031S2S_ADD_GATE_TO_WORLD"
      "_REQ\020\242\234\001\022\"\n\034S2S_REMOVE_GATE_TO_WORLD_REQ"
      "\020\243\234\001\022\034\n\026S2S_LOGIN_TO_LOGIN_REQ\020\205\235\001\022\033\n\025S2"
      "S_LOGIN_TO_GATE_ACK\020\206\235\001\022\034\n\026S2S_LOGIN_TO_"
      "WORLD_REQ\020\207\235\001\022\034\n\026S2S_LOGIN_TO_LOGIN_ACK\020"
      "\210\235\001\022\033\n\025S2S_LOGIN_TO_GAME_REQ\020\211\235\001\022\034\n\026S2S_"
      "LOGOUT_TO_GAME_REQ\020\212\235\001\022 \n\032S2S_DISCONNECT"
      "_TO_GAME_REQ\020\213\235\001\022\033\n\025S2S_LEAVE_TO_GAME_RE"
      "Q\020\214\235\001\022\033\n\025S2S_ENTER_TO_GATE_ACK\020\215\235\001\022\035\n\027S2"
      "S_RELOGIN_TO_GAME_REQ\020\216\235\001\022\035\n\027S2S_RELOGIN"
      "_TO_GATE_ACK\020\217\235\001\022\035\n\027S2S_CONNECT_TO_GAME_"
      "REQ\020\220\235\001\022#\n\035S2S_PLAYER_ENTER_TO_WORLD_REQ"
      "\020\352\235\001\022#\n\035S2S_PLAYER_LEAVE_TO_WORLD_REQ\020\353\235"
      "\001\022!\n\033S2S_KICK_PLAYER_TO_GAME_REQ\020\354\235\001\022!\n\033"
      "S2S_KICK_PLAYER_TO_GATE_REQ\020\355\235\001\022\037\n\031S2S_B"
      "ROADCAST_TO_GAME_REQ\020\315\236\001\022\037\n\031S2S_BROADCAS"
      "T_TO_GAME_ACK\020\316\236\001\022 \n\032S2S_BROADCAST_TO_WO"
      "RLD_REQ\020\317\236\001\022 \n\032S2S_BROADCAST_TO_WORLD_AC"
      "K\020\320\236\001\022\037\n\031S2S_BROADCAST_TO_GATE_REQ\020\321\236\001\022!"
      "\n\033S2S_BROADCAST_TO_SERVER_REQ\020\322\236\001\022!\n\033S2S"
      "_LOAD_PLAYER_TO_DATA_REQ\020\261\237\001\022!\n\033S2S_LOAD"
      "_PLAYER_TO_GAME_ACK\020\262\237\001\022!\n\033S2S_SAVE_PLAY"
      "ER_TO_DATA_REQ\020\263\237\001\022!\n\033S2S_SAVE_PLAYER_TO"
      "_GAME_ACK\020\264\237\001\022\"\n\034S2S_QUERY_PLAYER_TO_DAT"
      "A_REQ\020\265\237\001\022\"\n\034S2S_QUERY_PLAYER_TO_GAME_AC"
      "K\020\266\237\001\022&\n S2S_SYNC_UPDATE_DATA_FROM_SERVE"
      "R\020\267\237\001\022#\n\035S2S_SYNC_ADD_DATA_FROM_SERVER\020\270"
      "\237\001\022&\n S2S_SYNC_REMOVE_DATA_FROM_SERVER\020\271"
      "\237\001\022\035\n\027S2S_NEW_PLAYER_MAIL_REQ\020\225\240\001\022\030\n\022S2S"
      "_QUERY_MAIL_REQ\020\226\240\001\022\030\n\022S2S_QUERY_MAIL_AC"
      "K\020\227\240\001\022\026\n\020S2S_ADD_MAIL_REQ\020\230\240\001\022\035\n\027S2S_NOT"
      "ICE_NEW_MAIL_REQ\020\231\240\001\022 \n\032S2S_UPDATE_MAIL_"
      "STATUS_REQ\020\232\240\001\022 \n\032S2S_UPDATE_MAIL_STATUS"
      "_ACK\020\233\240\001\022 \n\032S2S_NOTICE_RANK_WORKER_REQ\020\371"
      "\240\001\022\033\n\025S2S_SYNC_REFRESH_RANK\020\372\240\001\022\036\n\030S2S_U"
      "PDATE_RANK_DATA_REQ\020\373\240\001\022\035\n\027S2S_QUERY_RAN"
      "K_LIST_REQ\020\374\240\001\022$\n\036S2S_QUERY_FRIEND_RANK_"
      "LIST_REQ\020\375\240\001\022\'\n!S2S_UPDATE_INT_VALUE_TO_"
      "BASIC_REQ\020\335\241\001\022\'\n!S2S_UPDATE_STR_VALUE_TO"
      "_BASIC_REQ\020\336\241\001\022&\n S2S_QUERY_ATTRIBUTE_TO"
      "_BASIC_REQ\020\337\241\001\022%\n\037S2S_QUERY_ATTRIBUTE_TO"
      "_GAME_ACK\020\340\241\001\022#\n\035S2S_CLEAR_ONLINE_TO_BAS"
      "IC_REQ\020\341\241\001\022&\n S2S_SET_PLAYER_NAME_TO_BAS"
      "IC_REQ\020\342\241\001\022%\n\037S2S_SET_PLAYER_NAME_TO_GAM"
      "E_ACK\020\343\241\001\022(\n\"S2S_QUERY_RELATION_TO_RELAT"
      "ION_REQ\020\301\242\001\022$\n\036S2S_QUERY_RELATION_TO_GAM"
      "E_ACK\020\302\242\001\022/\n)S2S_QUERY_RELATION_INVITE_T"
      "O_RELATION_REQ\020\303\242\001\022+\n%S2S_QUERY_RELATION"
      "_INVITE_TO_GAME_ACK\020\304\242\001\022*\n$S2S_UPDATE_IN"
      "T_VALUE_TO_RELATION_REQ\020\305\242\001\022*\n$S2S_UPDAT"
      "E_STR_VALUE_TO_RELATION_REQ\020\306\242\001\022,\n&S2S_A"
      "PPLY_ADD_RELATION_TO_RELATION_REQ\020\307\242\001\022(\n"
      "\"S2S_APPLY_ADD_RELATION_TO_GAME_ACK\020\310\242\001\022"
      "-\n\'S2S_DEL_RELATION_INVITE_TO_RELATION_R"
      "EQ\020\311\242\001\022&\n S2S_ADD_RELATION_TO_RELATION_R"
      "EQ\020\312\242\001\022\"\n\034S2S_ADD_RELATION_TO_GAME_ACK\020\313"
      "\242\001\022&\n S2S_DEL_RELATION_TO_RELATION_REQ\020\314"
      "\242\001\022\"\n\034S2S_DEL_RELATION_TO_GAME_ACK\020\315\242\001\022-"
      "\n\'S2S_UPDATE_FRIENDLINESS_TO_RELATION_RE"
      "Q\020\316\242\001\022)\n#S2S_UPDATE_FRIENDLINESS_TO_GAME"
      "_ACK\020\317\242\001\022)\n#S2S_REFUSE_RELATION_TO_RELAT"
      "ION_REQ\020\320\242\001\022!\n\033S2S_TEAM_CREATE_TO_TEAM_R"
      "EQ\020\245\243\001\022\036\n\030S2S_TEAM_JON_TO_GAME_ACK\020\246\243\001\022&"
      "\n S2S_TEAM_JION_FAILED_TO_TEAM_REQ\020\247\243\001\022\'"
      "\n!S2S_TEAM_ONLINE_QUERY_TO_TEAM_REQ\020\250\243\001\022"
      "\'\n!S2S_TEAM_ONLINE_QUERY_TO_GAME_ACK\020\251\243\001"
      "\022$\n\036S2S_TEAM_INT_VALUE_TO_TEAM_REQ\020\252\243\001\022$"
      "\n\036S2S_TEAM_STR_VALUE_TO_TEAM_REQ\020\253\243\001\022+\n%"
      "S2S_TEAM_MEMBER_INT_VALUE_TO_TEAM_REQ\020\254\243"
      "\001\022+\n%S2S_TEAM_MEMBER_STR_VALUE_TO_TEAM_R"
      "EQ\020\255\243\001\022 \n\032S2S_TEAM_LEAVE_TO_TEAM_REQ\020\256\243\001"
      "\022\037\n\031S2S_TEAM_KICK_TO_TEAM_REQ\020\257\243\001\022 \n\032S2S"
      "_TEAM_LEAVE_TO_GAME_ACK\020\260\243\001\022&\n S2S_TEAM_"
      "TELL_INVITE_TO_GAME_ACK\020\261\243\001\022%\n\037S2S_TEAM_"
      "TELL_APPLY_TO_GAME_ACK\020\262\243\001\022 \n\032S2S_TEAM_A"
      "GREE_TO_TEAM_REQ\020\263\243\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 10708);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameServerMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_FrameDefineMessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameServerMessage_2eproto
namespace KFMsg {
const ::google::protobuf::EnumDescriptor* FrameServerProtocol_descriptor() {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameServerMessage_2eproto::file_level_enum_descriptors[0];
}
bool FrameServerProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 20002:
    case 20003:
    case 20101:
    case 20102:
    case 20103:
    case 20104:
    case 20105:
    case 20106:
    case 20107:
    case 20108:
    case 20109:
    case 20110:
    case 20111:
    case 20112:
    case 20202:
    case 20203:
    case 20204:
    case 20205:
    case 20301:
    case 20302:
    case 20303:
    case 20304:
    case 20305:
    case 20306:
    case 20401:
    case 20402:
    case 20403:
    case 20404:
    case 20405:
    case 20406:
    case 20407:
    case 20408:
    case 20409:
    case 20501:
    case 20502:
    case 20503:
    case 20504:
    case 20505:
    case 20506:
    case 20507:
    case 20601:
    case 20602:
    case 20603:
    case 20604:
    case 20605:
    case 20701:
    case 20702:
    case 20703:
    case 20704:
    case 20705:
    case 20706:
    case 20707:
    case 20801:
    case 20802:
    case 20803:
    case 20804:
    case 20805:
    case 20806:
    case 20807:
    case 20808:
    case 20809:
    case 20810:
    case 20811:
    case 20812:
    case 20813:
    case 20814:
    case 20815:
    case 20816:
    case 20901:
    case 20902:
    case 20903:
    case 20904:
    case 20905:
    case 20906:
    case 20907:
    case 20908:
    case 20909:
    case 20910:
    case 20911:
    case 20912:
    case 20913:
    case 20914:
    case 20915:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void S2SAddGateToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddGateToWorldReq::kGameidFieldNumber;
const int S2SAddGateToWorldReq::kGateidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddGateToWorldReq::S2SAddGateToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddGateToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddGateToWorldReq)
}
S2SAddGateToWorldReq::S2SAddGateToWorldReq(const S2SAddGateToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gateid_(from.gateid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameid_ = from.gameid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddGateToWorldReq)
}

void S2SAddGateToWorldReq::SharedCtor() {
  gameid_ = GOOGLE_ULONGLONG(0);
}

S2SAddGateToWorldReq::~S2SAddGateToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddGateToWorldReq)
  SharedDtor();
}

void S2SAddGateToWorldReq::SharedDtor() {
}

void S2SAddGateToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddGateToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddGateToWorldReq& S2SAddGateToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddGateToWorldReq.base);
  return *internal_default_instance();
}


void S2SAddGateToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gateid_.Clear();
  gameid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddGateToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddGateToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 gameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_gateid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_gateid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddGateToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddGateToWorldReq)
  return false;
#undef DO_
}

void S2SAddGateToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // repeated uint64 gateid = 2;
  if (this->gateid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _gateid_cached_byte_size_));
  }
  for (int i = 0, n = this->gateid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->gateid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddGateToWorldReq)
}

::google::protobuf::uint8* S2SAddGateToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // repeated uint64 gateid = 2;
  if (this->gateid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _gateid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->gateid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddGateToWorldReq)
  return target;
}

size_t S2SAddGateToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddGateToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 gateid = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->gateid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gateid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddGateToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddGateToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddGateToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddGateToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddGateToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddGateToWorldReq)
    MergeFrom(*source);
  }
}

void S2SAddGateToWorldReq::MergeFrom(const S2SAddGateToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddGateToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gateid_.MergeFrom(from.gateid_);
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
}

void S2SAddGateToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddGateToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddGateToWorldReq::CopyFrom(const S2SAddGateToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddGateToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddGateToWorldReq::IsInitialized() const {
  return true;
}

void S2SAddGateToWorldReq::Swap(S2SAddGateToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddGateToWorldReq::InternalSwap(S2SAddGateToWorldReq* other) {
  using std::swap;
  gateid_.InternalSwap(&other->gateid_);
  swap(gameid_, other->gameid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddGateToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRemoveGateToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRemoveGateToWorldReq::kGameidFieldNumber;
const int S2SRemoveGateToWorldReq::kGateidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRemoveGateToWorldReq::S2SRemoveGateToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SRemoveGateToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRemoveGateToWorldReq)
}
S2SRemoveGateToWorldReq::S2SRemoveGateToWorldReq(const S2SRemoveGateToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameid_, &from.gameid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gateid_) -
    reinterpret_cast<char*>(&gameid_)) + sizeof(gateid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRemoveGateToWorldReq)
}

void S2SRemoveGateToWorldReq::SharedCtor() {
  ::memset(&gameid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gateid_) -
      reinterpret_cast<char*>(&gameid_)) + sizeof(gateid_));
}

S2SRemoveGateToWorldReq::~S2SRemoveGateToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRemoveGateToWorldReq)
  SharedDtor();
}

void S2SRemoveGateToWorldReq::SharedDtor() {
}

void S2SRemoveGateToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRemoveGateToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRemoveGateToWorldReq& S2SRemoveGateToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SRemoveGateToWorldReq.base);
  return *internal_default_instance();
}


void S2SRemoveGateToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRemoveGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gameid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gateid_) -
      reinterpret_cast<char*>(&gameid_)) + sizeof(gateid_));
  _internal_metadata_.Clear();
}

bool S2SRemoveGateToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRemoveGateToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 gameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRemoveGateToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRemoveGateToWorldReq)
  return false;
#undef DO_
}

void S2SRemoveGateToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRemoveGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gateid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRemoveGateToWorldReq)
}

::google::protobuf::uint8* S2SRemoveGateToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRemoveGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gateid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRemoveGateToWorldReq)
  return target;
}

size_t S2SRemoveGateToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRemoveGateToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gateid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRemoveGateToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRemoveGateToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRemoveGateToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRemoveGateToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRemoveGateToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRemoveGateToWorldReq)
    MergeFrom(*source);
  }
}

void S2SRemoveGateToWorldReq::MergeFrom(const S2SRemoveGateToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRemoveGateToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
}

void S2SRemoveGateToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRemoveGateToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRemoveGateToWorldReq::CopyFrom(const S2SRemoveGateToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRemoveGateToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRemoveGateToWorldReq::IsInitialized() const {
  return true;
}

void S2SRemoveGateToWorldReq::Swap(S2SRemoveGateToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRemoveGateToWorldReq::InternalSwap(S2SRemoveGateToWorldReq* other) {
  using std::swap;
  swap(gameid_, other->gameid_);
  swap(gateid_, other->gateid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRemoveGateToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToLoginReq::kIpFieldNumber;
const int S2SLoginToLoginReq::kTokenFieldNumber;
const int S2SLoginToLoginReq::kAccountidFieldNumber;
const int S2SLoginToLoginReq::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToLoginReq::S2SLoginToLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToLoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToLoginReq)
}
S2SLoginToLoginReq::S2SLoginToLoginReq(const S2SLoginToLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessionid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToLoginReq)
}

void S2SLoginToLoginReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
}

S2SLoginToLoginReq::~S2SLoginToLoginReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToLoginReq)
  SharedDtor();
}

void S2SLoginToLoginReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SLoginToLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToLoginReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToLoginReq& S2SLoginToLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToLoginReq.base);
  return *internal_default_instance();
}


void S2SLoginToLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
  _internal_metadata_.Clear();
}

bool S2SLoginToLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToLoginReq)
  return false;
#undef DO_
}

void S2SLoginToLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ip(), output);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->token(), output);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->accountid(), output);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToLoginReq)
}

::google::protobuf::uint8* S2SLoginToLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ip(), target);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->token(), target);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->accountid(), target);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToLoginReq)
  return target;
}

size_t S2SLoginToLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToLoginReq)
    MergeFrom(*source);
  }
}

void S2SLoginToLoginReq::MergeFrom(const S2SLoginToLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void S2SLoginToLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToLoginReq::CopyFrom(const S2SLoginToLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToLoginReq::IsInitialized() const {
  return true;
}

void S2SLoginToLoginReq::Swap(S2SLoginToLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToLoginReq::InternalSwap(S2SLoginToLoginReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToLoginReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToGateAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToGateAck::kResultFieldNumber;
const int S2SLoginToGateAck::kAccountidFieldNumber;
const int S2SLoginToGateAck::kSessionidFieldNumber;
const int S2SLoginToGateAck::kBantimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToGateAck::S2SLoginToGateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToGateAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToGateAck)
}
S2SLoginToGateAck::S2SLoginToGateAck(const S2SLoginToGateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToGateAck)
}

void S2SLoginToGateAck::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
}

S2SLoginToGateAck::~S2SLoginToGateAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToGateAck)
  SharedDtor();
}

void S2SLoginToGateAck::SharedDtor() {
}

void S2SLoginToGateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToGateAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToGateAck& S2SLoginToGateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToGateAck.base);
  return *internal_default_instance();
}


void S2SLoginToGateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SLoginToGateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToGateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bantime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bantime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToGateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToGateAck)
  return false;
#undef DO_
}

void S2SLoginToGateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bantime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToGateAck)
}

::google::protobuf::uint8* S2SLoginToGateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bantime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToGateAck)
  return target;
}

size_t S2SLoginToGateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToGateAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bantime());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToGateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToGateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToGateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToGateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToGateAck)
    MergeFrom(*source);
  }
}

void S2SLoginToGateAck::MergeFrom(const S2SLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.bantime() != 0) {
    set_bantime(from.bantime());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginToGateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToGateAck::CopyFrom(const S2SLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToGateAck::IsInitialized() const {
  return true;
}

void S2SLoginToGateAck::Swap(S2SLoginToGateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToGateAck::InternalSwap(S2SLoginToGateAck* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  swap(bantime_, other->bantime_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToGateAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToWorldReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginToWorldReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
void S2SLoginToWorldReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToWorldReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToWorldReq::S2SLoginToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToWorldReq)
}
S2SLoginToWorldReq::S2SLoginToWorldReq(const S2SLoginToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToWorldReq)
}

void S2SLoginToWorldReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoginToWorldReq::~S2SLoginToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToWorldReq)
  SharedDtor();
}

void S2SLoginToWorldReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoginToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToWorldReq& S2SLoginToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToWorldReq.base);
  return *internal_default_instance();
}


void S2SLoginToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoginToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToWorldReq)
  return false;
#undef DO_
}

void S2SLoginToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToWorldReq)
}

::google::protobuf::uint8* S2SLoginToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToWorldReq)
  return target;
}

size_t S2SLoginToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToWorldReq)
    MergeFrom(*source);
  }
}

void S2SLoginToWorldReq::MergeFrom(const S2SLoginToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoginToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToWorldReq::CopyFrom(const S2SLoginToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToWorldReq::IsInitialized() const {
  return true;
}

void S2SLoginToWorldReq::Swap(S2SLoginToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToWorldReq::InternalSwap(S2SLoginToWorldReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToLoginAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToLoginAck::kResultFieldNumber;
const int S2SLoginToLoginAck::kGateidFieldNumber;
const int S2SLoginToLoginAck::kAccountidFieldNumber;
const int S2SLoginToLoginAck::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToLoginAck::S2SLoginToLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToLoginAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToLoginAck)
}
S2SLoginToLoginAck::S2SLoginToLoginAck(const S2SLoginToLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gateid_, &from.gateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToLoginAck)
}

void S2SLoginToLoginAck::SharedCtor() {
  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
}

S2SLoginToLoginAck::~S2SLoginToLoginAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToLoginAck)
  SharedDtor();
}

void S2SLoginToLoginAck::SharedDtor() {
}

void S2SLoginToLoginAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToLoginAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToLoginAck& S2SLoginToLoginAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToLoginAck.base);
  return *internal_default_instance();
}


void S2SLoginToLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SLoginToLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToLoginAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToLoginAck)
  return false;
#undef DO_
}

void S2SLoginToLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gateid(), output);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->accountid(), output);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToLoginAck)
}

::google::protobuf::uint8* S2SLoginToLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gateid(), target);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->accountid(), target);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToLoginAck)
  return target;
}

size_t S2SLoginToLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToLoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gateid());
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToLoginAck)
    MergeFrom(*source);
  }
}

void S2SLoginToLoginAck::MergeFrom(const S2SLoginToLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginToLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToLoginAck::CopyFrom(const S2SLoginToLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToLoginAck::IsInitialized() const {
  return true;
}

void S2SLoginToLoginAck::Swap(S2SLoginToLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToLoginAck::InternalSwap(S2SLoginToLoginAck* other) {
  using std::swap;
  swap(gateid_, other->gateid_);
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToLoginAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToGameReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginToGameReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
void S2SLoginToGameReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToGameReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToGameReq::S2SLoginToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToGameReq)
}
S2SLoginToGameReq::S2SLoginToGameReq(const S2SLoginToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToGameReq)
}

void S2SLoginToGameReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoginToGameReq::~S2SLoginToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToGameReq)
  SharedDtor();
}

void S2SLoginToGameReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoginToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToGameReq& S2SLoginToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToGameReq.base);
  return *internal_default_instance();
}


void S2SLoginToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoginToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToGameReq)
  return false;
#undef DO_
}

void S2SLoginToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToGameReq)
}

::google::protobuf::uint8* S2SLoginToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToGameReq)
  return target;
}

size_t S2SLoginToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToGameReq)
    MergeFrom(*source);
  }
}

void S2SLoginToGameReq::MergeFrom(const S2SLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoginToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToGameReq::CopyFrom(const S2SLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToGameReq::IsInitialized() const {
  return true;
}

void S2SLoginToGameReq::Swap(S2SLoginToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToGameReq::InternalSwap(S2SLoginToGameReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SEnterToGateAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SEnterToGateAck_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
  ::KFMsg::_S2SEnterToGateAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SEnterToGateAck::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
void S2SEnterToGateAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SEnterToGateAck::kPbloginFieldNumber;
const int S2SEnterToGateAck::kPlayerdataFieldNumber;
const int S2SEnterToGateAck::kServertimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SEnterToGateAck::S2SEnterToGateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SEnterToGateAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SEnterToGateAck)
}
S2SEnterToGateAck::S2SEnterToGateAck(const S2SEnterToGateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  servertime_ = from.servertime_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SEnterToGateAck)
}

void S2SEnterToGateAck::SharedCtor() {
  ::memset(&pblogin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&pblogin_)) + sizeof(servertime_));
}

S2SEnterToGateAck::~S2SEnterToGateAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SEnterToGateAck)
  SharedDtor();
}

void S2SEnterToGateAck::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SEnterToGateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SEnterToGateAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SEnterToGateAck& S2SEnterToGateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SEnterToGateAck.base);
  return *internal_default_instance();
}


void S2SEnterToGateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SEnterToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  servertime_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SEnterToGateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SEnterToGateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 servertime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SEnterToGateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SEnterToGateAck)
  return false;
#undef DO_
}

void S2SEnterToGateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SEnterToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_playerdata(), output);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->servertime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SEnterToGateAck)
}

::google::protobuf::uint8* S2SEnterToGateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SEnterToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_playerdata(), deterministic, target);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->servertime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SEnterToGateAck)
  return target;
}

size_t S2SEnterToGateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SEnterToGateAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->servertime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SEnterToGateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SEnterToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SEnterToGateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SEnterToGateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SEnterToGateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SEnterToGateAck)
    MergeFrom(*source);
  }
}

void S2SEnterToGateAck::MergeFrom(const S2SEnterToGateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SEnterToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.servertime() != 0) {
    set_servertime(from.servertime());
  }
}

void S2SEnterToGateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SEnterToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SEnterToGateAck::CopyFrom(const S2SEnterToGateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SEnterToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SEnterToGateAck::IsInitialized() const {
  return true;
}

void S2SEnterToGateAck::Swap(S2SEnterToGateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SEnterToGateAck::InternalSwap(S2SEnterToGateAck* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  swap(playerdata_, other->playerdata_);
  swap(servertime_, other->servertime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SEnterToGateAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLogoutToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLogoutToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLogoutToGameReq::S2SLogoutToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLogoutToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLogoutToGameReq)
}
S2SLogoutToGameReq::S2SLogoutToGameReq(const S2SLogoutToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLogoutToGameReq)
}

void S2SLogoutToGameReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SLogoutToGameReq::~S2SLogoutToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLogoutToGameReq)
  SharedDtor();
}

void S2SLogoutToGameReq::SharedDtor() {
}

void S2SLogoutToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLogoutToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLogoutToGameReq& S2SLogoutToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLogoutToGameReq.base);
  return *internal_default_instance();
}


void S2SLogoutToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLogoutToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SLogoutToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLogoutToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLogoutToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLogoutToGameReq)
  return false;
#undef DO_
}

void S2SLogoutToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLogoutToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLogoutToGameReq)
}

::google::protobuf::uint8* S2SLogoutToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLogoutToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLogoutToGameReq)
  return target;
}

size_t S2SLogoutToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLogoutToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLogoutToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLogoutToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLogoutToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLogoutToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLogoutToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLogoutToGameReq)
    MergeFrom(*source);
  }
}

void S2SLogoutToGameReq::MergeFrom(const S2SLogoutToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLogoutToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SLogoutToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLogoutToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLogoutToGameReq::CopyFrom(const S2SLogoutToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLogoutToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLogoutToGameReq::IsInitialized() const {
  return true;
}

void S2SLogoutToGameReq::Swap(S2SLogoutToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLogoutToGameReq::InternalSwap(S2SLogoutToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLogoutToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDisconnectToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDisconnectToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDisconnectToGameReq::S2SDisconnectToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SDisconnectToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDisconnectToGameReq)
}
S2SDisconnectToGameReq::S2SDisconnectToGameReq(const S2SDisconnectToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDisconnectToGameReq)
}

void S2SDisconnectToGameReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SDisconnectToGameReq::~S2SDisconnectToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDisconnectToGameReq)
  SharedDtor();
}

void S2SDisconnectToGameReq::SharedDtor() {
}

void S2SDisconnectToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDisconnectToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDisconnectToGameReq& S2SDisconnectToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SDisconnectToGameReq.base);
  return *internal_default_instance();
}


void S2SDisconnectToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDisconnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDisconnectToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDisconnectToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDisconnectToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDisconnectToGameReq)
  return false;
#undef DO_
}

void S2SDisconnectToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDisconnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDisconnectToGameReq)
}

::google::protobuf::uint8* S2SDisconnectToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDisconnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDisconnectToGameReq)
  return target;
}

size_t S2SDisconnectToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDisconnectToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDisconnectToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDisconnectToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDisconnectToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDisconnectToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDisconnectToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDisconnectToGameReq)
    MergeFrom(*source);
  }
}

void S2SDisconnectToGameReq::MergeFrom(const S2SDisconnectToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDisconnectToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SDisconnectToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDisconnectToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDisconnectToGameReq::CopyFrom(const S2SDisconnectToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDisconnectToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDisconnectToGameReq::IsInitialized() const {
  return true;
}

void S2SDisconnectToGameReq::Swap(S2SDisconnectToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDisconnectToGameReq::InternalSwap(S2SDisconnectToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDisconnectToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLeaveToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLeaveToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLeaveToGameReq::S2SLeaveToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLeaveToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLeaveToGameReq)
}
S2SLeaveToGameReq::S2SLeaveToGameReq(const S2SLeaveToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLeaveToGameReq)
}

void S2SLeaveToGameReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SLeaveToGameReq::~S2SLeaveToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLeaveToGameReq)
  SharedDtor();
}

void S2SLeaveToGameReq::SharedDtor() {
}

void S2SLeaveToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLeaveToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLeaveToGameReq& S2SLeaveToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLeaveToGameReq.base);
  return *internal_default_instance();
}


void S2SLeaveToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLeaveToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SLeaveToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLeaveToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLeaveToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLeaveToGameReq)
  return false;
#undef DO_
}

void S2SLeaveToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLeaveToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLeaveToGameReq)
}

::google::protobuf::uint8* S2SLeaveToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLeaveToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLeaveToGameReq)
  return target;
}

size_t S2SLeaveToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLeaveToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLeaveToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLeaveToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLeaveToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLeaveToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLeaveToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLeaveToGameReq)
    MergeFrom(*source);
  }
}

void S2SLeaveToGameReq::MergeFrom(const S2SLeaveToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLeaveToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SLeaveToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLeaveToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLeaveToGameReq::CopyFrom(const S2SLeaveToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLeaveToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLeaveToGameReq::IsInitialized() const {
  return true;
}

void S2SLeaveToGameReq::Swap(S2SLeaveToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLeaveToGameReq::InternalSwap(S2SLeaveToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLeaveToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SConnectToGameReq::InitAsDefaultInstance() {
}
void S2SConnectToGameReq::clear_pblogin() {
  pblogin_.Clear();
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SConnectToGameReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SConnectToGameReq::S2SConnectToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SConnectToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SConnectToGameReq)
}
S2SConnectToGameReq::S2SConnectToGameReq(const S2SConnectToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pblogin_(from.pblogin_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SConnectToGameReq)
}

void S2SConnectToGameReq::SharedCtor() {
}

S2SConnectToGameReq::~S2SConnectToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SConnectToGameReq)
  SharedDtor();
}

void S2SConnectToGameReq::SharedDtor() {
}

void S2SConnectToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SConnectToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SConnectToGameReq& S2SConnectToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SConnectToGameReq.base);
  return *internal_default_instance();
}


void S2SConnectToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SConnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pblogin_.Clear();
  _internal_metadata_.Clear();
}

bool S2SConnectToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SConnectToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SConnectToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SConnectToGameReq)
  return false;
#undef DO_
}

void S2SConnectToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SConnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBLoginData pblogin = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pblogin_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1,
      this->pblogin(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SConnectToGameReq)
}

::google::protobuf::uint8* S2SConnectToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SConnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .KFMsg.PBLoginData pblogin = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pblogin_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->pblogin(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SConnectToGameReq)
  return target;
}

size_t S2SConnectToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SConnectToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBLoginData pblogin = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->pblogin_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pblogin(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SConnectToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SConnectToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SConnectToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SConnectToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SConnectToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SConnectToGameReq)
    MergeFrom(*source);
  }
}

void S2SConnectToGameReq::MergeFrom(const S2SConnectToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SConnectToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pblogin_.MergeFrom(from.pblogin_);
}

void S2SConnectToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SConnectToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SConnectToGameReq::CopyFrom(const S2SConnectToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SConnectToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SConnectToGameReq::IsInitialized() const {
  return true;
}

void S2SConnectToGameReq::Swap(S2SConnectToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SConnectToGameReq::InternalSwap(S2SConnectToGameReq* other) {
  using std::swap;
  CastToBase(&pblogin_)->InternalSwap(CastToBase(&other->pblogin_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SConnectToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SReLoginToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SReLoginToGameReq::kTokenFieldNumber;
const int S2SReLoginToGameReq::kPlayeridFieldNumber;
const int S2SReLoginToGameReq::kSessionidFieldNumber;
const int S2SReLoginToGameReq::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SReLoginToGameReq::S2SReLoginToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SReLoginToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SReLoginToGameReq)
}
S2SReLoginToGameReq::S2SReLoginToGameReq(const S2SReLoginToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SReLoginToGameReq)
}

void S2SReLoginToGameReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SReLoginToGameReq::~S2SReLoginToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SReLoginToGameReq)
  SharedDtor();
}

void S2SReLoginToGameReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SReLoginToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SReLoginToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SReLoginToGameReq& S2SReLoginToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SReLoginToGameReq.base);
  return *internal_default_instance();
}


void S2SReLoginToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SReLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SReLoginToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SReLoginToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SReLoginToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SReLoginToGameReq)
  return false;
#undef DO_
}

void S2SReLoginToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SReLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SReLoginToGameReq)
}

::google::protobuf::uint8* S2SReLoginToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SReLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SReLoginToGameReq)
  return target;
}

size_t S2SReLoginToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SReLoginToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SReLoginToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SReLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SReLoginToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SReLoginToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SReLoginToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SReLoginToGameReq)
    MergeFrom(*source);
  }
}

void S2SReLoginToGameReq::MergeFrom(const S2SReLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SReLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SReLoginToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SReLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SReLoginToGameReq::CopyFrom(const S2SReLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SReLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SReLoginToGameReq::IsInitialized() const {
  return true;
}

void S2SReLoginToGameReq::Swap(S2SReLoginToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SReLoginToGameReq::InternalSwap(S2SReLoginToGameReq* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(sessionid_, other->sessionid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SReLoginToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SReLoginToGateAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SReLoginToGateAck::kTokenFieldNumber;
const int S2SReLoginToGateAck::kPlayeridFieldNumber;
const int S2SReLoginToGateAck::kSessionidFieldNumber;
const int S2SReLoginToGateAck::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SReLoginToGateAck::S2SReLoginToGateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SReLoginToGateAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SReLoginToGateAck)
}
S2SReLoginToGateAck::S2SReLoginToGateAck(const S2SReLoginToGateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SReLoginToGateAck)
}

void S2SReLoginToGateAck::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SReLoginToGateAck::~S2SReLoginToGateAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SReLoginToGateAck)
  SharedDtor();
}

void S2SReLoginToGateAck::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SReLoginToGateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SReLoginToGateAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SReLoginToGateAck& S2SReLoginToGateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SReLoginToGateAck.base);
  return *internal_default_instance();
}


void S2SReLoginToGateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SReLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SReLoginToGateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SReLoginToGateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SReLoginToGateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SReLoginToGateAck)
  return false;
#undef DO_
}

void S2SReLoginToGateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SReLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SReLoginToGateAck)
}

::google::protobuf::uint8* S2SReLoginToGateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SReLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SReLoginToGateAck)
  return target;
}

size_t S2SReLoginToGateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SReLoginToGateAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SReLoginToGateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SReLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SReLoginToGateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SReLoginToGateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SReLoginToGateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SReLoginToGateAck)
    MergeFrom(*source);
  }
}

void S2SReLoginToGateAck::MergeFrom(const S2SReLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SReLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SReLoginToGateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SReLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SReLoginToGateAck::CopyFrom(const S2SReLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SReLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SReLoginToGateAck::IsInitialized() const {
  return true;
}

void S2SReLoginToGateAck::Swap(S2SReLoginToGateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SReLoginToGateAck::InternalSwap(S2SReLoginToGateAck* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(sessionid_, other->sessionid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SReLoginToGateAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoadPlayerToDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoadPlayerToDataReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
void S2SLoadPlayerToDataReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoadPlayerToDataReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoadPlayerToDataReq::S2SLoadPlayerToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoadPlayerToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoadPlayerToDataReq)
}
S2SLoadPlayerToDataReq::S2SLoadPlayerToDataReq(const S2SLoadPlayerToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoadPlayerToDataReq)
}

void S2SLoadPlayerToDataReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoadPlayerToDataReq::~S2SLoadPlayerToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoadPlayerToDataReq)
  SharedDtor();
}

void S2SLoadPlayerToDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoadPlayerToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoadPlayerToDataReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoadPlayerToDataReq& S2SLoadPlayerToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoadPlayerToDataReq.base);
  return *internal_default_instance();
}


void S2SLoadPlayerToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoadPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoadPlayerToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoadPlayerToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoadPlayerToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoadPlayerToDataReq)
  return false;
#undef DO_
}

void S2SLoadPlayerToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoadPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoadPlayerToDataReq)
}

::google::protobuf::uint8* S2SLoadPlayerToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoadPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoadPlayerToDataReq)
  return target;
}

size_t S2SLoadPlayerToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoadPlayerToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoadPlayerToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoadPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoadPlayerToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoadPlayerToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoadPlayerToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoadPlayerToDataReq)
    MergeFrom(*source);
  }
}

void S2SLoadPlayerToDataReq::MergeFrom(const S2SLoadPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoadPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoadPlayerToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoadPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoadPlayerToDataReq::CopyFrom(const S2SLoadPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoadPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoadPlayerToDataReq::IsInitialized() const {
  return true;
}

void S2SLoadPlayerToDataReq::Swap(S2SLoadPlayerToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoadPlayerToDataReq::InternalSwap(S2SLoadPlayerToDataReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoadPlayerToDataReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoadPlayerToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoadPlayerToGameAck_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
  ::KFMsg::_S2SLoadPlayerToGameAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SLoadPlayerToGameAck::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
void S2SLoadPlayerToGameAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoadPlayerToGameAck::kResultFieldNumber;
const int S2SLoadPlayerToGameAck::kPbloginFieldNumber;
const int S2SLoadPlayerToGameAck::kPlayerdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoadPlayerToGameAck::S2SLoadPlayerToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoadPlayerToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoadPlayerToGameAck)
}
S2SLoadPlayerToGameAck::S2SLoadPlayerToGameAck(const S2SLoadPlayerToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoadPlayerToGameAck)
}

void S2SLoadPlayerToGameAck::SharedCtor() {
  ::memset(&pblogin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&pblogin_)) + sizeof(result_));
}

S2SLoadPlayerToGameAck::~S2SLoadPlayerToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoadPlayerToGameAck)
  SharedDtor();
}

void S2SLoadPlayerToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SLoadPlayerToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoadPlayerToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoadPlayerToGameAck& S2SLoadPlayerToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoadPlayerToGameAck.base);
  return *internal_default_instance();
}


void S2SLoadPlayerToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoadPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  result_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SLoadPlayerToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoadPlayerToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBLoginData pblogin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoadPlayerToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoadPlayerToGameAck)
  return false;
#undef DO_
}

void S2SLoadPlayerToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoadPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // .KFMsg.PBLoginData pblogin = 2;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pblogin(), output);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_playerdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoadPlayerToGameAck)
}

::google::protobuf::uint8* S2SLoadPlayerToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoadPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // .KFMsg.PBLoginData pblogin = 2;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pblogin(), deterministic, target);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_playerdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoadPlayerToGameAck)
  return target;
}

size_t S2SLoadPlayerToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoadPlayerToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 2;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoadPlayerToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoadPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoadPlayerToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoadPlayerToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoadPlayerToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoadPlayerToGameAck)
    MergeFrom(*source);
  }
}

void S2SLoadPlayerToGameAck::MergeFrom(const S2SLoadPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoadPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoadPlayerToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoadPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoadPlayerToGameAck::CopyFrom(const S2SLoadPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoadPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoadPlayerToGameAck::IsInitialized() const {
  return true;
}

void S2SLoadPlayerToGameAck::Swap(S2SLoadPlayerToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoadPlayerToGameAck::InternalSwap(S2SLoadPlayerToGameAck* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  swap(playerdata_, other->playerdata_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoadPlayerToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSavePlayerToDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SSavePlayerToDataReq_default_instance_._instance.get_mutable()->data_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SSavePlayerToDataReq::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSavePlayerToDataReq::kIdFieldNumber;
const int S2SSavePlayerToDataReq::kZoneidFieldNumber;
const int S2SSavePlayerToDataReq::kFlagFieldNumber;
const int S2SSavePlayerToDataReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSavePlayerToDataReq::S2SSavePlayerToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSavePlayerToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSavePlayerToDataReq)
}
S2SSavePlayerToDataReq::S2SSavePlayerToDataReq(const S2SSavePlayerToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::KFMsg::PBObject(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&id_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSavePlayerToDataReq)
}

void S2SSavePlayerToDataReq::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&data_)) + sizeof(flag_));
}

S2SSavePlayerToDataReq::~S2SSavePlayerToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSavePlayerToDataReq)
  SharedDtor();
}

void S2SSavePlayerToDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void S2SSavePlayerToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSavePlayerToDataReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSavePlayerToDataReq& S2SSavePlayerToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSavePlayerToDataReq.base);
  return *internal_default_instance();
}


void S2SSavePlayerToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSavePlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&id_)) + sizeof(flag_));
  _internal_metadata_.Clear();
}

bool S2SSavePlayerToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSavePlayerToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject data = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSavePlayerToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSavePlayerToDataReq)
  return false;
#undef DO_
}

void S2SSavePlayerToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSavePlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flag(), output);
  }

  // .KFMsg.PBObject data = 4;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSavePlayerToDataReq)
}

::google::protobuf::uint8* S2SSavePlayerToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSavePlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flag(), target);
  }

  // .KFMsg.PBObject data = 4;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSavePlayerToDataReq)
  return target;
}

size_t S2SSavePlayerToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSavePlayerToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject data = 4;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSavePlayerToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSavePlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSavePlayerToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSavePlayerToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSavePlayerToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSavePlayerToDataReq)
    MergeFrom(*source);
  }
}

void S2SSavePlayerToDataReq::MergeFrom(const S2SSavePlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSavePlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::KFMsg::PBObject::MergeFrom(from.data());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void S2SSavePlayerToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSavePlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSavePlayerToDataReq::CopyFrom(const S2SSavePlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSavePlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSavePlayerToDataReq::IsInitialized() const {
  return true;
}

void S2SSavePlayerToDataReq::Swap(S2SSavePlayerToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSavePlayerToDataReq::InternalSwap(S2SSavePlayerToDataReq* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(id_, other->id_);
  swap(zoneid_, other->zoneid_);
  swap(flag_, other->flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSavePlayerToDataReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSavePlayerToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSavePlayerToGameAck::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSavePlayerToGameAck::S2SSavePlayerToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSavePlayerToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSavePlayerToGameAck)
}
S2SSavePlayerToGameAck::S2SSavePlayerToGameAck(const S2SSavePlayerToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSavePlayerToGameAck)
}

void S2SSavePlayerToGameAck::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
}

S2SSavePlayerToGameAck::~S2SSavePlayerToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSavePlayerToGameAck)
  SharedDtor();
}

void S2SSavePlayerToGameAck::SharedDtor() {
}

void S2SSavePlayerToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSavePlayerToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSavePlayerToGameAck& S2SSavePlayerToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSavePlayerToGameAck.base);
  return *internal_default_instance();
}


void S2SSavePlayerToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSavePlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SSavePlayerToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSavePlayerToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSavePlayerToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSavePlayerToGameAck)
  return false;
#undef DO_
}

void S2SSavePlayerToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSavePlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSavePlayerToGameAck)
}

::google::protobuf::uint8* S2SSavePlayerToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSavePlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSavePlayerToGameAck)
  return target;
}

size_t S2SSavePlayerToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSavePlayerToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSavePlayerToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSavePlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSavePlayerToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSavePlayerToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSavePlayerToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSavePlayerToGameAck)
    MergeFrom(*source);
  }
}

void S2SSavePlayerToGameAck::MergeFrom(const S2SSavePlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSavePlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void S2SSavePlayerToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSavePlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSavePlayerToGameAck::CopyFrom(const S2SSavePlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSavePlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSavePlayerToGameAck::IsInitialized() const {
  return true;
}

void S2SSavePlayerToGameAck::Swap(S2SSavePlayerToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSavePlayerToGameAck::InternalSwap(S2SSavePlayerToGameAck* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSavePlayerToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryPlayerToDataReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryPlayerToDataReq::kPlayeridFieldNumber;
const int S2SQueryPlayerToDataReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryPlayerToDataReq::S2SQueryPlayerToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryPlayerToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryPlayerToDataReq)
}
S2SQueryPlayerToDataReq::S2SQueryPlayerToDataReq(const S2SQueryPlayerToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryPlayerToDataReq)
}

void S2SQueryPlayerToDataReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SQueryPlayerToDataReq::~S2SQueryPlayerToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryPlayerToDataReq)
  SharedDtor();
}

void S2SQueryPlayerToDataReq::SharedDtor() {
}

void S2SQueryPlayerToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryPlayerToDataReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryPlayerToDataReq& S2SQueryPlayerToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryPlayerToDataReq.base);
  return *internal_default_instance();
}


void S2SQueryPlayerToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SQueryPlayerToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryPlayerToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryPlayerToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryPlayerToDataReq)
  return false;
#undef DO_
}

void S2SQueryPlayerToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryPlayerToDataReq)
}

::google::protobuf::uint8* S2SQueryPlayerToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryPlayerToDataReq)
  return target;
}

size_t S2SQueryPlayerToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryPlayerToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryPlayerToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryPlayerToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryPlayerToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryPlayerToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryPlayerToDataReq)
    MergeFrom(*source);
  }
}

void S2SQueryPlayerToDataReq::MergeFrom(const S2SQueryPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SQueryPlayerToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryPlayerToDataReq::CopyFrom(const S2SQueryPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryPlayerToDataReq::IsInitialized() const {
  return true;
}

void S2SQueryPlayerToDataReq::Swap(S2SQueryPlayerToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryPlayerToDataReq::InternalSwap(S2SQueryPlayerToDataReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryPlayerToDataReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryPlayerToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SQueryPlayerToGameAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SQueryPlayerToGameAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryPlayerToGameAck::kResultFieldNumber;
const int S2SQueryPlayerToGameAck::kPlayerdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryPlayerToGameAck::S2SQueryPlayerToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryPlayerToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryPlayerToGameAck)
}
S2SQueryPlayerToGameAck::S2SQueryPlayerToGameAck(const S2SQueryPlayerToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryPlayerToGameAck)
}

void S2SQueryPlayerToGameAck::SharedCtor() {
  ::memset(&playerdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerdata_)) + sizeof(result_));
}

S2SQueryPlayerToGameAck::~S2SQueryPlayerToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryPlayerToGameAck)
  SharedDtor();
}

void S2SQueryPlayerToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SQueryPlayerToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryPlayerToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryPlayerToGameAck& S2SQueryPlayerToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryPlayerToGameAck.base);
  return *internal_default_instance();
}


void S2SQueryPlayerToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  result_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SQueryPlayerToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryPlayerToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryPlayerToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryPlayerToGameAck)
  return false;
#undef DO_
}

void S2SQueryPlayerToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_playerdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryPlayerToGameAck)
}

::google::protobuf::uint8* S2SQueryPlayerToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_playerdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryPlayerToGameAck)
  return target;
}

size_t S2SQueryPlayerToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryPlayerToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryPlayerToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryPlayerToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryPlayerToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryPlayerToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryPlayerToGameAck)
    MergeFrom(*source);
  }
}

void S2SQueryPlayerToGameAck::MergeFrom(const S2SQueryPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SQueryPlayerToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryPlayerToGameAck::CopyFrom(const S2SQueryPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryPlayerToGameAck::IsInitialized() const {
  return true;
}

void S2SQueryPlayerToGameAck::Swap(S2SQueryPlayerToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryPlayerToGameAck::InternalSwap(S2SQueryPlayerToGameAck* other) {
  using std::swap;
  swap(playerdata_, other->playerdata_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryPlayerToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSyncUpdateDataFromServer::InitAsDefaultInstance() {
  ::KFMsg::_S2SSyncUpdateDataFromServer_default_instance_._instance.get_mutable()->pbdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SSyncUpdateDataFromServer::clear_pbdata() {
  if (GetArenaNoVirtual() == NULL && pbdata_ != NULL) {
    delete pbdata_;
  }
  pbdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSyncUpdateDataFromServer::kDataNameFieldNumber;
const int S2SSyncUpdateDataFromServer::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSyncUpdateDataFromServer::S2SSyncUpdateDataFromServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSyncUpdateDataFromServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSyncUpdateDataFromServer)
}
S2SSyncUpdateDataFromServer::S2SSyncUpdateDataFromServer(const S2SSyncUpdateDataFromServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_name().size() > 0) {
    data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
  }
  if (from.has_pbdata()) {
    pbdata_ = new ::KFMsg::PBObject(*from.pbdata_);
  } else {
    pbdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSyncUpdateDataFromServer)
}

void S2SSyncUpdateDataFromServer::SharedCtor() {
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbdata_ = NULL;
}

S2SSyncUpdateDataFromServer::~S2SSyncUpdateDataFromServer() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSyncUpdateDataFromServer)
  SharedDtor();
}

void S2SSyncUpdateDataFromServer::SharedDtor() {
  data_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbdata_;
}

void S2SSyncUpdateDataFromServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSyncUpdateDataFromServer::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSyncUpdateDataFromServer& S2SSyncUpdateDataFromServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSyncUpdateDataFromServer.base);
  return *internal_default_instance();
}


void S2SSyncUpdateDataFromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSyncUpdateDataFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbdata_ != NULL) {
    delete pbdata_;
  }
  pbdata_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SSyncUpdateDataFromServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSyncUpdateDataFromServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSyncUpdateDataFromServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSyncUpdateDataFromServer)
  return false;
#undef DO_
}

void S2SSyncUpdateDataFromServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSyncUpdateDataFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_name = 1;
  if (this->data_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data_name(), output);
  }

  // .KFMsg.PBObject pbdata = 2;
  if (this->has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSyncUpdateDataFromServer)
}

::google::protobuf::uint8* S2SSyncUpdateDataFromServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSyncUpdateDataFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_name = 1;
  if (this->data_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data_name(), target);
  }

  // .KFMsg.PBObject pbdata = 2;
  if (this->has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSyncUpdateDataFromServer)
  return target;
}

size_t S2SSyncUpdateDataFromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSyncUpdateDataFromServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data_name = 1;
  if (this->data_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_name());
  }

  // .KFMsg.PBObject pbdata = 2;
  if (this->has_pbdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSyncUpdateDataFromServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSyncUpdateDataFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSyncUpdateDataFromServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSyncUpdateDataFromServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSyncUpdateDataFromServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSyncUpdateDataFromServer)
    MergeFrom(*source);
  }
}

void S2SSyncUpdateDataFromServer::MergeFrom(const S2SSyncUpdateDataFromServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSyncUpdateDataFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_name().size() > 0) {

    data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
  }
  if (from.has_pbdata()) {
    mutable_pbdata()->::KFMsg::PBObject::MergeFrom(from.pbdata());
  }
}

void S2SSyncUpdateDataFromServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSyncUpdateDataFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSyncUpdateDataFromServer::CopyFrom(const S2SSyncUpdateDataFromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSyncUpdateDataFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSyncUpdateDataFromServer::IsInitialized() const {
  return true;
}

void S2SSyncUpdateDataFromServer::Swap(S2SSyncUpdateDataFromServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSyncUpdateDataFromServer::InternalSwap(S2SSyncUpdateDataFromServer* other) {
  using std::swap;
  data_name_.Swap(&other->data_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbdata_, other->pbdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSyncUpdateDataFromServer::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSyncAddDataFromServer::InitAsDefaultInstance() {
  ::KFMsg::_S2SSyncAddDataFromServer_default_instance_._instance.get_mutable()->pbdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SSyncAddDataFromServer::clear_pbdata() {
  if (GetArenaNoVirtual() == NULL && pbdata_ != NULL) {
    delete pbdata_;
  }
  pbdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSyncAddDataFromServer::kDataNameFieldNumber;
const int S2SSyncAddDataFromServer::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSyncAddDataFromServer::S2SSyncAddDataFromServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSyncAddDataFromServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSyncAddDataFromServer)
}
S2SSyncAddDataFromServer::S2SSyncAddDataFromServer(const S2SSyncAddDataFromServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_name().size() > 0) {
    data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
  }
  if (from.has_pbdata()) {
    pbdata_ = new ::KFMsg::PBObject(*from.pbdata_);
  } else {
    pbdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSyncAddDataFromServer)
}

void S2SSyncAddDataFromServer::SharedCtor() {
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbdata_ = NULL;
}

S2SSyncAddDataFromServer::~S2SSyncAddDataFromServer() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSyncAddDataFromServer)
  SharedDtor();
}

void S2SSyncAddDataFromServer::SharedDtor() {
  data_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbdata_;
}

void S2SSyncAddDataFromServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSyncAddDataFromServer::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSyncAddDataFromServer& S2SSyncAddDataFromServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSyncAddDataFromServer.base);
  return *internal_default_instance();
}


void S2SSyncAddDataFromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSyncAddDataFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbdata_ != NULL) {
    delete pbdata_;
  }
  pbdata_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SSyncAddDataFromServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSyncAddDataFromServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSyncAddDataFromServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSyncAddDataFromServer)
  return false;
#undef DO_
}

void S2SSyncAddDataFromServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSyncAddDataFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_name = 1;
  if (this->data_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data_name(), output);
  }

  // .KFMsg.PBObject pbdata = 2;
  if (this->has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSyncAddDataFromServer)
}

::google::protobuf::uint8* S2SSyncAddDataFromServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSyncAddDataFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_name = 1;
  if (this->data_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data_name(), target);
  }

  // .KFMsg.PBObject pbdata = 2;
  if (this->has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSyncAddDataFromServer)
  return target;
}

size_t S2SSyncAddDataFromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSyncAddDataFromServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data_name = 1;
  if (this->data_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_name());
  }

  // .KFMsg.PBObject pbdata = 2;
  if (this->has_pbdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSyncAddDataFromServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSyncAddDataFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSyncAddDataFromServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSyncAddDataFromServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSyncAddDataFromServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSyncAddDataFromServer)
    MergeFrom(*source);
  }
}

void S2SSyncAddDataFromServer::MergeFrom(const S2SSyncAddDataFromServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSyncAddDataFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_name().size() > 0) {

    data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
  }
  if (from.has_pbdata()) {
    mutable_pbdata()->::KFMsg::PBObject::MergeFrom(from.pbdata());
  }
}

void S2SSyncAddDataFromServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSyncAddDataFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSyncAddDataFromServer::CopyFrom(const S2SSyncAddDataFromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSyncAddDataFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSyncAddDataFromServer::IsInitialized() const {
  return true;
}

void S2SSyncAddDataFromServer::Swap(S2SSyncAddDataFromServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSyncAddDataFromServer::InternalSwap(S2SSyncAddDataFromServer* other) {
  using std::swap;
  data_name_.Swap(&other->data_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbdata_, other->pbdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSyncAddDataFromServer::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSyncRemoveDataFromServer::InitAsDefaultInstance() {
  ::KFMsg::_S2SSyncRemoveDataFromServer_default_instance_._instance.get_mutable()->pbdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SSyncRemoveDataFromServer::clear_pbdata() {
  if (GetArenaNoVirtual() == NULL && pbdata_ != NULL) {
    delete pbdata_;
  }
  pbdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSyncRemoveDataFromServer::kDataNameFieldNumber;
const int S2SSyncRemoveDataFromServer::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSyncRemoveDataFromServer::S2SSyncRemoveDataFromServer()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSyncRemoveDataFromServer.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSyncRemoveDataFromServer)
}
S2SSyncRemoveDataFromServer::S2SSyncRemoveDataFromServer(const S2SSyncRemoveDataFromServer& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.data_name().size() > 0) {
    data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
  }
  if (from.has_pbdata()) {
    pbdata_ = new ::KFMsg::PBObject(*from.pbdata_);
  } else {
    pbdata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSyncRemoveDataFromServer)
}

void S2SSyncRemoveDataFromServer::SharedCtor() {
  data_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  pbdata_ = NULL;
}

S2SSyncRemoveDataFromServer::~S2SSyncRemoveDataFromServer() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSyncRemoveDataFromServer)
  SharedDtor();
}

void S2SSyncRemoveDataFromServer::SharedDtor() {
  data_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbdata_;
}

void S2SSyncRemoveDataFromServer::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSyncRemoveDataFromServer::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSyncRemoveDataFromServer& S2SSyncRemoveDataFromServer::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSyncRemoveDataFromServer.base);
  return *internal_default_instance();
}


void S2SSyncRemoveDataFromServer::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSyncRemoveDataFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbdata_ != NULL) {
    delete pbdata_;
  }
  pbdata_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SSyncRemoveDataFromServer::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSyncRemoveDataFromServer)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes data_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSyncRemoveDataFromServer)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSyncRemoveDataFromServer)
  return false;
#undef DO_
}

void S2SSyncRemoveDataFromServer::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSyncRemoveDataFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_name = 1;
  if (this->data_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->data_name(), output);
  }

  // .KFMsg.PBObject pbdata = 2;
  if (this->has_pbdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSyncRemoveDataFromServer)
}

::google::protobuf::uint8* S2SSyncRemoveDataFromServer::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSyncRemoveDataFromServer)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes data_name = 1;
  if (this->data_name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data_name(), target);
  }

  // .KFMsg.PBObject pbdata = 2;
  if (this->has_pbdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSyncRemoveDataFromServer)
  return target;
}

size_t S2SSyncRemoveDataFromServer::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSyncRemoveDataFromServer)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes data_name = 1;
  if (this->data_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->data_name());
  }

  // .KFMsg.PBObject pbdata = 2;
  if (this->has_pbdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbdata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSyncRemoveDataFromServer::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSyncRemoveDataFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSyncRemoveDataFromServer* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSyncRemoveDataFromServer>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSyncRemoveDataFromServer)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSyncRemoveDataFromServer)
    MergeFrom(*source);
  }
}

void S2SSyncRemoveDataFromServer::MergeFrom(const S2SSyncRemoveDataFromServer& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSyncRemoveDataFromServer)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.data_name().size() > 0) {

    data_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_name_);
  }
  if (from.has_pbdata()) {
    mutable_pbdata()->::KFMsg::PBObject::MergeFrom(from.pbdata());
  }
}

void S2SSyncRemoveDataFromServer::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSyncRemoveDataFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSyncRemoveDataFromServer::CopyFrom(const S2SSyncRemoveDataFromServer& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSyncRemoveDataFromServer)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSyncRemoveDataFromServer::IsInitialized() const {
  return true;
}

void S2SSyncRemoveDataFromServer::Swap(S2SSyncRemoveDataFromServer* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSyncRemoveDataFromServer::InternalSwap(S2SSyncRemoveDataFromServer* other) {
  using std::swap;
  data_name_.Swap(&other->data_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbdata_, other->pbdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSyncRemoveDataFromServer::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerEnterToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerEnterToWorldReq::kPlayeridFieldNumber;
const int S2SPlayerEnterToWorldReq::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerEnterToWorldReq::S2SPlayerEnterToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SPlayerEnterToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerEnterToWorldReq)
}
S2SPlayerEnterToWorldReq::S2SPlayerEnterToWorldReq(const S2SPlayerEnterToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerEnterToWorldReq)
}

void S2SPlayerEnterToWorldReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SPlayerEnterToWorldReq::~S2SPlayerEnterToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerEnterToWorldReq)
  SharedDtor();
}

void S2SPlayerEnterToWorldReq::SharedDtor() {
}

void S2SPlayerEnterToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerEnterToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerEnterToWorldReq& S2SPlayerEnterToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SPlayerEnterToWorldReq.base);
  return *internal_default_instance();
}


void S2SPlayerEnterToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerEnterToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerEnterToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerEnterToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerEnterToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerEnterToWorldReq)
  return false;
#undef DO_
}

void S2SPlayerEnterToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerEnterToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerEnterToWorldReq)
}

::google::protobuf::uint8* S2SPlayerEnterToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerEnterToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerEnterToWorldReq)
  return target;
}

size_t S2SPlayerEnterToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerEnterToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerEnterToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerEnterToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerEnterToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerEnterToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerEnterToWorldReq)
    MergeFrom(*source);
  }
}

void S2SPlayerEnterToWorldReq::MergeFrom(const S2SPlayerEnterToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SPlayerEnterToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerEnterToWorldReq::CopyFrom(const S2SPlayerEnterToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerEnterToWorldReq::IsInitialized() const {
  return true;
}

void S2SPlayerEnterToWorldReq::Swap(S2SPlayerEnterToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerEnterToWorldReq::InternalSwap(S2SPlayerEnterToWorldReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerEnterToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLeaveToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLeaveToWorldReq::kPlayeridFieldNumber;
const int S2SPlayerLeaveToWorldReq::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLeaveToWorldReq::S2SPlayerLeaveToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SPlayerLeaveToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLeaveToWorldReq)
}
S2SPlayerLeaveToWorldReq::S2SPlayerLeaveToWorldReq(const S2SPlayerLeaveToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLeaveToWorldReq)
}

void S2SPlayerLeaveToWorldReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SPlayerLeaveToWorldReq::~S2SPlayerLeaveToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLeaveToWorldReq)
  SharedDtor();
}

void S2SPlayerLeaveToWorldReq::SharedDtor() {
}

void S2SPlayerLeaveToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLeaveToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLeaveToWorldReq& S2SPlayerLeaveToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SPlayerLeaveToWorldReq.base);
  return *internal_default_instance();
}


void S2SPlayerLeaveToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLeaveToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SPlayerLeaveToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLeaveToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLeaveToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLeaveToWorldReq)
  return false;
#undef DO_
}

void S2SPlayerLeaveToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLeaveToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLeaveToWorldReq)
}

::google::protobuf::uint8* S2SPlayerLeaveToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLeaveToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLeaveToWorldReq)
  return target;
}

size_t S2SPlayerLeaveToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLeaveToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLeaveToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLeaveToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLeaveToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLeaveToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLeaveToWorldReq)
    MergeFrom(*source);
  }
}

void S2SPlayerLeaveToWorldReq::MergeFrom(const S2SPlayerLeaveToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SPlayerLeaveToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLeaveToWorldReq::CopyFrom(const S2SPlayerLeaveToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLeaveToWorldReq::IsInitialized() const {
  return true;
}

void S2SPlayerLeaveToWorldReq::Swap(S2SPlayerLeaveToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLeaveToWorldReq::InternalSwap(S2SPlayerLeaveToWorldReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLeaveToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickPlayerToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickPlayerToGameReq::kTypeFieldNumber;
const int S2SKickPlayerToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickPlayerToGameReq::S2SKickPlayerToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickPlayerToGameReq)
}
S2SKickPlayerToGameReq::S2SKickPlayerToGameReq(const S2SKickPlayerToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickPlayerToGameReq)
}

void S2SKickPlayerToGameReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

S2SKickPlayerToGameReq::~S2SKickPlayerToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickPlayerToGameReq)
  SharedDtor();
}

void S2SKickPlayerToGameReq::SharedDtor() {
}

void S2SKickPlayerToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickPlayerToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickPlayerToGameReq& S2SKickPlayerToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToGameReq.base);
  return *internal_default_instance();
}


void S2SKickPlayerToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickPlayerToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SKickPlayerToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickPlayerToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickPlayerToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickPlayerToGameReq)
  return false;
#undef DO_
}

void S2SKickPlayerToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickPlayerToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickPlayerToGameReq)
}

::google::protobuf::uint8* S2SKickPlayerToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickPlayerToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickPlayerToGameReq)
  return target;
}

size_t S2SKickPlayerToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickPlayerToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickPlayerToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickPlayerToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickPlayerToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickPlayerToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickPlayerToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickPlayerToGameReq)
    MergeFrom(*source);
  }
}

void S2SKickPlayerToGameReq::MergeFrom(const S2SKickPlayerToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickPlayerToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SKickPlayerToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickPlayerToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickPlayerToGameReq::CopyFrom(const S2SKickPlayerToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickPlayerToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickPlayerToGameReq::IsInitialized() const {
  return true;
}

void S2SKickPlayerToGameReq::Swap(S2SKickPlayerToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickPlayerToGameReq::InternalSwap(S2SKickPlayerToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickPlayerToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickPlayerToGateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickPlayerToGateReq::kTypeFieldNumber;
const int S2SKickPlayerToGateReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickPlayerToGateReq::S2SKickPlayerToGateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToGateReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickPlayerToGateReq)
}
S2SKickPlayerToGateReq::S2SKickPlayerToGateReq(const S2SKickPlayerToGateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickPlayerToGateReq)
}

void S2SKickPlayerToGateReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

S2SKickPlayerToGateReq::~S2SKickPlayerToGateReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickPlayerToGateReq)
  SharedDtor();
}

void S2SKickPlayerToGateReq::SharedDtor() {
}

void S2SKickPlayerToGateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickPlayerToGateReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickPlayerToGateReq& S2SKickPlayerToGateReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToGateReq.base);
  return *internal_default_instance();
}


void S2SKickPlayerToGateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickPlayerToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SKickPlayerToGateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickPlayerToGateReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickPlayerToGateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickPlayerToGateReq)
  return false;
#undef DO_
}

void S2SKickPlayerToGateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickPlayerToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickPlayerToGateReq)
}

::google::protobuf::uint8* S2SKickPlayerToGateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickPlayerToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickPlayerToGateReq)
  return target;
}

size_t S2SKickPlayerToGateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickPlayerToGateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickPlayerToGateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickPlayerToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickPlayerToGateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickPlayerToGateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickPlayerToGateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickPlayerToGateReq)
    MergeFrom(*source);
  }
}

void S2SKickPlayerToGateReq::MergeFrom(const S2SKickPlayerToGateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickPlayerToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SKickPlayerToGateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickPlayerToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickPlayerToGateReq::CopyFrom(const S2SKickPlayerToGateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickPlayerToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickPlayerToGateReq::IsInitialized() const {
  return true;
}

void S2SKickPlayerToGateReq::Swap(S2SKickPlayerToGateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickPlayerToGateReq::InternalSwap(S2SKickPlayerToGateReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickPlayerToGateReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGameReq::kMsgidFieldNumber;
const int S2SBroadcastToGameReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGameReq::S2SBroadcastToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGameReq)
}
S2SBroadcastToGameReq::S2SBroadcastToGameReq(const S2SBroadcastToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGameReq)
}

void S2SBroadcastToGameReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToGameReq::~S2SBroadcastToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGameReq)
  SharedDtor();
}

void S2SBroadcastToGameReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGameReq& S2SBroadcastToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGameReq.base);
  return *internal_default_instance();
}


void S2SBroadcastToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGameReq)
  return false;
#undef DO_
}

void S2SBroadcastToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGameReq)
}

::google::protobuf::uint8* S2SBroadcastToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGameReq)
  return target;
}

size_t S2SBroadcastToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGameReq)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGameReq::MergeFrom(const S2SBroadcastToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGameReq::CopyFrom(const S2SBroadcastToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGameReq::IsInitialized() const {
  return true;
}

void S2SBroadcastToGameReq::Swap(S2SBroadcastToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGameReq::InternalSwap(S2SBroadcastToGameReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGameAck::kMsgidFieldNumber;
const int S2SBroadcastToGameAck::kMsgdataFieldNumber;
const int S2SBroadcastToGameAck::kSerialFieldNumber;
const int S2SBroadcastToGameAck::kWorldidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGameAck::S2SBroadcastToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGameAck)
}
S2SBroadcastToGameAck::S2SBroadcastToGameAck(const S2SBroadcastToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&worldid_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGameAck)
}

void S2SBroadcastToGameAck::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
}

S2SBroadcastToGameAck::~S2SBroadcastToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGameAck)
  SharedDtor();
}

void S2SBroadcastToGameAck::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGameAck& S2SBroadcastToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGameAck.base);
  return *internal_default_instance();
}


void S2SBroadcastToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 worldid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGameAck)
  return false;
#undef DO_
}

void S2SBroadcastToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->worldid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGameAck)
}

::google::protobuf::uint8* S2SBroadcastToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->worldid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGameAck)
  return target;
}

size_t S2SBroadcastToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->worldid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGameAck)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGameAck::MergeFrom(const S2SBroadcastToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  if (from.worldid() != 0) {
    set_worldid(from.worldid());
  }
}

void S2SBroadcastToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGameAck::CopyFrom(const S2SBroadcastToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGameAck::IsInitialized() const {
  return true;
}

void S2SBroadcastToGameAck::Swap(S2SBroadcastToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGameAck::InternalSwap(S2SBroadcastToGameAck* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  swap(serial_, other->serial_);
  swap(worldid_, other->worldid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGateReq::kMsgidFieldNumber;
const int S2SBroadcastToGateReq::kMsgdataFieldNumber;
const int S2SBroadcastToGateReq::kSerialFieldNumber;
const int S2SBroadcastToGateReq::kWorldidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGateReq::S2SBroadcastToGateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGateReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGateReq)
}
S2SBroadcastToGateReq::S2SBroadcastToGateReq(const S2SBroadcastToGateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&worldid_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGateReq)
}

void S2SBroadcastToGateReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
}

S2SBroadcastToGateReq::~S2SBroadcastToGateReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGateReq)
  SharedDtor();
}

void S2SBroadcastToGateReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGateReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGateReq& S2SBroadcastToGateReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGateReq.base);
  return *internal_default_instance();
}


void S2SBroadcastToGateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGateReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 worldid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGateReq)
  return false;
#undef DO_
}

void S2SBroadcastToGateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->worldid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGateReq)
}

::google::protobuf::uint8* S2SBroadcastToGateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->worldid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGateReq)
  return target;
}

size_t S2SBroadcastToGateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->worldid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGateReq)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGateReq::MergeFrom(const S2SBroadcastToGateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  if (from.worldid() != 0) {
    set_worldid(from.worldid());
  }
}

void S2SBroadcastToGateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGateReq::CopyFrom(const S2SBroadcastToGateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGateReq::IsInitialized() const {
  return true;
}

void S2SBroadcastToGateReq::Swap(S2SBroadcastToGateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGateReq::InternalSwap(S2SBroadcastToGateReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  swap(serial_, other->serial_);
  swap(worldid_, other->worldid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGateReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToServerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToServerReq::kMsgidFieldNumber;
const int S2SBroadcastToServerReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToServerReq::S2SBroadcastToServerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToServerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToServerReq)
}
S2SBroadcastToServerReq::S2SBroadcastToServerReq(const S2SBroadcastToServerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToServerReq)
}

void S2SBroadcastToServerReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToServerReq::~S2SBroadcastToServerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToServerReq)
  SharedDtor();
}

void S2SBroadcastToServerReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToServerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToServerReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToServerReq& S2SBroadcastToServerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToServerReq.base);
  return *internal_default_instance();
}


void S2SBroadcastToServerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToServerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToServerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToServerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToServerReq)
  return false;
#undef DO_
}

void S2SBroadcastToServerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToServerReq)
}

::google::protobuf::uint8* S2SBroadcastToServerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToServerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToServerReq)
  return target;
}

size_t S2SBroadcastToServerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToServerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToServerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToServerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToServerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToServerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToServerReq)
    MergeFrom(*source);
  }
}

void S2SBroadcastToServerReq::MergeFrom(const S2SBroadcastToServerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToServerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToServerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToServerReq::CopyFrom(const S2SBroadcastToServerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToServerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToServerReq::IsInitialized() const {
  return true;
}

void S2SBroadcastToServerReq::Swap(S2SBroadcastToServerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToServerReq::InternalSwap(S2SBroadcastToServerReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToServerReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToWorldReq::kMsgidFieldNumber;
const int S2SBroadcastToWorldReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToWorldReq::S2SBroadcastToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToWorldReq)
}
S2SBroadcastToWorldReq::S2SBroadcastToWorldReq(const S2SBroadcastToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToWorldReq)
}

void S2SBroadcastToWorldReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToWorldReq::~S2SBroadcastToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToWorldReq)
  SharedDtor();
}

void S2SBroadcastToWorldReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToWorldReq& S2SBroadcastToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToWorldReq.base);
  return *internal_default_instance();
}


void S2SBroadcastToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToWorldReq)
  return false;
#undef DO_
}

void S2SBroadcastToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToWorldReq)
}

::google::protobuf::uint8* S2SBroadcastToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToWorldReq)
  return target;
}

size_t S2SBroadcastToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToWorldReq)
    MergeFrom(*source);
  }
}

void S2SBroadcastToWorldReq::MergeFrom(const S2SBroadcastToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToWorldReq::CopyFrom(const S2SBroadcastToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToWorldReq::IsInitialized() const {
  return true;
}

void S2SBroadcastToWorldReq::Swap(S2SBroadcastToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToWorldReq::InternalSwap(S2SBroadcastToWorldReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToWorldAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToWorldAck::kMsgidFieldNumber;
const int S2SBroadcastToWorldAck::kMsgdataFieldNumber;
const int S2SBroadcastToWorldAck::kSerialFieldNumber;
const int S2SBroadcastToWorldAck::kWorldidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToWorldAck::S2SBroadcastToWorldAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToWorldAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToWorldAck)
}
S2SBroadcastToWorldAck::S2SBroadcastToWorldAck(const S2SBroadcastToWorldAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&worldid_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToWorldAck)
}

void S2SBroadcastToWorldAck::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
}

S2SBroadcastToWorldAck::~S2SBroadcastToWorldAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToWorldAck)
  SharedDtor();
}

void S2SBroadcastToWorldAck::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToWorldAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToWorldAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToWorldAck& S2SBroadcastToWorldAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToWorldAck.base);
  return *internal_default_instance();
}


void S2SBroadcastToWorldAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToWorldAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  _internal_metadata_.Clear();
}

bool S2SBroadcastToWorldAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToWorldAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 worldid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToWorldAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToWorldAck)
  return false;
#undef DO_
}

void S2SBroadcastToWorldAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToWorldAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->worldid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToWorldAck)
}

::google::protobuf::uint8* S2SBroadcastToWorldAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToWorldAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->worldid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToWorldAck)
  return target;
}

size_t S2SBroadcastToWorldAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToWorldAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->worldid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToWorldAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToWorldAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToWorldAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToWorldAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToWorldAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToWorldAck)
    MergeFrom(*source);
  }
}

void S2SBroadcastToWorldAck::MergeFrom(const S2SBroadcastToWorldAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToWorldAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  if (from.worldid() != 0) {
    set_worldid(from.worldid());
  }
}

void S2SBroadcastToWorldAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToWorldAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToWorldAck::CopyFrom(const S2SBroadcastToWorldAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToWorldAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToWorldAck::IsInitialized() const {
  return true;
}

void S2SBroadcastToWorldAck::Swap(S2SBroadcastToWorldAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToWorldAck::InternalSwap(S2SBroadcastToWorldAck* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  swap(serial_, other->serial_);
  swap(worldid_, other->worldid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToWorldAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBMail_DataEntry_DoNotUse::PBMail_DataEntry_DoNotUse() {}
PBMail_DataEntry_DoNotUse::PBMail_DataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBMail_DataEntry_DoNotUse::MergeFrom(const PBMail_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBMail_DataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[33];
}
void PBMail_DataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBMail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMail::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMail::PBMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_PBMail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBMail)
}
PBMail::PBMail(const PBMail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBMail)
}

void PBMail::SharedCtor() {
}

PBMail::~PBMail() {
  // @@protoc_insertion_point(destructor:KFMsg.PBMail)
  SharedDtor();
}

void PBMail::SharedDtor() {
}

void PBMail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBMail::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBMail& PBMail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_PBMail.base);
  return *internal_default_instance();
}


void PBMail::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear();
}

bool PBMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBMail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBMail_DataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBMail_DataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBMail.DataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBMail)
  return false;
#undef DO_
}

void PBMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBMail.DataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBMail)
}

::google::protobuf::uint8* PBMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBMail.DataEntry.key");
      }
    };

    if (deterministic &&
        this->data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBMail)
  return target;
}

size_t PBMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBMail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  {
    ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->data().begin();
        it != this->data().end(); ++it) {
      entry.reset(data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBMail)
  GOOGLE_DCHECK_NE(&from, this);
  const PBMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBMail)
    MergeFrom(*source);
  }
}

void PBMail::MergeFrom(const PBMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBMail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void PBMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMail::CopyFrom(const PBMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMail::IsInitialized() const {
  return true;
}

void PBMail::Swap(PBMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMail::InternalSwap(PBMail* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBMail::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryMailReq::kPlayeridFieldNumber;
const int S2SQueryMailReq::kZoneidFieldNumber;
const int S2SQueryMailReq::kMaxidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryMailReq::S2SQueryMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryMailReq)
}
S2SQueryMailReq::S2SQueryMailReq(const S2SQueryMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryMailReq)
}

void S2SQueryMailReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SQueryMailReq::~S2SQueryMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryMailReq)
  SharedDtor();
}

void S2SQueryMailReq::SharedDtor() {
}

void S2SQueryMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryMailReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryMailReq& S2SQueryMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryMailReq.base);
  return *internal_default_instance();
}


void S2SQueryMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SQueryMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 maxid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &maxid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryMailReq)
  return false;
#undef DO_
}

void S2SQueryMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  // uint64 maxid = 3;
  if (this->maxid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->maxid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryMailReq)
}

::google::protobuf::uint8* S2SQueryMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  // uint64 maxid = 3;
  if (this->maxid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->maxid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryMailReq)
  return target;
}

size_t S2SQueryMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 maxid = 3;
  if (this->maxid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->maxid());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryMailReq)
    MergeFrom(*source);
  }
}

void S2SQueryMailReq::MergeFrom(const S2SQueryMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.maxid() != 0) {
    set_maxid(from.maxid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SQueryMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryMailReq::CopyFrom(const S2SQueryMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryMailReq::IsInitialized() const {
  return true;
}

void S2SQueryMailReq::Swap(S2SQueryMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryMailReq::InternalSwap(S2SQueryMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(maxid_, other->maxid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryMailReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryMailAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryMailAck::kPlayeridFieldNumber;
const int S2SQueryMailAck::kMailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryMailAck::S2SQueryMailAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryMailAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryMailAck)
}
S2SQueryMailAck::S2SQueryMailAck(const S2SQueryMailAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_(from.mail_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryMailAck)
}

void S2SQueryMailAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryMailAck::~S2SQueryMailAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryMailAck)
  SharedDtor();
}

void S2SQueryMailAck::SharedDtor() {
}

void S2SQueryMailAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryMailAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryMailAck& S2SQueryMailAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryMailAck.base);
  return *internal_default_instance();
}


void S2SQueryMailAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryMailAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryMailAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBMail mail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryMailAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryMailAck)
  return false;
#undef DO_
}

void S2SQueryMailAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // repeated .KFMsg.PBMail mail = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mail_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->mail(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryMailAck)
}

::google::protobuf::uint8* S2SQueryMailAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // repeated .KFMsg.PBMail mail = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mail_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->mail(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryMailAck)
  return target;
}

size_t S2SQueryMailAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryMailAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBMail mail = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mail_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mail(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryMailAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryMailAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryMailAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryMailAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryMailAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryMailAck)
    MergeFrom(*source);
  }
}

void S2SQueryMailAck::MergeFrom(const S2SQueryMailAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryMailAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_.MergeFrom(from.mail_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryMailAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryMailAck::CopyFrom(const S2SQueryMailAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryMailAck::IsInitialized() const {
  return true;
}

void S2SQueryMailAck::Swap(S2SQueryMailAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryMailAck::InternalSwap(S2SQueryMailAck* other) {
  using std::swap;
  CastToBase(&mail_)->InternalSwap(CastToBase(&other->mail_));
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryMailAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddMailReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddMailReq_default_instance_._instance.get_mutable()->pbmail_ = const_cast< ::KFMsg::PBMail*>(
      ::KFMsg::PBMail::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddMailReq::kFlagFieldNumber;
const int S2SAddMailReq::kObjectidFieldNumber;
const int S2SAddMailReq::kPbmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddMailReq::S2SAddMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddMailReq)
}
S2SAddMailReq::S2SAddMailReq(const S2SAddMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmail()) {
    pbmail_ = new ::KFMsg::PBMail(*from.pbmail_);
  } else {
    pbmail_ = NULL;
  }
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddMailReq)
}

void S2SAddMailReq::SharedCtor() {
  ::memset(&pbmail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&pbmail_)) + sizeof(flag_));
}

S2SAddMailReq::~S2SAddMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddMailReq)
  SharedDtor();
}

void S2SAddMailReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmail_;
}

void S2SAddMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddMailReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddMailReq& S2SAddMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddMailReq.base);
  return *internal_default_instance();
}


void S2SAddMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmail_ != NULL) {
    delete pbmail_;
  }
  pbmail_ = NULL;
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(flag_));
  _internal_metadata_.Clear();
}

bool S2SAddMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 flag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objectid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBMail pbmail = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddMailReq)
  return false;
#undef DO_
}

void S2SAddMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flag = 1;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flag(), output);
  }

  // uint64 objectid = 2;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->objectid(), output);
  }

  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pbmail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddMailReq)
}

::google::protobuf::uint8* S2SAddMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flag = 1;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flag(), target);
  }

  // uint64 objectid = 2;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->objectid(), target);
  }

  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pbmail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddMailReq)
  return target;
}

size_t S2SAddMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmail_);
  }

  // uint64 objectid = 2;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // uint32 flag = 1;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddMailReq)
    MergeFrom(*source);
  }
}

void S2SAddMailReq::MergeFrom(const S2SAddMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmail()) {
    mutable_pbmail()->::KFMsg::PBMail::MergeFrom(from.pbmail());
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void S2SAddMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddMailReq::CopyFrom(const S2SAddMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddMailReq::IsInitialized() const {
  return true;
}

void S2SAddMailReq::Swap(S2SAddMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddMailReq::InternalSwap(S2SAddMailReq* other) {
  using std::swap;
  swap(pbmail_, other->pbmail_);
  swap(objectid_, other->objectid_);
  swap(flag_, other->flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddMailReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNoticeNewMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNoticeNewMailReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNoticeNewMailReq::S2SNoticeNewMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SNoticeNewMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SNoticeNewMailReq)
}
S2SNoticeNewMailReq::S2SNoticeNewMailReq(const S2SNoticeNewMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SNoticeNewMailReq)
}

void S2SNoticeNewMailReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SNoticeNewMailReq::~S2SNoticeNewMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SNoticeNewMailReq)
  SharedDtor();
}

void S2SNoticeNewMailReq::SharedDtor() {
}

void S2SNoticeNewMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNoticeNewMailReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNoticeNewMailReq& S2SNoticeNewMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SNoticeNewMailReq.base);
  return *internal_default_instance();
}


void S2SNoticeNewMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SNoticeNewMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SNoticeNewMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SNoticeNewMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SNoticeNewMailReq)
  return false;
#undef DO_
}

void S2SNoticeNewMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SNoticeNewMailReq)
}

::google::protobuf::uint8* S2SNoticeNewMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SNoticeNewMailReq)
  return target;
}

size_t S2SNoticeNewMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SNoticeNewMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNoticeNewMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SNoticeNewMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNoticeNewMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNoticeNewMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SNoticeNewMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SNoticeNewMailReq)
    MergeFrom(*source);
  }
}

void S2SNoticeNewMailReq::MergeFrom(const S2SNoticeNewMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SNoticeNewMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SNoticeNewMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SNoticeNewMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNoticeNewMailReq::CopyFrom(const S2SNoticeNewMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SNoticeNewMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNoticeNewMailReq::IsInitialized() const {
  return true;
}

void S2SNoticeNewMailReq::Swap(S2SNoticeNewMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNoticeNewMailReq::InternalSwap(S2SNoticeNewMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNoticeNewMailReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNewPlayerMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNewPlayerMailReq::kPlayeridFieldNumber;
const int S2SNewPlayerMailReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNewPlayerMailReq::S2SNewPlayerMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SNewPlayerMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SNewPlayerMailReq)
}
S2SNewPlayerMailReq::S2SNewPlayerMailReq(const S2SNewPlayerMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SNewPlayerMailReq)
}

void S2SNewPlayerMailReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SNewPlayerMailReq::~S2SNewPlayerMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SNewPlayerMailReq)
  SharedDtor();
}

void S2SNewPlayerMailReq::SharedDtor() {
}

void S2SNewPlayerMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNewPlayerMailReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNewPlayerMailReq& S2SNewPlayerMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SNewPlayerMailReq.base);
  return *internal_default_instance();
}


void S2SNewPlayerMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SNewPlayerMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SNewPlayerMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SNewPlayerMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SNewPlayerMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SNewPlayerMailReq)
  return false;
#undef DO_
}

void S2SNewPlayerMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SNewPlayerMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SNewPlayerMailReq)
}

::google::protobuf::uint8* S2SNewPlayerMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SNewPlayerMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SNewPlayerMailReq)
  return target;
}

size_t S2SNewPlayerMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SNewPlayerMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNewPlayerMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SNewPlayerMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNewPlayerMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNewPlayerMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SNewPlayerMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SNewPlayerMailReq)
    MergeFrom(*source);
  }
}

void S2SNewPlayerMailReq::MergeFrom(const S2SNewPlayerMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SNewPlayerMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SNewPlayerMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SNewPlayerMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNewPlayerMailReq::CopyFrom(const S2SNewPlayerMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SNewPlayerMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNewPlayerMailReq::IsInitialized() const {
  return true;
}

void S2SNewPlayerMailReq::Swap(S2SNewPlayerMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNewPlayerMailReq::InternalSwap(S2SNewPlayerMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNewPlayerMailReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateMailStatusReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateMailStatusReq::kPlayeridFieldNumber;
const int S2SUpdateMailStatusReq::kIdFieldNumber;
const int S2SUpdateMailStatusReq::kFlagFieldNumber;
const int S2SUpdateMailStatusReq::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateMailStatusReq::S2SUpdateMailStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateMailStatusReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateMailStatusReq)
}
S2SUpdateMailStatusReq::S2SUpdateMailStatusReq(const S2SUpdateMailStatusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateMailStatusReq)
}

void S2SUpdateMailStatusReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
}

S2SUpdateMailStatusReq::~S2SUpdateMailStatusReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateMailStatusReq)
  SharedDtor();
}

void S2SUpdateMailStatusReq::SharedDtor() {
}

void S2SUpdateMailStatusReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateMailStatusReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateMailStatusReq& S2SUpdateMailStatusReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateMailStatusReq.base);
  return *internal_default_instance();
}


void S2SUpdateMailStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateMailStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool S2SUpdateMailStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateMailStatusReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateMailStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateMailStatusReq)
  return false;
#undef DO_
}

void S2SUpdateMailStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateMailStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flag(), output);
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateMailStatusReq)
}

::google::protobuf::uint8* S2SUpdateMailStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateMailStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flag(), target);
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateMailStatusReq)
  return target;
}

size_t S2SUpdateMailStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateMailStatusReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateMailStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateMailStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateMailStatusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateMailStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateMailStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateMailStatusReq)
    MergeFrom(*source);
  }
}

void S2SUpdateMailStatusReq::MergeFrom(const S2SUpdateMailStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateMailStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void S2SUpdateMailStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateMailStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateMailStatusReq::CopyFrom(const S2SUpdateMailStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateMailStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateMailStatusReq::IsInitialized() const {
  return true;
}

void S2SUpdateMailStatusReq::Swap(S2SUpdateMailStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateMailStatusReq::InternalSwap(S2SUpdateMailStatusReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(id_, other->id_);
  swap(flag_, other->flag_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateMailStatusReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateMailStatusAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateMailStatusAck::kPlayeridFieldNumber;
const int S2SUpdateMailStatusAck::kIdFieldNumber;
const int S2SUpdateMailStatusAck::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateMailStatusAck::S2SUpdateMailStatusAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateMailStatusAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateMailStatusAck)
}
S2SUpdateMailStatusAck::S2SUpdateMailStatusAck(const S2SUpdateMailStatusAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateMailStatusAck)
}

void S2SUpdateMailStatusAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
}

S2SUpdateMailStatusAck::~S2SUpdateMailStatusAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateMailStatusAck)
  SharedDtor();
}

void S2SUpdateMailStatusAck::SharedDtor() {
}

void S2SUpdateMailStatusAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateMailStatusAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateMailStatusAck& S2SUpdateMailStatusAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateMailStatusAck.base);
  return *internal_default_instance();
}


void S2SUpdateMailStatusAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateMailStatusAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool S2SUpdateMailStatusAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateMailStatusAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateMailStatusAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateMailStatusAck)
  return false;
#undef DO_
}

void S2SUpdateMailStatusAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateMailStatusAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateMailStatusAck)
}

::google::protobuf::uint8* S2SUpdateMailStatusAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateMailStatusAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateMailStatusAck)
  return target;
}

size_t S2SUpdateMailStatusAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateMailStatusAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateMailStatusAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateMailStatusAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateMailStatusAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateMailStatusAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateMailStatusAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateMailStatusAck)
    MergeFrom(*source);
  }
}

void S2SUpdateMailStatusAck::MergeFrom(const S2SUpdateMailStatusAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateMailStatusAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void S2SUpdateMailStatusAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateMailStatusAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateMailStatusAck::CopyFrom(const S2SUpdateMailStatusAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateMailStatusAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateMailStatusAck::IsInitialized() const {
  return true;
}

void S2SUpdateMailStatusAck::Swap(S2SUpdateMailStatusAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateMailStatusAck::InternalSwap(S2SUpdateMailStatusAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(id_, other->id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateMailStatusAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNoticeRankWorkerReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNoticeRankWorkerReq::kWorkeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNoticeRankWorkerReq::S2SNoticeRankWorkerReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SNoticeRankWorkerReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SNoticeRankWorkerReq)
}
S2SNoticeRankWorkerReq::S2SNoticeRankWorkerReq(const S2SNoticeRankWorkerReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  workerid_ = from.workerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SNoticeRankWorkerReq)
}

void S2SNoticeRankWorkerReq::SharedCtor() {
  workerid_ = 0u;
}

S2SNoticeRankWorkerReq::~S2SNoticeRankWorkerReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SNoticeRankWorkerReq)
  SharedDtor();
}

void S2SNoticeRankWorkerReq::SharedDtor() {
}

void S2SNoticeRankWorkerReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNoticeRankWorkerReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNoticeRankWorkerReq& S2SNoticeRankWorkerReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SNoticeRankWorkerReq.base);
  return *internal_default_instance();
}


void S2SNoticeRankWorkerReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SNoticeRankWorkerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  workerid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SNoticeRankWorkerReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SNoticeRankWorkerReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 workerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &workerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SNoticeRankWorkerReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SNoticeRankWorkerReq)
  return false;
#undef DO_
}

void S2SNoticeRankWorkerReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SNoticeRankWorkerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 workerid = 1;
  if (this->workerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->workerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SNoticeRankWorkerReq)
}

::google::protobuf::uint8* S2SNoticeRankWorkerReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SNoticeRankWorkerReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 workerid = 1;
  if (this->workerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->workerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SNoticeRankWorkerReq)
  return target;
}

size_t S2SNoticeRankWorkerReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SNoticeRankWorkerReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 workerid = 1;
  if (this->workerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->workerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNoticeRankWorkerReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SNoticeRankWorkerReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNoticeRankWorkerReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNoticeRankWorkerReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SNoticeRankWorkerReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SNoticeRankWorkerReq)
    MergeFrom(*source);
  }
}

void S2SNoticeRankWorkerReq::MergeFrom(const S2SNoticeRankWorkerReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SNoticeRankWorkerReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.workerid() != 0) {
    set_workerid(from.workerid());
  }
}

void S2SNoticeRankWorkerReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SNoticeRankWorkerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNoticeRankWorkerReq::CopyFrom(const S2SNoticeRankWorkerReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SNoticeRankWorkerReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNoticeRankWorkerReq::IsInitialized() const {
  return true;
}

void S2SNoticeRankWorkerReq::Swap(S2SNoticeRankWorkerReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNoticeRankWorkerReq::InternalSwap(S2SNoticeRankWorkerReq* other) {
  using std::swap;
  swap(workerid_, other->workerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNoticeRankWorkerReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSyncRefreshRank::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSyncRefreshRank::kRankidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSyncRefreshRank::S2SSyncRefreshRank()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSyncRefreshRank.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSyncRefreshRank)
}
S2SSyncRefreshRank::S2SSyncRefreshRank(const S2SSyncRefreshRank& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rankid_ = from.rankid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSyncRefreshRank)
}

void S2SSyncRefreshRank::SharedCtor() {
  rankid_ = 0u;
}

S2SSyncRefreshRank::~S2SSyncRefreshRank() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSyncRefreshRank)
  SharedDtor();
}

void S2SSyncRefreshRank::SharedDtor() {
}

void S2SSyncRefreshRank::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSyncRefreshRank::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSyncRefreshRank& S2SSyncRefreshRank::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSyncRefreshRank.base);
  return *internal_default_instance();
}


void S2SSyncRefreshRank::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSyncRefreshRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SSyncRefreshRank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSyncRefreshRank)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSyncRefreshRank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSyncRefreshRank)
  return false;
#undef DO_
}

void S2SSyncRefreshRank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSyncRefreshRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSyncRefreshRank)
}

::google::protobuf::uint8* S2SSyncRefreshRank::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSyncRefreshRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSyncRefreshRank)
  return target;
}

size_t S2SSyncRefreshRank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSyncRefreshRank)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSyncRefreshRank::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSyncRefreshRank)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSyncRefreshRank* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSyncRefreshRank>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSyncRefreshRank)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSyncRefreshRank)
    MergeFrom(*source);
  }
}

void S2SSyncRefreshRank::MergeFrom(const S2SSyncRefreshRank& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSyncRefreshRank)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
}

void S2SSyncRefreshRank::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSyncRefreshRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSyncRefreshRank::CopyFrom(const S2SSyncRefreshRank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSyncRefreshRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSyncRefreshRank::IsInitialized() const {
  return true;
}

void S2SSyncRefreshRank::Swap(S2SSyncRefreshRank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSyncRefreshRank::InternalSwap(S2SSyncRefreshRank* other) {
  using std::swap;
  swap(rankid_, other->rankid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSyncRefreshRank::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateRankDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SUpdateRankDataReq_default_instance_._instance.get_mutable()->pbrankdata_ = const_cast< ::KFMsg::PBRankData*>(
      ::KFMsg::PBRankData::internal_default_instance());
}
void S2SUpdateRankDataReq::clear_pbrankdata() {
  if (GetArenaNoVirtual() == NULL && pbrankdata_ != NULL) {
    delete pbrankdata_;
  }
  pbrankdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateRankDataReq::kPlayeridFieldNumber;
const int S2SUpdateRankDataReq::kRankidFieldNumber;
const int S2SUpdateRankDataReq::kZoneidFieldNumber;
const int S2SUpdateRankDataReq::kPbrankdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateRankDataReq::S2SUpdateRankDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateRankDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateRankDataReq)
}
S2SUpdateRankDataReq::S2SUpdateRankDataReq(const S2SUpdateRankDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbrankdata()) {
    pbrankdata_ = new ::KFMsg::PBRankData(*from.pbrankdata_);
  } else {
    pbrankdata_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateRankDataReq)
}

void S2SUpdateRankDataReq::SharedCtor() {
  ::memset(&pbrankdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&pbrankdata_)) + sizeof(zoneid_));
}

S2SUpdateRankDataReq::~S2SUpdateRankDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateRankDataReq)
  SharedDtor();
}

void S2SUpdateRankDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbrankdata_;
}

void S2SUpdateRankDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateRankDataReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateRankDataReq& S2SUpdateRankDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateRankDataReq.base);
  return *internal_default_instance();
}


void S2SUpdateRankDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbrankdata_ != NULL) {
    delete pbrankdata_;
  }
  pbrankdata_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateRankDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateRankDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rankid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRankData pbrankdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbrankdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateRankDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateRankDataReq)
  return false;
#undef DO_
}

void S2SUpdateRankDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rankid(), output);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->zoneid(), output);
  }

  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbrankdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateRankDataReq)
}

::google::protobuf::uint8* S2SUpdateRankDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rankid(), target);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->zoneid(), target);
  }

  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbrankdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateRankDataReq)
  return target;
}

size_t S2SUpdateRankDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateRankDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbrankdata_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateRankDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateRankDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateRankDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateRankDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateRankDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateRankDataReq)
    MergeFrom(*source);
  }
}

void S2SUpdateRankDataReq::MergeFrom(const S2SUpdateRankDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateRankDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbrankdata()) {
    mutable_pbrankdata()->::KFMsg::PBRankData::MergeFrom(from.pbrankdata());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SUpdateRankDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateRankDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateRankDataReq::CopyFrom(const S2SUpdateRankDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateRankDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateRankDataReq::IsInitialized() const {
  return true;
}

void S2SUpdateRankDataReq::Swap(S2SUpdateRankDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateRankDataReq::InternalSwap(S2SUpdateRankDataReq* other) {
  using std::swap;
  swap(pbrankdata_, other->pbrankdata_);
  swap(playerid_, other->playerid_);
  swap(rankid_, other->rankid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateRankDataReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRankListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRankListReq::kRankidFieldNumber;
const int S2SQueryRankListReq::kZoneidFieldNumber;
const int S2SQueryRankListReq::kStartFieldNumber;
const int S2SQueryRankListReq::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRankListReq::S2SQueryRankListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRankListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRankListReq)
}
S2SQueryRankListReq::S2SQueryRankListReq(const S2SQueryRankListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rankid_, &from.rankid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&rankid_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRankListReq)
}

void S2SQueryRankListReq::SharedCtor() {
  ::memset(&rankid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&rankid_)) + sizeof(count_));
}

S2SQueryRankListReq::~S2SQueryRankListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRankListReq)
  SharedDtor();
}

void S2SQueryRankListReq::SharedDtor() {
}

void S2SQueryRankListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRankListReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRankListReq& S2SQueryRankListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRankListReq.base);
  return *internal_default_instance();
}


void S2SQueryRankListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rankid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&rankid_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool S2SQueryRankListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRankListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 start = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &start_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRankListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRankListReq)
  return false;
#undef DO_
}

void S2SQueryRankListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankid(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  // uint32 start = 3;
  if (this->start() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->start(), output);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRankListReq)
}

::google::protobuf::uint8* S2SQueryRankListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankid(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  // uint32 start = 3;
  if (this->start() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->start(), target);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRankListReq)
  return target;
}

size_t S2SQueryRankListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRankListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  // uint32 start = 3;
  if (this->start() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->start());
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRankListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRankListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRankListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRankListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRankListReq)
    MergeFrom(*source);
  }
}

void S2SQueryRankListReq::MergeFrom(const S2SQueryRankListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
  if (from.start() != 0) {
    set_start(from.start());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void S2SQueryRankListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRankListReq::CopyFrom(const S2SQueryRankListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRankListReq::IsInitialized() const {
  return true;
}

void S2SQueryRankListReq::Swap(S2SQueryRankListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRankListReq::InternalSwap(S2SQueryRankListReq* other) {
  using std::swap;
  swap(rankid_, other->rankid_);
  swap(zoneid_, other->zoneid_);
  swap(start_, other->start_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRankListReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendRankListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendRankListReq::kRankidFieldNumber;
const int S2SQueryFriendRankListReq::kFriendidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendRankListReq::S2SQueryFriendRankListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendRankListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendRankListReq)
}
S2SQueryFriendRankListReq::S2SQueryFriendRankListReq(const S2SQueryFriendRankListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friendid_(from.friendid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rankid_ = from.rankid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendRankListReq)
}

void S2SQueryFriendRankListReq::SharedCtor() {
  rankid_ = 0u;
}

S2SQueryFriendRankListReq::~S2SQueryFriendRankListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendRankListReq)
  SharedDtor();
}

void S2SQueryFriendRankListReq::SharedDtor() {
}

void S2SQueryFriendRankListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendRankListReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendRankListReq& S2SQueryFriendRankListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendRankListReq.base);
  return *internal_default_instance();
}


void S2SQueryFriendRankListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendid_.Clear();
  rankid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SQueryFriendRankListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendRankListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 friendid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_friendid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_friendid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendRankListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendRankListReq)
  return false;
#undef DO_
}

void S2SQueryFriendRankListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankid(), output);
  }

  // repeated uint64 friendid = 2;
  if (this->friendid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friendid_cached_byte_size_));
  }
  for (int i = 0, n = this->friendid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->friendid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendRankListReq)
}

::google::protobuf::uint8* S2SQueryFriendRankListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankid(), target);
  }

  // repeated uint64 friendid = 2;
  if (this->friendid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _friendid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->friendid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendRankListReq)
  return target;
}

size_t S2SQueryFriendRankListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendRankListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 friendid = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->friendid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friendid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendRankListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendRankListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendRankListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendRankListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendRankListReq)
    MergeFrom(*source);
  }
}

void S2SQueryFriendRankListReq::MergeFrom(const S2SQueryFriendRankListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friendid_.MergeFrom(from.friendid_);
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
}

void S2SQueryFriendRankListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendRankListReq::CopyFrom(const S2SQueryFriendRankListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendRankListReq::IsInitialized() const {
  return true;
}

void S2SQueryFriendRankListReq::Swap(S2SQueryFriendRankListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendRankListReq::InternalSwap(S2SQueryFriendRankListReq* other) {
  using std::swap;
  friendid_.InternalSwap(&other->friendid_);
  swap(rankid_, other->rankid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendRankListReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse() {}
S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse::MergeFrom(const S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[47];
}
void S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SUpdateIntValueToBasicReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateIntValueToBasicReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateIntValueToBasicReq::S2SUpdateIntValueToBasicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateIntValueToBasicReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateIntValueToBasicReq)
}
S2SUpdateIntValueToBasicReq::S2SUpdateIntValueToBasicReq(const S2SUpdateIntValueToBasicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateIntValueToBasicReq)
}

void S2SUpdateIntValueToBasicReq::SharedCtor() {
}

S2SUpdateIntValueToBasicReq::~S2SUpdateIntValueToBasicReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateIntValueToBasicReq)
  SharedDtor();
}

void S2SUpdateIntValueToBasicReq::SharedDtor() {
}

void S2SUpdateIntValueToBasicReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateIntValueToBasicReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateIntValueToBasicReq& S2SUpdateIntValueToBasicReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateIntValueToBasicReq.base);
  return *internal_default_instance();
}


void S2SUpdateIntValueToBasicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateIntValueToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  _internal_metadata_.Clear();
}

bool S2SUpdateIntValueToBasicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateIntValueToBasicReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, uint64> pbdata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SUpdateIntValueToBasicReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateIntValueToBasicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateIntValueToBasicReq)
  return false;
#undef DO_
}

void S2SUpdateIntValueToBasicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateIntValueToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, uint64> pbdata = 1;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateIntValueToBasicReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateIntValueToBasicReq)
}

::google::protobuf::uint8* S2SUpdateIntValueToBasicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateIntValueToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, uint64> pbdata = 1;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateIntValueToBasicReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateIntValueToBasicReq)
  return target;
}

size_t S2SUpdateIntValueToBasicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateIntValueToBasicReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint64> pbdata = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateIntValueToBasicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateIntValueToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateIntValueToBasicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateIntValueToBasicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateIntValueToBasicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateIntValueToBasicReq)
    MergeFrom(*source);
  }
}

void S2SUpdateIntValueToBasicReq::MergeFrom(const S2SUpdateIntValueToBasicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateIntValueToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
}

void S2SUpdateIntValueToBasicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateIntValueToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateIntValueToBasicReq::CopyFrom(const S2SUpdateIntValueToBasicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateIntValueToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateIntValueToBasicReq::IsInitialized() const {
  return true;
}

void S2SUpdateIntValueToBasicReq::Swap(S2SUpdateIntValueToBasicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateIntValueToBasicReq::InternalSwap(S2SUpdateIntValueToBasicReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateIntValueToBasicReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse() {}
S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse::MergeFrom(const S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[49];
}
void S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SUpdateStrValueToBasicReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateStrValueToBasicReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateStrValueToBasicReq::S2SUpdateStrValueToBasicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateStrValueToBasicReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateStrValueToBasicReq)
}
S2SUpdateStrValueToBasicReq::S2SUpdateStrValueToBasicReq(const S2SUpdateStrValueToBasicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateStrValueToBasicReq)
}

void S2SUpdateStrValueToBasicReq::SharedCtor() {
}

S2SUpdateStrValueToBasicReq::~S2SUpdateStrValueToBasicReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateStrValueToBasicReq)
  SharedDtor();
}

void S2SUpdateStrValueToBasicReq::SharedDtor() {
}

void S2SUpdateStrValueToBasicReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateStrValueToBasicReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateStrValueToBasicReq& S2SUpdateStrValueToBasicReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateStrValueToBasicReq.base);
  return *internal_default_instance();
}


void S2SUpdateStrValueToBasicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateStrValueToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  _internal_metadata_.Clear();
}

bool S2SUpdateStrValueToBasicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateStrValueToBasicReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> pbdata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SUpdateStrValueToBasicReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateStrValueToBasicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateStrValueToBasicReq)
  return false;
#undef DO_
}

void S2SUpdateStrValueToBasicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateStrValueToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> pbdata = 1;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateStrValueToBasicReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateStrValueToBasicReq)
}

::google::protobuf::uint8* S2SUpdateStrValueToBasicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateStrValueToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> pbdata = 1;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateStrValueToBasicReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateStrValueToBasicReq)
  return target;
}

size_t S2SUpdateStrValueToBasicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateStrValueToBasicReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateStrValueToBasicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateStrValueToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateStrValueToBasicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateStrValueToBasicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateStrValueToBasicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateStrValueToBasicReq)
    MergeFrom(*source);
  }
}

void S2SUpdateStrValueToBasicReq::MergeFrom(const S2SUpdateStrValueToBasicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateStrValueToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
}

void S2SUpdateStrValueToBasicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateStrValueToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateStrValueToBasicReq::CopyFrom(const S2SUpdateStrValueToBasicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateStrValueToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateStrValueToBasicReq::IsInitialized() const {
  return true;
}

void S2SUpdateStrValueToBasicReq::Swap(S2SUpdateStrValueToBasicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateStrValueToBasicReq::InternalSwap(S2SUpdateStrValueToBasicReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateStrValueToBasicReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SClearOnlineToBasicReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SClearOnlineToBasicReq::kServeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SClearOnlineToBasicReq::S2SClearOnlineToBasicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SClearOnlineToBasicReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SClearOnlineToBasicReq)
}
S2SClearOnlineToBasicReq::S2SClearOnlineToBasicReq(const S2SClearOnlineToBasicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  serverid_ = from.serverid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SClearOnlineToBasicReq)
}

void S2SClearOnlineToBasicReq::SharedCtor() {
  serverid_ = GOOGLE_ULONGLONG(0);
}

S2SClearOnlineToBasicReq::~S2SClearOnlineToBasicReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SClearOnlineToBasicReq)
  SharedDtor();
}

void S2SClearOnlineToBasicReq::SharedDtor() {
}

void S2SClearOnlineToBasicReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SClearOnlineToBasicReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SClearOnlineToBasicReq& S2SClearOnlineToBasicReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SClearOnlineToBasicReq.base);
  return *internal_default_instance();
}


void S2SClearOnlineToBasicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SClearOnlineToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  serverid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SClearOnlineToBasicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SClearOnlineToBasicReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 serverid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &serverid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SClearOnlineToBasicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SClearOnlineToBasicReq)
  return false;
#undef DO_
}

void S2SClearOnlineToBasicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SClearOnlineToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->serverid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SClearOnlineToBasicReq)
}

::google::protobuf::uint8* S2SClearOnlineToBasicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SClearOnlineToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->serverid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SClearOnlineToBasicReq)
  return target;
}

size_t S2SClearOnlineToBasicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SClearOnlineToBasicReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 serverid = 1;
  if (this->serverid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->serverid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SClearOnlineToBasicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SClearOnlineToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SClearOnlineToBasicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SClearOnlineToBasicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SClearOnlineToBasicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SClearOnlineToBasicReq)
    MergeFrom(*source);
  }
}

void S2SClearOnlineToBasicReq::MergeFrom(const S2SClearOnlineToBasicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SClearOnlineToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.serverid() != 0) {
    set_serverid(from.serverid());
  }
}

void S2SClearOnlineToBasicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SClearOnlineToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SClearOnlineToBasicReq::CopyFrom(const S2SClearOnlineToBasicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SClearOnlineToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SClearOnlineToBasicReq::IsInitialized() const {
  return true;
}

void S2SClearOnlineToBasicReq::Swap(S2SClearOnlineToBasicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SClearOnlineToBasicReq::InternalSwap(S2SClearOnlineToBasicReq* other) {
  using std::swap;
  swap(serverid_, other->serverid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SClearOnlineToBasicReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryAttributeToBasicReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryAttributeToBasicReq::kNameFieldNumber;
const int S2SQueryAttributeToBasicReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryAttributeToBasicReq::S2SQueryAttributeToBasicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryAttributeToBasicReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryAttributeToBasicReq)
}
S2SQueryAttributeToBasicReq::S2SQueryAttributeToBasicReq(const S2SQueryAttributeToBasicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  zoneid_ = from.zoneid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryAttributeToBasicReq)
}

void S2SQueryAttributeToBasicReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zoneid_ = 0u;
}

S2SQueryAttributeToBasicReq::~S2SQueryAttributeToBasicReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryAttributeToBasicReq)
  SharedDtor();
}

void S2SQueryAttributeToBasicReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SQueryAttributeToBasicReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryAttributeToBasicReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryAttributeToBasicReq& S2SQueryAttributeToBasicReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryAttributeToBasicReq.base);
  return *internal_default_instance();
}


void S2SQueryAttributeToBasicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryAttributeToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  zoneid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SQueryAttributeToBasicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryAttributeToBasicReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryAttributeToBasicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryAttributeToBasicReq)
  return false;
#undef DO_
}

void S2SQueryAttributeToBasicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryAttributeToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryAttributeToBasicReq)
}

::google::protobuf::uint8* S2SQueryAttributeToBasicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryAttributeToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryAttributeToBasicReq)
  return target;
}

size_t S2SQueryAttributeToBasicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryAttributeToBasicReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryAttributeToBasicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryAttributeToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryAttributeToBasicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryAttributeToBasicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryAttributeToBasicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryAttributeToBasicReq)
    MergeFrom(*source);
  }
}

void S2SQueryAttributeToBasicReq::MergeFrom(const S2SQueryAttributeToBasicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryAttributeToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SQueryAttributeToBasicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryAttributeToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryAttributeToBasicReq::CopyFrom(const S2SQueryAttributeToBasicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryAttributeToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryAttributeToBasicReq::IsInitialized() const {
  return true;
}

void S2SQueryAttributeToBasicReq::Swap(S2SQueryAttributeToBasicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryAttributeToBasicReq::InternalSwap(S2SQueryAttributeToBasicReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryAttributeToBasicReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse() {}
S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse::MergeFrom(const S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[53];
}
void S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SQueryAttributeToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryAttributeToGameAck::kNameFieldNumber;
const int S2SQueryAttributeToGameAck::kResultFieldNumber;
const int S2SQueryAttributeToGameAck::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryAttributeToGameAck::S2SQueryAttributeToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryAttributeToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryAttributeToGameAck)
}
S2SQueryAttributeToGameAck::S2SQueryAttributeToGameAck(const S2SQueryAttributeToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryAttributeToGameAck)
}

void S2SQueryAttributeToGameAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0u;
}

S2SQueryAttributeToGameAck::~S2SQueryAttributeToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryAttributeToGameAck)
  SharedDtor();
}

void S2SQueryAttributeToGameAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SQueryAttributeToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryAttributeToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryAttributeToGameAck& S2SQueryAttributeToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryAttributeToGameAck.base);
  return *internal_default_instance();
}


void S2SQueryAttributeToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryAttributeToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SQueryAttributeToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryAttributeToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SQueryAttributeToGameAck.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryAttributeToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryAttributeToGameAck)
  return false;
#undef DO_
}

void S2SQueryAttributeToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryAttributeToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SQueryAttributeToGameAck.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryAttributeToGameAck)
}

::google::protobuf::uint8* S2SQueryAttributeToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryAttributeToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SQueryAttributeToGameAck.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryAttributeToGameAck)
  return target;
}

size_t S2SQueryAttributeToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryAttributeToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryAttributeToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryAttributeToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryAttributeToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryAttributeToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryAttributeToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryAttributeToGameAck)
    MergeFrom(*source);
  }
}

void S2SQueryAttributeToGameAck::MergeFrom(const S2SQueryAttributeToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryAttributeToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SQueryAttributeToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryAttributeToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryAttributeToGameAck::CopyFrom(const S2SQueryAttributeToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryAttributeToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryAttributeToGameAck::IsInitialized() const {
  return true;
}

void S2SQueryAttributeToGameAck::Swap(S2SQueryAttributeToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryAttributeToGameAck::InternalSwap(S2SQueryAttributeToGameAck* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryAttributeToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSetPlayerNameToBasicReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSetPlayerNameToBasicReq::kZoneidFieldNumber;
const int S2SSetPlayerNameToBasicReq::kPlayeridFieldNumber;
const int S2SSetPlayerNameToBasicReq::kOldnameFieldNumber;
const int S2SSetPlayerNameToBasicReq::kNewnameFieldNumber;
const int S2SSetPlayerNameToBasicReq::kCostdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSetPlayerNameToBasicReq::S2SSetPlayerNameToBasicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSetPlayerNameToBasicReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSetPlayerNameToBasicReq)
}
S2SSetPlayerNameToBasicReq::S2SSetPlayerNameToBasicReq(const S2SSetPlayerNameToBasicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oldname().size() > 0) {
    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newname().size() > 0) {
    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  costdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.costdata().size() > 0) {
    costdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.costdata_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSetPlayerNameToBasicReq)
}

void S2SSetPlayerNameToBasicReq::SharedCtor() {
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  costdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SSetPlayerNameToBasicReq::~S2SSetPlayerNameToBasicReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSetPlayerNameToBasicReq)
  SharedDtor();
}

void S2SSetPlayerNameToBasicReq::SharedDtor() {
  oldname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  costdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSetPlayerNameToBasicReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSetPlayerNameToBasicReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSetPlayerNameToBasicReq& S2SSetPlayerNameToBasicReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSetPlayerNameToBasicReq.base);
  return *internal_default_instance();
}


void S2SSetPlayerNameToBasicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSetPlayerNameToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  costdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SSetPlayerNameToBasicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSetPlayerNameToBasicReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 zoneid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes oldname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oldname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes newname = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_newname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes costdata = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_costdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSetPlayerNameToBasicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSetPlayerNameToBasicReq)
  return false;
#undef DO_
}

void S2SSetPlayerNameToBasicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSetPlayerNameToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 zoneid = 1;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->zoneid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // bytes oldname = 3;
  if (this->oldname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->oldname(), output);
  }

  // bytes newname = 4;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->newname(), output);
  }

  // bytes costdata = 5;
  if (this->costdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->costdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSetPlayerNameToBasicReq)
}

::google::protobuf::uint8* S2SSetPlayerNameToBasicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSetPlayerNameToBasicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 zoneid = 1;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->zoneid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // bytes oldname = 3;
  if (this->oldname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->oldname(), target);
  }

  // bytes newname = 4;
  if (this->newname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->newname(), target);
  }

  // bytes costdata = 5;
  if (this->costdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->costdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSetPlayerNameToBasicReq)
  return target;
}

size_t S2SSetPlayerNameToBasicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSetPlayerNameToBasicReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes oldname = 3;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->oldname());
  }

  // bytes newname = 4;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->newname());
  }

  // bytes costdata = 5;
  if (this->costdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->costdata());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 zoneid = 1;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSetPlayerNameToBasicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSetPlayerNameToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSetPlayerNameToBasicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSetPlayerNameToBasicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSetPlayerNameToBasicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSetPlayerNameToBasicReq)
    MergeFrom(*source);
  }
}

void S2SSetPlayerNameToBasicReq::MergeFrom(const S2SSetPlayerNameToBasicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSetPlayerNameToBasicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldname().size() > 0) {

    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from.newname().size() > 0) {

    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  if (from.costdata().size() > 0) {

    costdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.costdata_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SSetPlayerNameToBasicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSetPlayerNameToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSetPlayerNameToBasicReq::CopyFrom(const S2SSetPlayerNameToBasicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSetPlayerNameToBasicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSetPlayerNameToBasicReq::IsInitialized() const {
  return true;
}

void S2SSetPlayerNameToBasicReq::Swap(S2SSetPlayerNameToBasicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSetPlayerNameToBasicReq::InternalSwap(S2SSetPlayerNameToBasicReq* other) {
  using std::swap;
  oldname_.Swap(&other->oldname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  newname_.Swap(&other->newname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  costdata_.Swap(&other->costdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSetPlayerNameToBasicReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSetPlayerNameToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSetPlayerNameToGameAck::kResultFieldNumber;
const int S2SSetPlayerNameToGameAck::kPlayeridFieldNumber;
const int S2SSetPlayerNameToGameAck::kNameFieldNumber;
const int S2SSetPlayerNameToGameAck::kCostdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSetPlayerNameToGameAck::S2SSetPlayerNameToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSetPlayerNameToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSetPlayerNameToGameAck)
}
S2SSetPlayerNameToGameAck::S2SSetPlayerNameToGameAck(const S2SSetPlayerNameToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  costdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.costdata().size() > 0) {
    costdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.costdata_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSetPlayerNameToGameAck)
}

void S2SSetPlayerNameToGameAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  costdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
}

S2SSetPlayerNameToGameAck::~S2SSetPlayerNameToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSetPlayerNameToGameAck)
  SharedDtor();
}

void S2SSetPlayerNameToGameAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  costdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSetPlayerNameToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSetPlayerNameToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSetPlayerNameToGameAck& S2SSetPlayerNameToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSetPlayerNameToGameAck.base);
  return *internal_default_instance();
}


void S2SSetPlayerNameToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSetPlayerNameToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  costdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SSetPlayerNameToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSetPlayerNameToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes costdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_costdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSetPlayerNameToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSetPlayerNameToGameAck)
  return false;
#undef DO_
}

void S2SSetPlayerNameToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSetPlayerNameToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // bytes costdata = 4;
  if (this->costdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->costdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSetPlayerNameToGameAck)
}

::google::protobuf::uint8* S2SSetPlayerNameToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSetPlayerNameToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // bytes costdata = 4;
  if (this->costdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->costdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSetPlayerNameToGameAck)
  return target;
}

size_t S2SSetPlayerNameToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSetPlayerNameToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes costdata = 4;
  if (this->costdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->costdata());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSetPlayerNameToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSetPlayerNameToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSetPlayerNameToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSetPlayerNameToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSetPlayerNameToGameAck)
    MergeFrom(*source);
  }
}

void S2SSetPlayerNameToGameAck::MergeFrom(const S2SSetPlayerNameToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.costdata().size() > 0) {

    costdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.costdata_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SSetPlayerNameToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSetPlayerNameToGameAck::CopyFrom(const S2SSetPlayerNameToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSetPlayerNameToGameAck::IsInitialized() const {
  return true;
}

void S2SSetPlayerNameToGameAck::Swap(S2SSetPlayerNameToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSetPlayerNameToGameAck::InternalSwap(S2SSetPlayerNameToGameAck* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  costdata_.Swap(&other->costdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSetPlayerNameToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBRelation_BasicdataEntry_DoNotUse::PBRelation_BasicdataEntry_DoNotUse() {}
PBRelation_BasicdataEntry_DoNotUse::PBRelation_BasicdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBRelation_BasicdataEntry_DoNotUse::MergeFrom(const PBRelation_BasicdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBRelation_BasicdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[57];
}
void PBRelation_BasicdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBRelation_RelationdataEntry_DoNotUse::PBRelation_RelationdataEntry_DoNotUse() {}
PBRelation_RelationdataEntry_DoNotUse::PBRelation_RelationdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBRelation_RelationdataEntry_DoNotUse::MergeFrom(const PBRelation_RelationdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBRelation_RelationdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[58];
}
void PBRelation_RelationdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBRelation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRelation::kPlayeridFieldNumber;
const int PBRelation::kBasicdataFieldNumber;
const int PBRelation::kRelationdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRelation::PBRelation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRelation)
}
PBRelation::PBRelation(const PBRelation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  basicdata_.MergeFrom(from.basicdata_);
  relationdata_.MergeFrom(from.relationdata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRelation)
}

void PBRelation::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

PBRelation::~PBRelation() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRelation)
  SharedDtor();
}

void PBRelation::SharedDtor() {
}

void PBRelation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRelation::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRelation& PBRelation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base);
  return *internal_default_instance();
}


void PBRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  basicdata_.Clear();
  relationdata_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PBRelation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRelation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> basicdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          PBRelation_BasicdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBRelation_BasicdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&basicdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBRelation.BasicdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> relationdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PBRelation_RelationdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBRelation_RelationdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&relationdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBRelation.RelationdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRelation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRelation)
  return false;
#undef DO_
}

void PBRelation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // map<string, bytes> basicdata = 2;
  if (!this->basicdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRelation.BasicdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->basicdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->basicdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->basicdata().begin();
          it != this->basicdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRelation_BasicdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(basicdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRelation_BasicdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->basicdata().begin();
          it != this->basicdata().end(); ++it) {
        entry.reset(basicdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> relationdata = 3;
  if (!this->relationdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRelation.RelationdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->relationdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->relationdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->relationdata().begin();
          it != this->relationdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(relationdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->relationdata().begin();
          it != this->relationdata().end(); ++it) {
        entry.reset(relationdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRelation)
}

::google::protobuf::uint8* PBRelation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // map<string, bytes> basicdata = 2;
  if (!this->basicdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRelation.BasicdataEntry.key");
      }
    };

    if (deterministic &&
        this->basicdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->basicdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->basicdata().begin();
          it != this->basicdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRelation_BasicdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(basicdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRelation_BasicdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->basicdata().begin();
          it != this->basicdata().end(); ++it) {
        entry.reset(basicdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> relationdata = 3;
  if (!this->relationdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRelation.RelationdataEntry.key");
      }
    };

    if (deterministic &&
        this->relationdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->relationdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->relationdata().begin();
          it != this->relationdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(relationdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->relationdata().begin();
          it != this->relationdata().end(); ++it) {
        entry.reset(relationdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRelation)
  return target;
}

size_t PBRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRelation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> basicdata = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->basicdata_size());
  {
    ::std::unique_ptr<PBRelation_BasicdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->basicdata().begin();
        it != this->basicdata().end(); ++it) {
      entry.reset(basicdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, bytes> relationdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->relationdata_size());
  {
    ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->relationdata().begin();
        it != this->relationdata().end(); ++it) {
      entry.reset(relationdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRelation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRelation)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRelation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRelation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRelation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRelation)
    MergeFrom(*source);
  }
}

void PBRelation::MergeFrom(const PBRelation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRelation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  basicdata_.MergeFrom(from.basicdata_);
  relationdata_.MergeFrom(from.relationdata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void PBRelation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRelation::CopyFrom(const PBRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRelation::IsInitialized() const {
  return true;
}

void PBRelation::Swap(PBRelation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRelation::InternalSwap(PBRelation* other) {
  using std::swap;
  basicdata_.Swap(&other->basicdata_);
  relationdata_.Swap(&other->relationdata_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRelation::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRelationToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRelationToRelationReq::kRelationnameFieldNumber;
const int S2SQueryRelationToRelationReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRelationToRelationReq::S2SQueryRelationToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRelationToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRelationToRelationReq)
}
S2SQueryRelationToRelationReq::S2SQueryRelationToRelationReq(const S2SQueryRelationToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRelationToRelationReq)
}

void S2SQueryRelationToRelationReq::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryRelationToRelationReq::~S2SQueryRelationToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRelationToRelationReq)
  SharedDtor();
}

void S2SQueryRelationToRelationReq::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SQueryRelationToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRelationToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRelationToRelationReq& S2SQueryRelationToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRelationToRelationReq.base);
  return *internal_default_instance();
}


void S2SQueryRelationToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryRelationToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRelationToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRelationToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRelationToRelationReq)
  return false;
#undef DO_
}

void S2SQueryRelationToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRelationToRelationReq)
}

::google::protobuf::uint8* S2SQueryRelationToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRelationToRelationReq)
  return target;
}

size_t S2SQueryRelationToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRelationToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRelationToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRelationToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRelationToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRelationToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRelationToRelationReq)
    MergeFrom(*source);
  }
}

void S2SQueryRelationToRelationReq::MergeFrom(const S2SQueryRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryRelationToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRelationToRelationReq::CopyFrom(const S2SQueryRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRelationToRelationReq::IsInitialized() const {
  return true;
}

void S2SQueryRelationToRelationReq::Swap(S2SQueryRelationToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRelationToRelationReq::InternalSwap(S2SQueryRelationToRelationReq* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRelationToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRelationToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRelationToGameAck::kRelationnameFieldNumber;
const int S2SQueryRelationToGameAck::kPlayeridFieldNumber;
const int S2SQueryRelationToGameAck::kPbrelationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRelationToGameAck::S2SQueryRelationToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRelationToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRelationToGameAck)
}
S2SQueryRelationToGameAck::S2SQueryRelationToGameAck(const S2SQueryRelationToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbrelation_(from.pbrelation_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRelationToGameAck)
}

void S2SQueryRelationToGameAck::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryRelationToGameAck::~S2SQueryRelationToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRelationToGameAck)
  SharedDtor();
}

void S2SQueryRelationToGameAck::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SQueryRelationToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRelationToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRelationToGameAck& S2SQueryRelationToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRelationToGameAck.base);
  return *internal_default_instance();
}


void S2SQueryRelationToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbrelation_.Clear();
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryRelationToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRelationToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBRelation pbrelation = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbrelation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRelationToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRelationToGameAck)
  return false;
#undef DO_
}

void S2SQueryRelationToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // repeated .KFMsg.PBRelation pbrelation = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbrelation_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->pbrelation(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRelationToGameAck)
}

::google::protobuf::uint8* S2SQueryRelationToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // repeated .KFMsg.PBRelation pbrelation = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbrelation_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->pbrelation(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRelationToGameAck)
  return target;
}

size_t S2SQueryRelationToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRelationToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRelation pbrelation = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pbrelation_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbrelation(static_cast<int>(i)));
    }
  }

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRelationToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRelationToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRelationToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRelationToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRelationToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRelationToGameAck)
    MergeFrom(*source);
  }
}

void S2SQueryRelationToGameAck::MergeFrom(const S2SQueryRelationToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRelationToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbrelation_.MergeFrom(from.pbrelation_);
  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryRelationToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRelationToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRelationToGameAck::CopyFrom(const S2SQueryRelationToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRelationToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRelationToGameAck::IsInitialized() const {
  return true;
}

void S2SQueryRelationToGameAck::Swap(S2SQueryRelationToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRelationToGameAck::InternalSwap(S2SQueryRelationToGameAck* other) {
  using std::swap;
  CastToBase(&pbrelation_)->InternalSwap(CastToBase(&other->pbrelation_));
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRelationToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRelationInviteToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRelationInviteToRelationReq::kRelationnameFieldNumber;
const int S2SQueryRelationInviteToRelationReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRelationInviteToRelationReq::S2SQueryRelationInviteToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRelationInviteToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRelationInviteToRelationReq)
}
S2SQueryRelationInviteToRelationReq::S2SQueryRelationInviteToRelationReq(const S2SQueryRelationInviteToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRelationInviteToRelationReq)
}

void S2SQueryRelationInviteToRelationReq::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryRelationInviteToRelationReq::~S2SQueryRelationInviteToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRelationInviteToRelationReq)
  SharedDtor();
}

void S2SQueryRelationInviteToRelationReq::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SQueryRelationInviteToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRelationInviteToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRelationInviteToRelationReq& S2SQueryRelationInviteToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRelationInviteToRelationReq.base);
  return *internal_default_instance();
}


void S2SQueryRelationInviteToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRelationInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryRelationInviteToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRelationInviteToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRelationInviteToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRelationInviteToRelationReq)
  return false;
#undef DO_
}

void S2SQueryRelationInviteToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRelationInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRelationInviteToRelationReq)
}

::google::protobuf::uint8* S2SQueryRelationInviteToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRelationInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRelationInviteToRelationReq)
  return target;
}

size_t S2SQueryRelationInviteToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRelationInviteToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRelationInviteToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRelationInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRelationInviteToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRelationInviteToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRelationInviteToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRelationInviteToRelationReq)
    MergeFrom(*source);
  }
}

void S2SQueryRelationInviteToRelationReq::MergeFrom(const S2SQueryRelationInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRelationInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryRelationInviteToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRelationInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRelationInviteToRelationReq::CopyFrom(const S2SQueryRelationInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRelationInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRelationInviteToRelationReq::IsInitialized() const {
  return true;
}

void S2SQueryRelationInviteToRelationReq::Swap(S2SQueryRelationInviteToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRelationInviteToRelationReq::InternalSwap(S2SQueryRelationInviteToRelationReq* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRelationInviteToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRelationInviteToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRelationInviteToGameAck::kRelationnameFieldNumber;
const int S2SQueryRelationInviteToGameAck::kPlayeridFieldNumber;
const int S2SQueryRelationInviteToGameAck::kPbinviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRelationInviteToGameAck::S2SQueryRelationInviteToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRelationInviteToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRelationInviteToGameAck)
}
S2SQueryRelationInviteToGameAck::S2SQueryRelationInviteToGameAck(const S2SQueryRelationInviteToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbinvite_(from.pbinvite_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRelationInviteToGameAck)
}

void S2SQueryRelationInviteToGameAck::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryRelationInviteToGameAck::~S2SQueryRelationInviteToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRelationInviteToGameAck)
  SharedDtor();
}

void S2SQueryRelationInviteToGameAck::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SQueryRelationInviteToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRelationInviteToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRelationInviteToGameAck& S2SQueryRelationInviteToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRelationInviteToGameAck.base);
  return *internal_default_instance();
}


void S2SQueryRelationInviteToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRelationInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbinvite_.Clear();
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryRelationInviteToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRelationInviteToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBRelation pbinvite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbinvite()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRelationInviteToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRelationInviteToGameAck)
  return false;
#undef DO_
}

void S2SQueryRelationInviteToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRelationInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // repeated .KFMsg.PBRelation pbinvite = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbinvite_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->pbinvite(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRelationInviteToGameAck)
}

::google::protobuf::uint8* S2SQueryRelationInviteToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRelationInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // repeated .KFMsg.PBRelation pbinvite = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbinvite_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->pbinvite(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRelationInviteToGameAck)
  return target;
}

size_t S2SQueryRelationInviteToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRelationInviteToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRelation pbinvite = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->pbinvite_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbinvite(static_cast<int>(i)));
    }
  }

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRelationInviteToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRelationInviteToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRelationInviteToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRelationInviteToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRelationInviteToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRelationInviteToGameAck)
    MergeFrom(*source);
  }
}

void S2SQueryRelationInviteToGameAck::MergeFrom(const S2SQueryRelationInviteToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRelationInviteToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbinvite_.MergeFrom(from.pbinvite_);
  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryRelationInviteToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRelationInviteToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRelationInviteToGameAck::CopyFrom(const S2SQueryRelationInviteToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRelationInviteToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRelationInviteToGameAck::IsInitialized() const {
  return true;
}

void S2SQueryRelationInviteToGameAck::Swap(S2SQueryRelationInviteToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRelationInviteToGameAck::InternalSwap(S2SQueryRelationInviteToGameAck* other) {
  using std::swap;
  CastToBase(&pbinvite_)->InternalSwap(CastToBase(&other->pbinvite_));
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRelationInviteToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse() {}
S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse::MergeFrom(const S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[64];
}
void S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SUpdateIntValueToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateIntValueToRelationReq::kRelationnameFieldNumber;
const int S2SUpdateIntValueToRelationReq::kPlayeridFieldNumber;
const int S2SUpdateIntValueToRelationReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateIntValueToRelationReq::S2SUpdateIntValueToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateIntValueToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateIntValueToRelationReq)
}
S2SUpdateIntValueToRelationReq::S2SUpdateIntValueToRelationReq(const S2SUpdateIntValueToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateIntValueToRelationReq)
}

void S2SUpdateIntValueToRelationReq::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SUpdateIntValueToRelationReq::~S2SUpdateIntValueToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateIntValueToRelationReq)
  SharedDtor();
}

void S2SUpdateIntValueToRelationReq::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SUpdateIntValueToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateIntValueToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateIntValueToRelationReq& S2SUpdateIntValueToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateIntValueToRelationReq.base);
  return *internal_default_instance();
}


void S2SUpdateIntValueToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateIntValueToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SUpdateIntValueToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateIntValueToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint64> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SUpdateIntValueToRelationReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateIntValueToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateIntValueToRelationReq)
  return false;
#undef DO_
}

void S2SUpdateIntValueToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateIntValueToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // map<string, uint64> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateIntValueToRelationReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateIntValueToRelationReq)
}

::google::protobuf::uint8* S2SUpdateIntValueToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateIntValueToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // map<string, uint64> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateIntValueToRelationReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateIntValueToRelationReq)
  return target;
}

size_t S2SUpdateIntValueToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateIntValueToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint64> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateIntValueToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateIntValueToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateIntValueToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateIntValueToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateIntValueToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateIntValueToRelationReq)
    MergeFrom(*source);
  }
}

void S2SUpdateIntValueToRelationReq::MergeFrom(const S2SUpdateIntValueToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateIntValueToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SUpdateIntValueToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateIntValueToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateIntValueToRelationReq::CopyFrom(const S2SUpdateIntValueToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateIntValueToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateIntValueToRelationReq::IsInitialized() const {
  return true;
}

void S2SUpdateIntValueToRelationReq::Swap(S2SUpdateIntValueToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateIntValueToRelationReq::InternalSwap(S2SUpdateIntValueToRelationReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateIntValueToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse() {}
S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse::MergeFrom(const S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[66];
}
void S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SUpdateStrValueToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateStrValueToRelationReq::kRelationnameFieldNumber;
const int S2SUpdateStrValueToRelationReq::kPlayeridFieldNumber;
const int S2SUpdateStrValueToRelationReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateStrValueToRelationReq::S2SUpdateStrValueToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateStrValueToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateStrValueToRelationReq)
}
S2SUpdateStrValueToRelationReq::S2SUpdateStrValueToRelationReq(const S2SUpdateStrValueToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateStrValueToRelationReq)
}

void S2SUpdateStrValueToRelationReq::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SUpdateStrValueToRelationReq::~S2SUpdateStrValueToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateStrValueToRelationReq)
  SharedDtor();
}

void S2SUpdateStrValueToRelationReq::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SUpdateStrValueToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateStrValueToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateStrValueToRelationReq& S2SUpdateStrValueToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateStrValueToRelationReq.base);
  return *internal_default_instance();
}


void S2SUpdateStrValueToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateStrValueToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SUpdateStrValueToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateStrValueToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SUpdateStrValueToRelationReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateStrValueToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateStrValueToRelationReq)
  return false;
#undef DO_
}

void S2SUpdateStrValueToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateStrValueToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateStrValueToRelationReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateStrValueToRelationReq)
}

::google::protobuf::uint8* S2SUpdateStrValueToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateStrValueToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateStrValueToRelationReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateStrValueToRelationReq)
  return target;
}

size_t S2SUpdateStrValueToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateStrValueToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateStrValueToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateStrValueToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateStrValueToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateStrValueToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateStrValueToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateStrValueToRelationReq)
    MergeFrom(*source);
  }
}

void S2SUpdateStrValueToRelationReq::MergeFrom(const S2SUpdateStrValueToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateStrValueToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SUpdateStrValueToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateStrValueToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateStrValueToRelationReq::CopyFrom(const S2SUpdateStrValueToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateStrValueToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateStrValueToRelationReq::IsInitialized() const {
  return true;
}

void S2SUpdateStrValueToRelationReq::Swap(S2SUpdateStrValueToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateStrValueToRelationReq::InternalSwap(S2SUpdateStrValueToRelationReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateStrValueToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SApplyAddRelationToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SApplyAddRelationToRelationReq::kRelationnameFieldNumber;
const int S2SApplyAddRelationToRelationReq::kPlayernameFieldNumber;
const int S2SApplyAddRelationToRelationReq::kPlayeridFieldNumber;
const int S2SApplyAddRelationToRelationReq::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SApplyAddRelationToRelationReq::S2SApplyAddRelationToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SApplyAddRelationToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SApplyAddRelationToRelationReq)
}
S2SApplyAddRelationToRelationReq::S2SApplyAddRelationToRelationReq(const S2SApplyAddRelationToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SApplyAddRelationToRelationReq)
}

void S2SApplyAddRelationToRelationReq::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SApplyAddRelationToRelationReq::~S2SApplyAddRelationToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SApplyAddRelationToRelationReq)
  SharedDtor();
}

void S2SApplyAddRelationToRelationReq::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SApplyAddRelationToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SApplyAddRelationToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SApplyAddRelationToRelationReq& S2SApplyAddRelationToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SApplyAddRelationToRelationReq.base);
  return *internal_default_instance();
}


void S2SApplyAddRelationToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SApplyAddRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SApplyAddRelationToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SApplyAddRelationToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes playername = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SApplyAddRelationToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SApplyAddRelationToRelationReq)
  return false;
#undef DO_
}

void S2SApplyAddRelationToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SApplyAddRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // bytes playername = 2;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->playername(), output);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->playerid(), output);
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SApplyAddRelationToRelationReq)
}

::google::protobuf::uint8* S2SApplyAddRelationToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SApplyAddRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // bytes playername = 2;
  if (this->playername().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->playername(), target);
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->playerid(), target);
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SApplyAddRelationToRelationReq)
  return target;
}

size_t S2SApplyAddRelationToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SApplyAddRelationToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // bytes playername = 2;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playername());
  }

  // bytes message = 4;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // uint64 playerid = 3;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SApplyAddRelationToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SApplyAddRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SApplyAddRelationToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SApplyAddRelationToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SApplyAddRelationToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SApplyAddRelationToRelationReq)
    MergeFrom(*source);
  }
}

void S2SApplyAddRelationToRelationReq::MergeFrom(const S2SApplyAddRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SApplyAddRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SApplyAddRelationToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SApplyAddRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SApplyAddRelationToRelationReq::CopyFrom(const S2SApplyAddRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SApplyAddRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SApplyAddRelationToRelationReq::IsInitialized() const {
  return true;
}

void S2SApplyAddRelationToRelationReq::Swap(S2SApplyAddRelationToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SApplyAddRelationToRelationReq::InternalSwap(S2SApplyAddRelationToRelationReq* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  playername_.Swap(&other->playername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SApplyAddRelationToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SApplyAddRelationToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SApplyAddRelationToGameAck_default_instance_._instance.get_mutable()->pbinvite_ = const_cast< ::KFMsg::PBRelation*>(
      ::KFMsg::PBRelation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SApplyAddRelationToGameAck::kRelationnameFieldNumber;
const int S2SApplyAddRelationToGameAck::kPlayeridFieldNumber;
const int S2SApplyAddRelationToGameAck::kPbinviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SApplyAddRelationToGameAck::S2SApplyAddRelationToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SApplyAddRelationToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SApplyAddRelationToGameAck)
}
S2SApplyAddRelationToGameAck::S2SApplyAddRelationToGameAck(const S2SApplyAddRelationToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.has_pbinvite()) {
    pbinvite_ = new ::KFMsg::PBRelation(*from.pbinvite_);
  } else {
    pbinvite_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SApplyAddRelationToGameAck)
}

void S2SApplyAddRelationToGameAck::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbinvite_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbinvite_)) + sizeof(playerid_));
}

S2SApplyAddRelationToGameAck::~S2SApplyAddRelationToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SApplyAddRelationToGameAck)
  SharedDtor();
}

void S2SApplyAddRelationToGameAck::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbinvite_;
}

void S2SApplyAddRelationToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SApplyAddRelationToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SApplyAddRelationToGameAck& S2SApplyAddRelationToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SApplyAddRelationToGameAck.base);
  return *internal_default_instance();
}


void S2SApplyAddRelationToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SApplyAddRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbinvite_ != NULL) {
    delete pbinvite_;
  }
  pbinvite_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SApplyAddRelationToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SApplyAddRelationToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRelation pbinvite = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbinvite()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SApplyAddRelationToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SApplyAddRelationToGameAck)
  return false;
#undef DO_
}

void S2SApplyAddRelationToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SApplyAddRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // .KFMsg.PBRelation pbinvite = 3;
  if (this->has_pbinvite()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pbinvite(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SApplyAddRelationToGameAck)
}

::google::protobuf::uint8* S2SApplyAddRelationToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SApplyAddRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // .KFMsg.PBRelation pbinvite = 3;
  if (this->has_pbinvite()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pbinvite(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SApplyAddRelationToGameAck)
  return target;
}

size_t S2SApplyAddRelationToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SApplyAddRelationToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // .KFMsg.PBRelation pbinvite = 3;
  if (this->has_pbinvite()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbinvite_);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SApplyAddRelationToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SApplyAddRelationToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SApplyAddRelationToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SApplyAddRelationToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SApplyAddRelationToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SApplyAddRelationToGameAck)
    MergeFrom(*source);
  }
}

void S2SApplyAddRelationToGameAck::MergeFrom(const S2SApplyAddRelationToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SApplyAddRelationToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.has_pbinvite()) {
    mutable_pbinvite()->::KFMsg::PBRelation::MergeFrom(from.pbinvite());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SApplyAddRelationToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SApplyAddRelationToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SApplyAddRelationToGameAck::CopyFrom(const S2SApplyAddRelationToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SApplyAddRelationToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SApplyAddRelationToGameAck::IsInitialized() const {
  return true;
}

void S2SApplyAddRelationToGameAck::Swap(S2SApplyAddRelationToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SApplyAddRelationToGameAck::InternalSwap(S2SApplyAddRelationToGameAck* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbinvite_, other->pbinvite_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SApplyAddRelationToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDelRelationInviteToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDelRelationInviteToRelationReq::kRelationnameFieldNumber;
const int S2SDelRelationInviteToRelationReq::kListnameFieldNumber;
const int S2SDelRelationInviteToRelationReq::kSelfplayeridFieldNumber;
const int S2SDelRelationInviteToRelationReq::kTargetplayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDelRelationInviteToRelationReq::S2SDelRelationInviteToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SDelRelationInviteToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDelRelationInviteToRelationReq)
}
S2SDelRelationInviteToRelationReq::S2SDelRelationInviteToRelationReq(const S2SDelRelationInviteToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  listname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.listname().size() > 0) {
    listname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listname_);
  }
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetplayerid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDelRelationInviteToRelationReq)
}

void S2SDelRelationInviteToRelationReq::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
}

S2SDelRelationInviteToRelationReq::~S2SDelRelationInviteToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDelRelationInviteToRelationReq)
  SharedDtor();
}

void S2SDelRelationInviteToRelationReq::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDelRelationInviteToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDelRelationInviteToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDelRelationInviteToRelationReq& S2SDelRelationInviteToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SDelRelationInviteToRelationReq.base);
  return *internal_default_instance();
}


void S2SDelRelationInviteToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDelRelationInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  listname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  _internal_metadata_.Clear();
}

bool S2SDelRelationInviteToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDelRelationInviteToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes listname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_listname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 selfplayerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDelRelationInviteToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDelRelationInviteToRelationReq)
  return false;
#undef DO_
}

void S2SDelRelationInviteToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDelRelationInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // bytes listname = 2;
  if (this->listname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->listname(), output);
  }

  // uint64 selfplayerid = 3;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 4;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->targetplayerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDelRelationInviteToRelationReq)
}

::google::protobuf::uint8* S2SDelRelationInviteToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDelRelationInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // bytes listname = 2;
  if (this->listname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->listname(), target);
  }

  // uint64 selfplayerid = 3;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 4;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->targetplayerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDelRelationInviteToRelationReq)
  return target;
}

size_t S2SDelRelationInviteToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDelRelationInviteToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // bytes listname = 2;
  if (this->listname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->listname());
  }

  // uint64 selfplayerid = 3;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint64 targetplayerid = 4;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDelRelationInviteToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDelRelationInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDelRelationInviteToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDelRelationInviteToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDelRelationInviteToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDelRelationInviteToRelationReq)
    MergeFrom(*source);
  }
}

void S2SDelRelationInviteToRelationReq::MergeFrom(const S2SDelRelationInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDelRelationInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.listname().size() > 0) {

    listname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.listname_);
  }
  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
}

void S2SDelRelationInviteToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDelRelationInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDelRelationInviteToRelationReq::CopyFrom(const S2SDelRelationInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDelRelationInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDelRelationInviteToRelationReq::IsInitialized() const {
  return true;
}

void S2SDelRelationInviteToRelationReq::Swap(S2SDelRelationInviteToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDelRelationInviteToRelationReq::InternalSwap(S2SDelRelationInviteToRelationReq* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  listname_.Swap(&other->listname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(selfplayerid_, other->selfplayerid_);
  swap(targetplayerid_, other->targetplayerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDelRelationInviteToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddRelationToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddRelationToRelationReq::kRelationnameFieldNumber;
const int S2SAddRelationToRelationReq::kPlayeridFieldNumber;
const int S2SAddRelationToRelationReq::kPlayernameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddRelationToRelationReq::S2SAddRelationToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddRelationToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddRelationToRelationReq)
}
S2SAddRelationToRelationReq::S2SAddRelationToRelationReq(const S2SAddRelationToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.playername().size() > 0) {
    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddRelationToRelationReq)
}

void S2SAddRelationToRelationReq::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SAddRelationToRelationReq::~S2SAddRelationToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddRelationToRelationReq)
  SharedDtor();
}

void S2SAddRelationToRelationReq::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SAddRelationToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddRelationToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddRelationToRelationReq& S2SAddRelationToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddRelationToRelationReq.base);
  return *internal_default_instance();
}


void S2SAddRelationToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddRelationToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddRelationToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes playername = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_playername()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddRelationToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddRelationToRelationReq)
  return false;
#undef DO_
}

void S2SAddRelationToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // bytes playername = 3;
  if (this->playername().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->playername(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddRelationToRelationReq)
}

::google::protobuf::uint8* S2SAddRelationToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // bytes playername = 3;
  if (this->playername().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->playername(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddRelationToRelationReq)
  return target;
}

size_t S2SAddRelationToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddRelationToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // bytes playername = 3;
  if (this->playername().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->playername());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddRelationToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddRelationToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddRelationToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddRelationToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddRelationToRelationReq)
    MergeFrom(*source);
  }
}

void S2SAddRelationToRelationReq::MergeFrom(const S2SAddRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playername().size() > 0) {

    playername_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.playername_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SAddRelationToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddRelationToRelationReq::CopyFrom(const S2SAddRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddRelationToRelationReq::IsInitialized() const {
  return true;
}

void S2SAddRelationToRelationReq::Swap(S2SAddRelationToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddRelationToRelationReq::InternalSwap(S2SAddRelationToRelationReq* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  playername_.Swap(&other->playername_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddRelationToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddRelationToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddRelationToGameAck_default_instance_._instance.get_mutable()->pbrelation_ = const_cast< ::KFMsg::PBRelation*>(
      ::KFMsg::PBRelation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddRelationToGameAck::kRelationnameFieldNumber;
const int S2SAddRelationToGameAck::kPlayeridFieldNumber;
const int S2SAddRelationToGameAck::kPbrelationFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddRelationToGameAck::S2SAddRelationToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddRelationToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddRelationToGameAck)
}
S2SAddRelationToGameAck::S2SAddRelationToGameAck(const S2SAddRelationToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.has_pbrelation()) {
    pbrelation_ = new ::KFMsg::PBRelation(*from.pbrelation_);
  } else {
    pbrelation_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddRelationToGameAck)
}

void S2SAddRelationToGameAck::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbrelation_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbrelation_)) + sizeof(playerid_));
}

S2SAddRelationToGameAck::~S2SAddRelationToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddRelationToGameAck)
  SharedDtor();
}

void S2SAddRelationToGameAck::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbrelation_;
}

void S2SAddRelationToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddRelationToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddRelationToGameAck& S2SAddRelationToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddRelationToGameAck.base);
  return *internal_default_instance();
}


void S2SAddRelationToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbrelation_ != NULL) {
    delete pbrelation_;
  }
  pbrelation_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddRelationToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddRelationToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRelation pbrelation = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbrelation()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddRelationToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddRelationToGameAck)
  return false;
#undef DO_
}

void S2SAddRelationToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // .KFMsg.PBRelation pbrelation = 4;
  if (this->has_pbrelation()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbrelation(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddRelationToGameAck)
}

::google::protobuf::uint8* S2SAddRelationToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // .KFMsg.PBRelation pbrelation = 4;
  if (this->has_pbrelation()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbrelation(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddRelationToGameAck)
  return target;
}

size_t S2SAddRelationToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddRelationToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // .KFMsg.PBRelation pbrelation = 4;
  if (this->has_pbrelation()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbrelation_);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddRelationToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddRelationToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddRelationToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddRelationToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddRelationToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddRelationToGameAck)
    MergeFrom(*source);
  }
}

void S2SAddRelationToGameAck::MergeFrom(const S2SAddRelationToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddRelationToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.has_pbrelation()) {
    mutable_pbrelation()->::KFMsg::PBRelation::MergeFrom(from.pbrelation());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SAddRelationToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddRelationToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddRelationToGameAck::CopyFrom(const S2SAddRelationToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddRelationToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddRelationToGameAck::IsInitialized() const {
  return true;
}

void S2SAddRelationToGameAck::Swap(S2SAddRelationToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddRelationToGameAck::InternalSwap(S2SAddRelationToGameAck* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbrelation_, other->pbrelation_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddRelationToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDelRelationToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDelRelationToRelationReq::kRelationnameFieldNumber;
const int S2SDelRelationToRelationReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDelRelationToRelationReq::S2SDelRelationToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SDelRelationToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDelRelationToRelationReq)
}
S2SDelRelationToRelationReq::S2SDelRelationToRelationReq(const S2SDelRelationToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDelRelationToRelationReq)
}

void S2SDelRelationToRelationReq::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SDelRelationToRelationReq::~S2SDelRelationToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDelRelationToRelationReq)
  SharedDtor();
}

void S2SDelRelationToRelationReq::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDelRelationToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDelRelationToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDelRelationToRelationReq& S2SDelRelationToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SDelRelationToRelationReq.base);
  return *internal_default_instance();
}


void S2SDelRelationToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDelRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDelRelationToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDelRelationToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDelRelationToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDelRelationToRelationReq)
  return false;
#undef DO_
}

void S2SDelRelationToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDelRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDelRelationToRelationReq)
}

::google::protobuf::uint8* S2SDelRelationToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDelRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDelRelationToRelationReq)
  return target;
}

size_t S2SDelRelationToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDelRelationToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDelRelationToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDelRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDelRelationToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDelRelationToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDelRelationToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDelRelationToRelationReq)
    MergeFrom(*source);
  }
}

void S2SDelRelationToRelationReq::MergeFrom(const S2SDelRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDelRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SDelRelationToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDelRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDelRelationToRelationReq::CopyFrom(const S2SDelRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDelRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDelRelationToRelationReq::IsInitialized() const {
  return true;
}

void S2SDelRelationToRelationReq::Swap(S2SDelRelationToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDelRelationToRelationReq::InternalSwap(S2SDelRelationToRelationReq* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDelRelationToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDelRelationToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDelRelationToGameAck::kRelationnameFieldNumber;
const int S2SDelRelationToGameAck::kPlayeridFieldNumber;
const int S2SDelRelationToGameAck::kRelationidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDelRelationToGameAck::S2SDelRelationToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SDelRelationToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDelRelationToGameAck)
}
S2SDelRelationToGameAck::S2SDelRelationToGameAck(const S2SDelRelationToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.relationname().size() > 0) {
    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&relationid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(relationid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDelRelationToGameAck)
}

void S2SDelRelationToGameAck::SharedCtor() {
  relationname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relationid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(relationid_));
}

S2SDelRelationToGameAck::~S2SDelRelationToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDelRelationToGameAck)
  SharedDtor();
}

void S2SDelRelationToGameAck::SharedDtor() {
  relationname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SDelRelationToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDelRelationToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDelRelationToGameAck& S2SDelRelationToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SDelRelationToGameAck.base);
  return *internal_default_instance();
}


void S2SDelRelationToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDelRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&relationid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(relationid_));
  _internal_metadata_.Clear();
}

bool S2SDelRelationToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDelRelationToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes relationname = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_relationname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 relationid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &relationid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDelRelationToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDelRelationToGameAck)
  return false;
#undef DO_
}

void S2SDelRelationToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDelRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->relationname(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 relationid = 3;
  if (this->relationid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->relationid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDelRelationToGameAck)
}

::google::protobuf::uint8* S2SDelRelationToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDelRelationToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->relationname(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 relationid = 3;
  if (this->relationid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->relationid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDelRelationToGameAck)
  return target;
}

size_t S2SDelRelationToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDelRelationToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes relationname = 1;
  if (this->relationname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->relationname());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 relationid = 3;
  if (this->relationid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->relationid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDelRelationToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDelRelationToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDelRelationToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDelRelationToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDelRelationToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDelRelationToGameAck)
    MergeFrom(*source);
  }
}

void S2SDelRelationToGameAck::MergeFrom(const S2SDelRelationToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDelRelationToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.relationname().size() > 0) {

    relationname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.relationname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.relationid() != 0) {
    set_relationid(from.relationid());
  }
}

void S2SDelRelationToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDelRelationToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDelRelationToGameAck::CopyFrom(const S2SDelRelationToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDelRelationToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDelRelationToGameAck::IsInitialized() const {
  return true;
}

void S2SDelRelationToGameAck::Swap(S2SDelRelationToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDelRelationToGameAck::InternalSwap(S2SDelRelationToGameAck* other) {
  using std::swap;
  relationname_.Swap(&other->relationname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(relationid_, other->relationid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDelRelationToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateFriendLinessToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateFriendLinessToRelationReq::kTypeFieldNumber;
const int S2SUpdateFriendLinessToRelationReq::kSelfplayeridFieldNumber;
const int S2SUpdateFriendLinessToRelationReq::kTargetplayeridFieldNumber;
const int S2SUpdateFriendLinessToRelationReq::kFriendlinessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateFriendLinessToRelationReq::S2SUpdateFriendLinessToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateFriendLinessToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateFriendLinessToRelationReq)
}
S2SUpdateFriendLinessToRelationReq::S2SUpdateFriendLinessToRelationReq(const S2SUpdateFriendLinessToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetplayerid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateFriendLinessToRelationReq)
}

void S2SUpdateFriendLinessToRelationReq::SharedCtor() {
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
}

S2SUpdateFriendLinessToRelationReq::~S2SUpdateFriendLinessToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateFriendLinessToRelationReq)
  SharedDtor();
}

void S2SUpdateFriendLinessToRelationReq::SharedDtor() {
}

void S2SUpdateFriendLinessToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateFriendLinessToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateFriendLinessToRelationReq& S2SUpdateFriendLinessToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateFriendLinessToRelationReq.base);
  return *internal_default_instance();
}


void S2SUpdateFriendLinessToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateFriendLinessToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 selfplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friendliness = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendliness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateFriendLinessToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateFriendLinessToRelationReq)
  return false;
#undef DO_
}

void S2SUpdateFriendLinessToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint64 selfplayerid = 2;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 3;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->targetplayerid(), output);
  }

  // uint32 friendliness = 4;
  if (this->friendliness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->friendliness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateFriendLinessToRelationReq)
}

::google::protobuf::uint8* S2SUpdateFriendLinessToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint64 selfplayerid = 2;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 3;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->targetplayerid(), target);
  }

  // uint32 friendliness = 4;
  if (this->friendliness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->friendliness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateFriendLinessToRelationReq)
  return target;
}

size_t S2SUpdateFriendLinessToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 selfplayerid = 2;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 friendliness = 4;
  if (this->friendliness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friendliness());
  }

  // uint64 targetplayerid = 3;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateFriendLinessToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateFriendLinessToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateFriendLinessToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateFriendLinessToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateFriendLinessToRelationReq)
    MergeFrom(*source);
  }
}

void S2SUpdateFriendLinessToRelationReq::MergeFrom(const S2SUpdateFriendLinessToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.friendliness() != 0) {
    set_friendliness(from.friendliness());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
}

void S2SUpdateFriendLinessToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateFriendLinessToRelationReq::CopyFrom(const S2SUpdateFriendLinessToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateFriendLinessToRelationReq::IsInitialized() const {
  return true;
}

void S2SUpdateFriendLinessToRelationReq::Swap(S2SUpdateFriendLinessToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateFriendLinessToRelationReq::InternalSwap(S2SUpdateFriendLinessToRelationReq* other) {
  using std::swap;
  swap(selfplayerid_, other->selfplayerid_);
  swap(type_, other->type_);
  swap(friendliness_, other->friendliness_);
  swap(targetplayerid_, other->targetplayerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateFriendLinessToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateFriendLinessToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateFriendLinessToGameAck::kPlayeridFieldNumber;
const int S2SUpdateFriendLinessToGameAck::kTargetplayeridFieldNumber;
const int S2SUpdateFriendLinessToGameAck::kFriendlinessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateFriendLinessToGameAck::S2SUpdateFriendLinessToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateFriendLinessToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateFriendLinessToGameAck)
}
S2SUpdateFriendLinessToGameAck::S2SUpdateFriendLinessToGameAck(const S2SUpdateFriendLinessToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&friendliness_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(friendliness_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateFriendLinessToGameAck)
}

void S2SUpdateFriendLinessToGameAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendliness_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(friendliness_));
}

S2SUpdateFriendLinessToGameAck::~S2SUpdateFriendLinessToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateFriendLinessToGameAck)
  SharedDtor();
}

void S2SUpdateFriendLinessToGameAck::SharedDtor() {
}

void S2SUpdateFriendLinessToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateFriendLinessToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateFriendLinessToGameAck& S2SUpdateFriendLinessToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateFriendLinessToGameAck.base);
  return *internal_default_instance();
}


void S2SUpdateFriendLinessToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendliness_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(friendliness_));
  _internal_metadata_.Clear();
}

bool S2SUpdateFriendLinessToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friendliness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendliness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateFriendLinessToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateFriendLinessToGameAck)
  return false;
#undef DO_
}

void S2SUpdateFriendLinessToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  // uint32 friendliness = 3;
  if (this->friendliness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->friendliness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateFriendLinessToGameAck)
}

::google::protobuf::uint8* S2SUpdateFriendLinessToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  // uint32 friendliness = 3;
  if (this->friendliness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->friendliness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateFriendLinessToGameAck)
  return target;
}

size_t S2SUpdateFriendLinessToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  // uint32 friendliness = 3;
  if (this->friendliness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friendliness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateFriendLinessToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateFriendLinessToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateFriendLinessToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateFriendLinessToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateFriendLinessToGameAck)
    MergeFrom(*source);
  }
}

void S2SUpdateFriendLinessToGameAck::MergeFrom(const S2SUpdateFriendLinessToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
  if (from.friendliness() != 0) {
    set_friendliness(from.friendliness());
  }
}

void S2SUpdateFriendLinessToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateFriendLinessToGameAck::CopyFrom(const S2SUpdateFriendLinessToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateFriendLinessToGameAck::IsInitialized() const {
  return true;
}

void S2SUpdateFriendLinessToGameAck::Swap(S2SUpdateFriendLinessToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateFriendLinessToGameAck::InternalSwap(S2SUpdateFriendLinessToGameAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(targetplayerid_, other->targetplayerid_);
  swap(friendliness_, other->friendliness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateFriendLinessToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRefuseRelationToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRefuseRelationToRelationReq::kRefusenameFieldNumber;
const int S2SRefuseRelationToRelationReq::kPlayeridFieldNumber;
const int S2SRefuseRelationToRelationReq::kRefusevalueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRefuseRelationToRelationReq::S2SRefuseRelationToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SRefuseRelationToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRefuseRelationToRelationReq)
}
S2SRefuseRelationToRelationReq::S2SRefuseRelationToRelationReq(const S2SRefuseRelationToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  refusename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.refusename().size() > 0) {
    refusename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refusename_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&refusevalue_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(refusevalue_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRefuseRelationToRelationReq)
}

void S2SRefuseRelationToRelationReq::SharedCtor() {
  refusename_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refusevalue_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(refusevalue_));
}

S2SRefuseRelationToRelationReq::~S2SRefuseRelationToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRefuseRelationToRelationReq)
  SharedDtor();
}

void S2SRefuseRelationToRelationReq::SharedDtor() {
  refusename_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SRefuseRelationToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRefuseRelationToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRefuseRelationToRelationReq& S2SRefuseRelationToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SRefuseRelationToRelationReq.base);
  return *internal_default_instance();
}


void S2SRefuseRelationToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRefuseRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  refusename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&refusevalue_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(refusevalue_));
  _internal_metadata_.Clear();
}

bool S2SRefuseRelationToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRefuseRelationToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes refusename = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_refusename()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 refusevalue = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &refusevalue_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRefuseRelationToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRefuseRelationToRelationReq)
  return false;
#undef DO_
}

void S2SRefuseRelationToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRefuseRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes refusename = 1;
  if (this->refusename().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->refusename(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 refusevalue = 3;
  if (this->refusevalue() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->refusevalue(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRefuseRelationToRelationReq)
}

::google::protobuf::uint8* S2SRefuseRelationToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRefuseRelationToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes refusename = 1;
  if (this->refusename().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->refusename(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 refusevalue = 3;
  if (this->refusevalue() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->refusevalue(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRefuseRelationToRelationReq)
  return target;
}

size_t S2SRefuseRelationToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRefuseRelationToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes refusename = 1;
  if (this->refusename().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->refusename());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 refusevalue = 3;
  if (this->refusevalue() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->refusevalue());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRefuseRelationToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRefuseRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRefuseRelationToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRefuseRelationToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRefuseRelationToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRefuseRelationToRelationReq)
    MergeFrom(*source);
  }
}

void S2SRefuseRelationToRelationReq::MergeFrom(const S2SRefuseRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRefuseRelationToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.refusename().size() > 0) {

    refusename_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.refusename_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.refusevalue() != 0) {
    set_refusevalue(from.refusevalue());
  }
}

void S2SRefuseRelationToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRefuseRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRefuseRelationToRelationReq::CopyFrom(const S2SRefuseRelationToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRefuseRelationToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRefuseRelationToRelationReq::IsInitialized() const {
  return true;
}

void S2SRefuseRelationToRelationReq::Swap(S2SRefuseRelationToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRefuseRelationToRelationReq::InternalSwap(S2SRefuseRelationToRelationReq* other) {
  using std::swap;
  refusename_.Swap(&other->refusename_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(refusevalue_, other->refusevalue_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRefuseRelationToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamCreateToTeamReq::InitAsDefaultInstance() {
  ::KFMsg::_S2STeamCreateToTeamReq_default_instance_._instance.get_mutable()->pbcaptain_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2STeamCreateToTeamReq::clear_pbcaptain() {
  if (GetArenaNoVirtual() == NULL && pbcaptain_ != NULL) {
    delete pbcaptain_;
  }
  pbcaptain_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamCreateToTeamReq::kIdFieldNumber;
const int S2STeamCreateToTeamReq::kNameFieldNumber;
const int S2STeamCreateToTeamReq::kInfoFieldNumber;
const int S2STeamCreateToTeamReq::kPbcaptainFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamCreateToTeamReq::S2STeamCreateToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamCreateToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamCreateToTeamReq)
}
S2STeamCreateToTeamReq::S2STeamCreateToTeamReq(const S2STeamCreateToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.info().size() > 0) {
    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.has_pbcaptain()) {
    pbcaptain_ = new ::KFMsg::PBObject(*from.pbcaptain_);
  } else {
    pbcaptain_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamCreateToTeamReq)
}

void S2STeamCreateToTeamReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&pbcaptain_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&pbcaptain_)) + sizeof(id_));
}

S2STeamCreateToTeamReq::~S2STeamCreateToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamCreateToTeamReq)
  SharedDtor();
}

void S2STeamCreateToTeamReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete pbcaptain_;
}

void S2STeamCreateToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamCreateToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamCreateToTeamReq& S2STeamCreateToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamCreateToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamCreateToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamCreateToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && pbcaptain_ != NULL) {
    delete pbcaptain_;
  }
  pbcaptain_ = NULL;
  id_ = 0u;
  _internal_metadata_.Clear();
}

bool S2STeamCreateToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamCreateToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes info = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_info()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbcaptain = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbcaptain()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamCreateToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamCreateToTeamReq)
  return false;
#undef DO_
}

void S2STeamCreateToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamCreateToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->name(), output);
  }

  // bytes info = 3;
  if (this->info().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->info(), output);
  }

  // .KFMsg.PBObject pbcaptain = 4;
  if (this->has_pbcaptain()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbcaptain(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamCreateToTeamReq)
}

::google::protobuf::uint8* S2STeamCreateToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamCreateToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->id(), target);
  }

  // bytes name = 2;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->name(), target);
  }

  // bytes info = 3;
  if (this->info().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->info(), target);
  }

  // .KFMsg.PBObject pbcaptain = 4;
  if (this->has_pbcaptain()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbcaptain(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamCreateToTeamReq)
  return target;
}

size_t S2STeamCreateToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamCreateToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 2;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes info = 3;
  if (this->info().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->info());
  }

  // .KFMsg.PBObject pbcaptain = 4;
  if (this->has_pbcaptain()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbcaptain_);
  }

  // uint32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamCreateToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamCreateToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamCreateToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamCreateToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamCreateToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamCreateToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamCreateToTeamReq::MergeFrom(const S2STeamCreateToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamCreateToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.info().size() > 0) {

    info_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.info_);
  }
  if (from.has_pbcaptain()) {
    mutable_pbcaptain()->::KFMsg::PBObject::MergeFrom(from.pbcaptain());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void S2STeamCreateToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamCreateToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamCreateToTeamReq::CopyFrom(const S2STeamCreateToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamCreateToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamCreateToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamCreateToTeamReq::Swap(S2STeamCreateToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamCreateToTeamReq::InternalSwap(S2STeamCreateToTeamReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  info_.Swap(&other->info_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(pbcaptain_, other->pbcaptain_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamCreateToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamJoinToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2STeamJoinToGameAck_default_instance_._instance.get_mutable()->pbteam_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2STeamJoinToGameAck::clear_pbteam() {
  if (GetArenaNoVirtual() == NULL && pbteam_ != NULL) {
    delete pbteam_;
  }
  pbteam_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamJoinToGameAck::kIdFieldNumber;
const int S2STeamJoinToGameAck::kPbteamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamJoinToGameAck::S2STeamJoinToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamJoinToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamJoinToGameAck)
}
S2STeamJoinToGameAck::S2STeamJoinToGameAck(const S2STeamJoinToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbteam()) {
    pbteam_ = new ::KFMsg::PBObject(*from.pbteam_);
  } else {
    pbteam_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamJoinToGameAck)
}

void S2STeamJoinToGameAck::SharedCtor() {
  ::memset(&pbteam_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&pbteam_)) + sizeof(id_));
}

S2STeamJoinToGameAck::~S2STeamJoinToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamJoinToGameAck)
  SharedDtor();
}

void S2STeamJoinToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbteam_;
}

void S2STeamJoinToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamJoinToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamJoinToGameAck& S2STeamJoinToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamJoinToGameAck.base);
  return *internal_default_instance();
}


void S2STeamJoinToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamJoinToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbteam_ != NULL) {
    delete pbteam_;
  }
  pbteam_ = NULL;
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2STeamJoinToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamJoinToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbteam = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbteam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamJoinToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamJoinToGameAck)
  return false;
#undef DO_
}

void S2STeamJoinToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamJoinToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .KFMsg.PBObject pbteam = 2;
  if (this->has_pbteam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbteam(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamJoinToGameAck)
}

::google::protobuf::uint8* S2STeamJoinToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamJoinToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .KFMsg.PBObject pbteam = 2;
  if (this->has_pbteam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbteam(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamJoinToGameAck)
  return target;
}

size_t S2STeamJoinToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamJoinToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbteam = 2;
  if (this->has_pbteam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbteam_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamJoinToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamJoinToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamJoinToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamJoinToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamJoinToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamJoinToGameAck)
    MergeFrom(*source);
  }
}

void S2STeamJoinToGameAck::MergeFrom(const S2STeamJoinToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamJoinToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbteam()) {
    mutable_pbteam()->::KFMsg::PBObject::MergeFrom(from.pbteam());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void S2STeamJoinToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamJoinToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamJoinToGameAck::CopyFrom(const S2STeamJoinToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamJoinToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamJoinToGameAck::IsInitialized() const {
  return true;
}

void S2STeamJoinToGameAck::Swap(S2STeamJoinToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamJoinToGameAck::InternalSwap(S2STeamJoinToGameAck* other) {
  using std::swap;
  swap(pbteam_, other->pbteam_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamJoinToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamJoinFailedToTeamReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamJoinFailedToTeamReq::kTeamidFieldNumber;
const int S2STeamJoinFailedToTeamReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamJoinFailedToTeamReq::S2STeamJoinFailedToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamJoinFailedToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamJoinFailedToTeamReq)
}
S2STeamJoinFailedToTeamReq::S2STeamJoinFailedToTeamReq(const S2STeamJoinFailedToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamJoinFailedToTeamReq)
}

void S2STeamJoinFailedToTeamReq::SharedCtor() {
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
}

S2STeamJoinFailedToTeamReq::~S2STeamJoinFailedToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamJoinFailedToTeamReq)
  SharedDtor();
}

void S2STeamJoinFailedToTeamReq::SharedDtor() {
}

void S2STeamJoinFailedToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamJoinFailedToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamJoinFailedToTeamReq& S2STeamJoinFailedToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamJoinFailedToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamJoinFailedToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamJoinFailedToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2STeamJoinFailedToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamJoinFailedToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamJoinFailedToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamJoinFailedToTeamReq)
  return false;
#undef DO_
}

void S2STeamJoinFailedToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamJoinFailedToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamJoinFailedToTeamReq)
}

::google::protobuf::uint8* S2STeamJoinFailedToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamJoinFailedToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamJoinFailedToTeamReq)
  return target;
}

size_t S2STeamJoinFailedToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamJoinFailedToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamJoinFailedToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamJoinFailedToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamJoinFailedToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamJoinFailedToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamJoinFailedToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamJoinFailedToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamJoinFailedToTeamReq::MergeFrom(const S2STeamJoinFailedToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamJoinFailedToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2STeamJoinFailedToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamJoinFailedToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamJoinFailedToTeamReq::CopyFrom(const S2STeamJoinFailedToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamJoinFailedToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamJoinFailedToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamJoinFailedToTeamReq::Swap(S2STeamJoinFailedToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamJoinFailedToTeamReq::InternalSwap(S2STeamJoinFailedToTeamReq* other) {
  using std::swap;
  swap(teamid_, other->teamid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamJoinFailedToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamOnlineQueryToTeamReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamOnlineQueryToTeamReq::kTeamidFieldNumber;
const int S2STeamOnlineQueryToTeamReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamOnlineQueryToTeamReq::S2STeamOnlineQueryToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamOnlineQueryToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamOnlineQueryToTeamReq)
}
S2STeamOnlineQueryToTeamReq::S2STeamOnlineQueryToTeamReq(const S2STeamOnlineQueryToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamOnlineQueryToTeamReq)
}

void S2STeamOnlineQueryToTeamReq::SharedCtor() {
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
}

S2STeamOnlineQueryToTeamReq::~S2STeamOnlineQueryToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamOnlineQueryToTeamReq)
  SharedDtor();
}

void S2STeamOnlineQueryToTeamReq::SharedDtor() {
}

void S2STeamOnlineQueryToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamOnlineQueryToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamOnlineQueryToTeamReq& S2STeamOnlineQueryToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamOnlineQueryToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamOnlineQueryToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamOnlineQueryToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2STeamOnlineQueryToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamOnlineQueryToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamOnlineQueryToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamOnlineQueryToTeamReq)
  return false;
#undef DO_
}

void S2STeamOnlineQueryToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamOnlineQueryToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamOnlineQueryToTeamReq)
}

::google::protobuf::uint8* S2STeamOnlineQueryToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamOnlineQueryToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamOnlineQueryToTeamReq)
  return target;
}

size_t S2STeamOnlineQueryToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamOnlineQueryToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamOnlineQueryToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamOnlineQueryToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamOnlineQueryToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamOnlineQueryToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamOnlineQueryToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamOnlineQueryToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamOnlineQueryToTeamReq::MergeFrom(const S2STeamOnlineQueryToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamOnlineQueryToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2STeamOnlineQueryToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamOnlineQueryToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamOnlineQueryToTeamReq::CopyFrom(const S2STeamOnlineQueryToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamOnlineQueryToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamOnlineQueryToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamOnlineQueryToTeamReq::Swap(S2STeamOnlineQueryToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamOnlineQueryToTeamReq::InternalSwap(S2STeamOnlineQueryToTeamReq* other) {
  using std::swap;
  swap(teamid_, other->teamid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamOnlineQueryToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamOnlineQueryToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2STeamOnlineQueryToGameAck_default_instance_._instance.get_mutable()->pbteam_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2STeamOnlineQueryToGameAck::clear_pbteam() {
  if (GetArenaNoVirtual() == NULL && pbteam_ != NULL) {
    delete pbteam_;
  }
  pbteam_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamOnlineQueryToGameAck::kPbteamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamOnlineQueryToGameAck::S2STeamOnlineQueryToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamOnlineQueryToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamOnlineQueryToGameAck)
}
S2STeamOnlineQueryToGameAck::S2STeamOnlineQueryToGameAck(const S2STeamOnlineQueryToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbteam()) {
    pbteam_ = new ::KFMsg::PBObject(*from.pbteam_);
  } else {
    pbteam_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamOnlineQueryToGameAck)
}

void S2STeamOnlineQueryToGameAck::SharedCtor() {
  pbteam_ = NULL;
}

S2STeamOnlineQueryToGameAck::~S2STeamOnlineQueryToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamOnlineQueryToGameAck)
  SharedDtor();
}

void S2STeamOnlineQueryToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbteam_;
}

void S2STeamOnlineQueryToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamOnlineQueryToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamOnlineQueryToGameAck& S2STeamOnlineQueryToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamOnlineQueryToGameAck.base);
  return *internal_default_instance();
}


void S2STeamOnlineQueryToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamOnlineQueryToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbteam_ != NULL) {
    delete pbteam_;
  }
  pbteam_ = NULL;
  _internal_metadata_.Clear();
}

bool S2STeamOnlineQueryToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamOnlineQueryToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBObject pbteam = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbteam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamOnlineQueryToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamOnlineQueryToGameAck)
  return false;
#undef DO_
}

void S2STeamOnlineQueryToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamOnlineQueryToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbteam = 1;
  if (this->has_pbteam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbteam(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamOnlineQueryToGameAck)
}

::google::protobuf::uint8* S2STeamOnlineQueryToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamOnlineQueryToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbteam = 1;
  if (this->has_pbteam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbteam(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamOnlineQueryToGameAck)
  return target;
}

size_t S2STeamOnlineQueryToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamOnlineQueryToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbteam = 1;
  if (this->has_pbteam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbteam_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamOnlineQueryToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamOnlineQueryToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamOnlineQueryToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamOnlineQueryToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamOnlineQueryToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamOnlineQueryToGameAck)
    MergeFrom(*source);
  }
}

void S2STeamOnlineQueryToGameAck::MergeFrom(const S2STeamOnlineQueryToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamOnlineQueryToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbteam()) {
    mutable_pbteam()->::KFMsg::PBObject::MergeFrom(from.pbteam());
  }
}

void S2STeamOnlineQueryToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamOnlineQueryToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamOnlineQueryToGameAck::CopyFrom(const S2STeamOnlineQueryToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamOnlineQueryToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamOnlineQueryToGameAck::IsInitialized() const {
  return true;
}

void S2STeamOnlineQueryToGameAck::Swap(S2STeamOnlineQueryToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamOnlineQueryToGameAck::InternalSwap(S2STeamOnlineQueryToGameAck* other) {
  using std::swap;
  swap(pbteam_, other->pbteam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamOnlineQueryToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse() {}
S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse::MergeFrom(const S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[83];
}
void S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2STeamIntValueToTeamReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamIntValueToTeamReq::kTeamidFieldNumber;
const int S2STeamIntValueToTeamReq::kPlayeridFieldNumber;
const int S2STeamIntValueToTeamReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamIntValueToTeamReq::S2STeamIntValueToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamIntValueToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamIntValueToTeamReq)
}
S2STeamIntValueToTeamReq::S2STeamIntValueToTeamReq(const S2STeamIntValueToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamIntValueToTeamReq)
}

void S2STeamIntValueToTeamReq::SharedCtor() {
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
}

S2STeamIntValueToTeamReq::~S2STeamIntValueToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamIntValueToTeamReq)
  SharedDtor();
}

void S2STeamIntValueToTeamReq::SharedDtor() {
}

void S2STeamIntValueToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamIntValueToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamIntValueToTeamReq& S2STeamIntValueToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamIntValueToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamIntValueToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamIntValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2STeamIntValueToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamIntValueToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint64> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2STeamIntValueToTeamReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamIntValueToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamIntValueToTeamReq)
  return false;
#undef DO_
}

void S2STeamIntValueToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamIntValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // map<string, uint64> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2STeamIntValueToTeamReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamIntValueToTeamReq)
}

::google::protobuf::uint8* S2STeamIntValueToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamIntValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // map<string, uint64> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2STeamIntValueToTeamReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamIntValueToTeamReq)
  return target;
}

size_t S2STeamIntValueToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamIntValueToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint64> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamIntValueToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamIntValueToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamIntValueToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamIntValueToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamIntValueToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamIntValueToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamIntValueToTeamReq::MergeFrom(const S2STeamIntValueToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamIntValueToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2STeamIntValueToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamIntValueToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamIntValueToTeamReq::CopyFrom(const S2STeamIntValueToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamIntValueToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamIntValueToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamIntValueToTeamReq::Swap(S2STeamIntValueToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamIntValueToTeamReq::InternalSwap(S2STeamIntValueToTeamReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  swap(teamid_, other->teamid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamIntValueToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse() {}
S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse::MergeFrom(const S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[85];
}
void S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2STeamStrValueToTeamReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamStrValueToTeamReq::kTeamidFieldNumber;
const int S2STeamStrValueToTeamReq::kPlayeridFieldNumber;
const int S2STeamStrValueToTeamReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamStrValueToTeamReq::S2STeamStrValueToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamStrValueToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamStrValueToTeamReq)
}
S2STeamStrValueToTeamReq::S2STeamStrValueToTeamReq(const S2STeamStrValueToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamStrValueToTeamReq)
}

void S2STeamStrValueToTeamReq::SharedCtor() {
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
}

S2STeamStrValueToTeamReq::~S2STeamStrValueToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamStrValueToTeamReq)
  SharedDtor();
}

void S2STeamStrValueToTeamReq::SharedDtor() {
}

void S2STeamStrValueToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamStrValueToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamStrValueToTeamReq& S2STeamStrValueToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamStrValueToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamStrValueToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamStrValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2STeamStrValueToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamStrValueToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2STeamStrValueToTeamReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamStrValueToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamStrValueToTeamReq)
  return false;
#undef DO_
}

void S2STeamStrValueToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamStrValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2STeamStrValueToTeamReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamStrValueToTeamReq)
}

::google::protobuf::uint8* S2STeamStrValueToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamStrValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2STeamStrValueToTeamReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamStrValueToTeamReq)
  return target;
}

size_t S2STeamStrValueToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamStrValueToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamStrValueToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamStrValueToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamStrValueToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamStrValueToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamStrValueToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamStrValueToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamStrValueToTeamReq::MergeFrom(const S2STeamStrValueToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamStrValueToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2STeamStrValueToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamStrValueToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamStrValueToTeamReq::CopyFrom(const S2STeamStrValueToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamStrValueToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamStrValueToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamStrValueToTeamReq::Swap(S2STeamStrValueToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamStrValueToTeamReq::InternalSwap(S2STeamStrValueToTeamReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  swap(teamid_, other->teamid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamStrValueToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse() {}
S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse::MergeFrom(const S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[87];
}
void S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2STeamMemberIntValueToTeamReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamMemberIntValueToTeamReq::kTeamidFieldNumber;
const int S2STeamMemberIntValueToTeamReq::kPlayeridFieldNumber;
const int S2STeamMemberIntValueToTeamReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamMemberIntValueToTeamReq::S2STeamMemberIntValueToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamMemberIntValueToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamMemberIntValueToTeamReq)
}
S2STeamMemberIntValueToTeamReq::S2STeamMemberIntValueToTeamReq(const S2STeamMemberIntValueToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamMemberIntValueToTeamReq)
}

void S2STeamMemberIntValueToTeamReq::SharedCtor() {
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
}

S2STeamMemberIntValueToTeamReq::~S2STeamMemberIntValueToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamMemberIntValueToTeamReq)
  SharedDtor();
}

void S2STeamMemberIntValueToTeamReq::SharedDtor() {
}

void S2STeamMemberIntValueToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamMemberIntValueToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamMemberIntValueToTeamReq& S2STeamMemberIntValueToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamMemberIntValueToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamMemberIntValueToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamMemberIntValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2STeamMemberIntValueToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamMemberIntValueToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, uint64> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse,
              ::std::string, ::google::protobuf::uint64,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
              0 >,
            ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2STeamMemberIntValueToTeamReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamMemberIntValueToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamMemberIntValueToTeamReq)
  return false;
#undef DO_
}

void S2STeamMemberIntValueToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamMemberIntValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // map<string, uint64> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2STeamMemberIntValueToTeamReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamMemberIntValueToTeamReq)
}

::google::protobuf::uint8* S2STeamMemberIntValueToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamMemberIntValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // map<string, uint64> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2STeamMemberIntValueToTeamReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamMemberIntValueToTeamReq)
  return target;
}

size_t S2STeamMemberIntValueToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamMemberIntValueToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, uint64> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamMemberIntValueToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamMemberIntValueToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamMemberIntValueToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamMemberIntValueToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamMemberIntValueToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamMemberIntValueToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamMemberIntValueToTeamReq::MergeFrom(const S2STeamMemberIntValueToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamMemberIntValueToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2STeamMemberIntValueToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamMemberIntValueToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamMemberIntValueToTeamReq::CopyFrom(const S2STeamMemberIntValueToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamMemberIntValueToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamMemberIntValueToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamMemberIntValueToTeamReq::Swap(S2STeamMemberIntValueToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamMemberIntValueToTeamReq::InternalSwap(S2STeamMemberIntValueToTeamReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  swap(teamid_, other->teamid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamMemberIntValueToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse() {}
S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse::MergeFrom(const S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[89];
}
void S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2STeamMemberStrValueToTeamReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamMemberStrValueToTeamReq::kTeamidFieldNumber;
const int S2STeamMemberStrValueToTeamReq::kPlayeridFieldNumber;
const int S2STeamMemberStrValueToTeamReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamMemberStrValueToTeamReq::S2STeamMemberStrValueToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamMemberStrValueToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamMemberStrValueToTeamReq)
}
S2STeamMemberStrValueToTeamReq::S2STeamMemberStrValueToTeamReq(const S2STeamMemberStrValueToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamMemberStrValueToTeamReq)
}

void S2STeamMemberStrValueToTeamReq::SharedCtor() {
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
}

S2STeamMemberStrValueToTeamReq::~S2STeamMemberStrValueToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamMemberStrValueToTeamReq)
  SharedDtor();
}

void S2STeamMemberStrValueToTeamReq::SharedDtor() {
}

void S2STeamMemberStrValueToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamMemberStrValueToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamMemberStrValueToTeamReq& S2STeamMemberStrValueToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamMemberStrValueToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamMemberStrValueToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamMemberStrValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2STeamMemberStrValueToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamMemberStrValueToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2STeamMemberStrValueToTeamReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamMemberStrValueToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamMemberStrValueToTeamReq)
  return false;
#undef DO_
}

void S2STeamMemberStrValueToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamMemberStrValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2STeamMemberStrValueToTeamReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamMemberStrValueToTeamReq)
}

::google::protobuf::uint8* S2STeamMemberStrValueToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamMemberStrValueToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2STeamMemberStrValueToTeamReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamMemberStrValueToTeamReq)
  return target;
}

size_t S2STeamMemberStrValueToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamMemberStrValueToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamMemberStrValueToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamMemberStrValueToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamMemberStrValueToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamMemberStrValueToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamMemberStrValueToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamMemberStrValueToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamMemberStrValueToTeamReq::MergeFrom(const S2STeamMemberStrValueToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamMemberStrValueToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2STeamMemberStrValueToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamMemberStrValueToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamMemberStrValueToTeamReq::CopyFrom(const S2STeamMemberStrValueToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamMemberStrValueToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamMemberStrValueToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamMemberStrValueToTeamReq::Swap(S2STeamMemberStrValueToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamMemberStrValueToTeamReq::InternalSwap(S2STeamMemberStrValueToTeamReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  swap(teamid_, other->teamid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamMemberStrValueToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamLeaveToTeamReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamLeaveToTeamReq::kTeamidFieldNumber;
const int S2STeamLeaveToTeamReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamLeaveToTeamReq::S2STeamLeaveToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamLeaveToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamLeaveToTeamReq)
}
S2STeamLeaveToTeamReq::S2STeamLeaveToTeamReq(const S2STeamLeaveToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&playerid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamLeaveToTeamReq)
}

void S2STeamLeaveToTeamReq::SharedCtor() {
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
}

S2STeamLeaveToTeamReq::~S2STeamLeaveToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamLeaveToTeamReq)
  SharedDtor();
}

void S2STeamLeaveToTeamReq::SharedDtor() {
}

void S2STeamLeaveToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamLeaveToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamLeaveToTeamReq& S2STeamLeaveToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamLeaveToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamLeaveToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamLeaveToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(playerid_));
  _internal_metadata_.Clear();
}

bool S2STeamLeaveToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamLeaveToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamLeaveToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamLeaveToTeamReq)
  return false;
#undef DO_
}

void S2STeamLeaveToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamLeaveToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamLeaveToTeamReq)
}

::google::protobuf::uint8* S2STeamLeaveToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamLeaveToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamLeaveToTeamReq)
  return target;
}

size_t S2STeamLeaveToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamLeaveToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamLeaveToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamLeaveToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamLeaveToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamLeaveToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamLeaveToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamLeaveToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamLeaveToTeamReq::MergeFrom(const S2STeamLeaveToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamLeaveToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2STeamLeaveToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamLeaveToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamLeaveToTeamReq::CopyFrom(const S2STeamLeaveToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamLeaveToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamLeaveToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamLeaveToTeamReq::Swap(S2STeamLeaveToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamLeaveToTeamReq::InternalSwap(S2STeamLeaveToTeamReq* other) {
  using std::swap;
  swap(teamid_, other->teamid_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamLeaveToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamKickToTeamReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamKickToTeamReq::kTeamidFieldNumber;
const int S2STeamKickToTeamReq::kCaptainidFieldNumber;
const int S2STeamKickToTeamReq::kMemberidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamKickToTeamReq::S2STeamKickToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamKickToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamKickToTeamReq)
}
S2STeamKickToTeamReq::S2STeamKickToTeamReq(const S2STeamKickToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&memberid_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(memberid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamKickToTeamReq)
}

void S2STeamKickToTeamReq::SharedCtor() {
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memberid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(memberid_));
}

S2STeamKickToTeamReq::~S2STeamKickToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamKickToTeamReq)
  SharedDtor();
}

void S2STeamKickToTeamReq::SharedDtor() {
}

void S2STeamKickToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamKickToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamKickToTeamReq& S2STeamKickToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamKickToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamKickToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamKickToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&memberid_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(memberid_));
  _internal_metadata_.Clear();
}

bool S2STeamKickToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamKickToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 captainid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &captainid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 memberid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &memberid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamKickToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamKickToTeamReq)
  return false;
#undef DO_
}

void S2STeamKickToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamKickToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // uint64 captainid = 2;
  if (this->captainid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->captainid(), output);
  }

  // uint64 memberid = 3;
  if (this->memberid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->memberid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamKickToTeamReq)
}

::google::protobuf::uint8* S2STeamKickToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamKickToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // uint64 captainid = 2;
  if (this->captainid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->captainid(), target);
  }

  // uint64 memberid = 3;
  if (this->memberid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->memberid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamKickToTeamReq)
  return target;
}

size_t S2STeamKickToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamKickToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // uint64 captainid = 2;
  if (this->captainid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->captainid());
  }

  // uint64 memberid = 3;
  if (this->memberid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->memberid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamKickToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamKickToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamKickToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamKickToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamKickToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamKickToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamKickToTeamReq::MergeFrom(const S2STeamKickToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamKickToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.captainid() != 0) {
    set_captainid(from.captainid());
  }
  if (from.memberid() != 0) {
    set_memberid(from.memberid());
  }
}

void S2STeamKickToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamKickToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamKickToTeamReq::CopyFrom(const S2STeamKickToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamKickToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamKickToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamKickToTeamReq::Swap(S2STeamKickToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamKickToTeamReq::InternalSwap(S2STeamKickToTeamReq* other) {
  using std::swap;
  swap(teamid_, other->teamid_);
  swap(captainid_, other->captainid_);
  swap(memberid_, other->memberid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamKickToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamLeaveToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamLeaveToGameAck::kTeamidFieldNumber;
const int S2STeamLeaveToGameAck::kTypeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamLeaveToGameAck::S2STeamLeaveToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamLeaveToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamLeaveToGameAck)
}
S2STeamLeaveToGameAck::S2STeamLeaveToGameAck(const S2STeamLeaveToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&teamid_, &from.teamid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&teamid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamLeaveToGameAck)
}

void S2STeamLeaveToGameAck::SharedCtor() {
  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(type_));
}

S2STeamLeaveToGameAck::~S2STeamLeaveToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamLeaveToGameAck)
  SharedDtor();
}

void S2STeamLeaveToGameAck::SharedDtor() {
}

void S2STeamLeaveToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamLeaveToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamLeaveToGameAck& S2STeamLeaveToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamLeaveToGameAck.base);
  return *internal_default_instance();
}


void S2STeamLeaveToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamLeaveToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&teamid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&teamid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2STeamLeaveToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamLeaveToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 type = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamLeaveToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamLeaveToGameAck)
  return false;
#undef DO_
}

void S2STeamLeaveToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamLeaveToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->type(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamLeaveToGameAck)
}

::google::protobuf::uint8* S2STeamLeaveToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamLeaveToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->type(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamLeaveToGameAck)
  return target;
}

size_t S2STeamLeaveToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamLeaveToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  // uint32 type = 2;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamLeaveToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamLeaveToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamLeaveToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamLeaveToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamLeaveToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamLeaveToGameAck)
    MergeFrom(*source);
  }
}

void S2STeamLeaveToGameAck::MergeFrom(const S2STeamLeaveToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamLeaveToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2STeamLeaveToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamLeaveToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamLeaveToGameAck::CopyFrom(const S2STeamLeaveToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamLeaveToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamLeaveToGameAck::IsInitialized() const {
  return true;
}

void S2STeamLeaveToGameAck::Swap(S2STeamLeaveToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamLeaveToGameAck::InternalSwap(S2STeamLeaveToGameAck* other) {
  using std::swap;
  swap(teamid_, other->teamid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamLeaveToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamTellInviteToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2STeamTellInviteToGameAck_default_instance_._instance.get_mutable()->pbplayer_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
  ::KFMsg::_S2STeamTellInviteToGameAck_default_instance_._instance.get_mutable()->pbteam_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2STeamTellInviteToGameAck::clear_pbplayer() {
  if (GetArenaNoVirtual() == NULL && pbplayer_ != NULL) {
    delete pbplayer_;
  }
  pbplayer_ = NULL;
}
void S2STeamTellInviteToGameAck::clear_pbteam() {
  if (GetArenaNoVirtual() == NULL && pbteam_ != NULL) {
    delete pbteam_;
  }
  pbteam_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamTellInviteToGameAck::kPbplayerFieldNumber;
const int S2STeamTellInviteToGameAck::kPbteamFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamTellInviteToGameAck::S2STeamTellInviteToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamTellInviteToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamTellInviteToGameAck)
}
S2STeamTellInviteToGameAck::S2STeamTellInviteToGameAck(const S2STeamTellInviteToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbplayer()) {
    pbplayer_ = new ::KFMsg::PBObject(*from.pbplayer_);
  } else {
    pbplayer_ = NULL;
  }
  if (from.has_pbteam()) {
    pbteam_ = new ::KFMsg::PBObject(*from.pbteam_);
  } else {
    pbteam_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamTellInviteToGameAck)
}

void S2STeamTellInviteToGameAck::SharedCtor() {
  ::memset(&pbplayer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&pbteam_) -
      reinterpret_cast<char*>(&pbplayer_)) + sizeof(pbteam_));
}

S2STeamTellInviteToGameAck::~S2STeamTellInviteToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamTellInviteToGameAck)
  SharedDtor();
}

void S2STeamTellInviteToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbplayer_;
  if (this != internal_default_instance()) delete pbteam_;
}

void S2STeamTellInviteToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamTellInviteToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamTellInviteToGameAck& S2STeamTellInviteToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamTellInviteToGameAck.base);
  return *internal_default_instance();
}


void S2STeamTellInviteToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamTellInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbplayer_ != NULL) {
    delete pbplayer_;
  }
  pbplayer_ = NULL;
  if (GetArenaNoVirtual() == NULL && pbteam_ != NULL) {
    delete pbteam_;
  }
  pbteam_ = NULL;
  _internal_metadata_.Clear();
}

bool S2STeamTellInviteToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamTellInviteToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBObject pbplayer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbplayer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbteam = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbteam()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamTellInviteToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamTellInviteToGameAck)
  return false;
#undef DO_
}

void S2STeamTellInviteToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamTellInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbplayer = 1;
  if (this->has_pbplayer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbplayer(), output);
  }

  // .KFMsg.PBObject pbteam = 2;
  if (this->has_pbteam()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbteam(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamTellInviteToGameAck)
}

::google::protobuf::uint8* S2STeamTellInviteToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamTellInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbplayer = 1;
  if (this->has_pbplayer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbplayer(), deterministic, target);
  }

  // .KFMsg.PBObject pbteam = 2;
  if (this->has_pbteam()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbteam(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamTellInviteToGameAck)
  return target;
}

size_t S2STeamTellInviteToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamTellInviteToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbplayer = 1;
  if (this->has_pbplayer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbplayer_);
  }

  // .KFMsg.PBObject pbteam = 2;
  if (this->has_pbteam()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbteam_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamTellInviteToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamTellInviteToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamTellInviteToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamTellInviteToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamTellInviteToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamTellInviteToGameAck)
    MergeFrom(*source);
  }
}

void S2STeamTellInviteToGameAck::MergeFrom(const S2STeamTellInviteToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamTellInviteToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbplayer()) {
    mutable_pbplayer()->::KFMsg::PBObject::MergeFrom(from.pbplayer());
  }
  if (from.has_pbteam()) {
    mutable_pbteam()->::KFMsg::PBObject::MergeFrom(from.pbteam());
  }
}

void S2STeamTellInviteToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamTellInviteToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamTellInviteToGameAck::CopyFrom(const S2STeamTellInviteToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamTellInviteToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamTellInviteToGameAck::IsInitialized() const {
  return true;
}

void S2STeamTellInviteToGameAck::Swap(S2STeamTellInviteToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamTellInviteToGameAck::InternalSwap(S2STeamTellInviteToGameAck* other) {
  using std::swap;
  swap(pbplayer_, other->pbplayer_);
  swap(pbteam_, other->pbteam_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamTellInviteToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamTellApplyToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2STeamTellApplyToGameAck_default_instance_._instance.get_mutable()->pbplayer_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2STeamTellApplyToGameAck::clear_pbplayer() {
  if (GetArenaNoVirtual() == NULL && pbplayer_ != NULL) {
    delete pbplayer_;
  }
  pbplayer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamTellApplyToGameAck::kPbplayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamTellApplyToGameAck::S2STeamTellApplyToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamTellApplyToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamTellApplyToGameAck)
}
S2STeamTellApplyToGameAck::S2STeamTellApplyToGameAck(const S2STeamTellApplyToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbplayer()) {
    pbplayer_ = new ::KFMsg::PBObject(*from.pbplayer_);
  } else {
    pbplayer_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamTellApplyToGameAck)
}

void S2STeamTellApplyToGameAck::SharedCtor() {
  pbplayer_ = NULL;
}

S2STeamTellApplyToGameAck::~S2STeamTellApplyToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamTellApplyToGameAck)
  SharedDtor();
}

void S2STeamTellApplyToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbplayer_;
}

void S2STeamTellApplyToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamTellApplyToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamTellApplyToGameAck& S2STeamTellApplyToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamTellApplyToGameAck.base);
  return *internal_default_instance();
}


void S2STeamTellApplyToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamTellApplyToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbplayer_ != NULL) {
    delete pbplayer_;
  }
  pbplayer_ = NULL;
  _internal_metadata_.Clear();
}

bool S2STeamTellApplyToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamTellApplyToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBObject pbplayer = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbplayer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamTellApplyToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamTellApplyToGameAck)
  return false;
#undef DO_
}

void S2STeamTellApplyToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamTellApplyToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbplayer = 1;
  if (this->has_pbplayer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pbplayer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamTellApplyToGameAck)
}

::google::protobuf::uint8* S2STeamTellApplyToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamTellApplyToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBObject pbplayer = 1;
  if (this->has_pbplayer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pbplayer(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamTellApplyToGameAck)
  return target;
}

size_t S2STeamTellApplyToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamTellApplyToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbplayer = 1;
  if (this->has_pbplayer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbplayer_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamTellApplyToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamTellApplyToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamTellApplyToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamTellApplyToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamTellApplyToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamTellApplyToGameAck)
    MergeFrom(*source);
  }
}

void S2STeamTellApplyToGameAck::MergeFrom(const S2STeamTellApplyToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamTellApplyToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbplayer()) {
    mutable_pbplayer()->::KFMsg::PBObject::MergeFrom(from.pbplayer());
  }
}

void S2STeamTellApplyToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamTellApplyToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamTellApplyToGameAck::CopyFrom(const S2STeamTellApplyToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamTellApplyToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamTellApplyToGameAck::IsInitialized() const {
  return true;
}

void S2STeamTellApplyToGameAck::Swap(S2STeamTellApplyToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamTellApplyToGameAck::InternalSwap(S2STeamTellApplyToGameAck* other) {
  using std::swap;
  swap(pbplayer_, other->pbplayer_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamTellApplyToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STeamAgreeToTeamReq::InitAsDefaultInstance() {
  ::KFMsg::_S2STeamAgreeToTeamReq_default_instance_._instance.get_mutable()->pbplayer_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2STeamAgreeToTeamReq::clear_pbplayer() {
  if (GetArenaNoVirtual() == NULL && pbplayer_ != NULL) {
    delete pbplayer_;
  }
  pbplayer_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STeamAgreeToTeamReq::kTeamidFieldNumber;
const int S2STeamAgreeToTeamReq::kPbplayerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STeamAgreeToTeamReq::S2STeamAgreeToTeamReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STeamAgreeToTeamReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STeamAgreeToTeamReq)
}
S2STeamAgreeToTeamReq::S2STeamAgreeToTeamReq(const S2STeamAgreeToTeamReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbplayer()) {
    pbplayer_ = new ::KFMsg::PBObject(*from.pbplayer_);
  } else {
    pbplayer_ = NULL;
  }
  teamid_ = from.teamid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STeamAgreeToTeamReq)
}

void S2STeamAgreeToTeamReq::SharedCtor() {
  ::memset(&pbplayer_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&teamid_) -
      reinterpret_cast<char*>(&pbplayer_)) + sizeof(teamid_));
}

S2STeamAgreeToTeamReq::~S2STeamAgreeToTeamReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STeamAgreeToTeamReq)
  SharedDtor();
}

void S2STeamAgreeToTeamReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbplayer_;
}

void S2STeamAgreeToTeamReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STeamAgreeToTeamReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STeamAgreeToTeamReq& S2STeamAgreeToTeamReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STeamAgreeToTeamReq.base);
  return *internal_default_instance();
}


void S2STeamAgreeToTeamReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STeamAgreeToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbplayer_ != NULL) {
    delete pbplayer_;
  }
  pbplayer_ = NULL;
  teamid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2STeamAgreeToTeamReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STeamAgreeToTeamReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 teamid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &teamid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject pbplayer = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbplayer()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STeamAgreeToTeamReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STeamAgreeToTeamReq)
  return false;
#undef DO_
}

void S2STeamAgreeToTeamReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STeamAgreeToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->teamid(), output);
  }

  // .KFMsg.PBObject pbplayer = 2;
  if (this->has_pbplayer()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbplayer(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STeamAgreeToTeamReq)
}

::google::protobuf::uint8* S2STeamAgreeToTeamReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STeamAgreeToTeamReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->teamid(), target);
  }

  // .KFMsg.PBObject pbplayer = 2;
  if (this->has_pbplayer()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbplayer(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STeamAgreeToTeamReq)
  return target;
}

size_t S2STeamAgreeToTeamReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STeamAgreeToTeamReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject pbplayer = 2;
  if (this->has_pbplayer()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbplayer_);
  }

  // uint64 teamid = 1;
  if (this->teamid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->teamid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STeamAgreeToTeamReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STeamAgreeToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STeamAgreeToTeamReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STeamAgreeToTeamReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STeamAgreeToTeamReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STeamAgreeToTeamReq)
    MergeFrom(*source);
  }
}

void S2STeamAgreeToTeamReq::MergeFrom(const S2STeamAgreeToTeamReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STeamAgreeToTeamReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbplayer()) {
    mutable_pbplayer()->::KFMsg::PBObject::MergeFrom(from.pbplayer());
  }
  if (from.teamid() != 0) {
    set_teamid(from.teamid());
  }
}

void S2STeamAgreeToTeamReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STeamAgreeToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STeamAgreeToTeamReq::CopyFrom(const S2STeamAgreeToTeamReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STeamAgreeToTeamReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STeamAgreeToTeamReq::IsInitialized() const {
  return true;
}

void S2STeamAgreeToTeamReq::Swap(S2STeamAgreeToTeamReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STeamAgreeToTeamReq::InternalSwap(S2STeamAgreeToTeamReq* other) {
  using std::swap;
  swap(pbplayer_, other->pbplayer_);
  swap(teamid_, other->teamid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STeamAgreeToTeamReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddGateToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddGateToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddGateToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRemoveGateToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRemoveGateToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRemoveGateToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToLoginReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToLoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToGateAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToGateAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToGateAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToLoginAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToLoginAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToLoginAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SEnterToGateAck* Arena::CreateMaybeMessage< ::KFMsg::S2SEnterToGateAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SEnterToGateAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLogoutToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLogoutToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLogoutToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDisconnectToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDisconnectToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDisconnectToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLeaveToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLeaveToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLeaveToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SConnectToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SConnectToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SConnectToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SReLoginToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SReLoginToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SReLoginToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SReLoginToGateAck* Arena::CreateMaybeMessage< ::KFMsg::S2SReLoginToGateAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SReLoginToGateAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoadPlayerToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoadPlayerToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoadPlayerToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoadPlayerToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoadPlayerToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoadPlayerToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSavePlayerToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSavePlayerToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSavePlayerToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSavePlayerToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SSavePlayerToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSavePlayerToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryPlayerToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryPlayerToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryPlayerToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryPlayerToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryPlayerToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryPlayerToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSyncUpdateDataFromServer* Arena::CreateMaybeMessage< ::KFMsg::S2SSyncUpdateDataFromServer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSyncUpdateDataFromServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSyncAddDataFromServer* Arena::CreateMaybeMessage< ::KFMsg::S2SSyncAddDataFromServer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSyncAddDataFromServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSyncRemoveDataFromServer* Arena::CreateMaybeMessage< ::KFMsg::S2SSyncRemoveDataFromServer >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSyncRemoveDataFromServer >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerEnterToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerEnterToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerEnterToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLeaveToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLeaveToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLeaveToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickPlayerToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickPlayerToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickPlayerToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickPlayerToGateReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickPlayerToGateReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickPlayerToGateReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGateReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGateReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGateReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToServerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToServerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToServerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToWorldAck* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToWorldAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToWorldAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMail_DataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBMail_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMail_DataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMail* Arena::CreateMaybeMessage< ::KFMsg::PBMail >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryMailAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryMailAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryMailAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SNoticeNewMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SNoticeNewMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SNoticeNewMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SNewPlayerMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SNewPlayerMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SNewPlayerMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateMailStatusReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateMailStatusReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateMailStatusReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateMailStatusAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateMailStatusAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateMailStatusAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SNoticeRankWorkerReq* Arena::CreateMaybeMessage< ::KFMsg::S2SNoticeRankWorkerReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SNoticeRankWorkerReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSyncRefreshRank* Arena::CreateMaybeMessage< ::KFMsg::S2SSyncRefreshRank >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSyncRefreshRank >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateRankDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateRankDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateRankDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRankListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRankListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRankListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendRankListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendRankListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendRankListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateIntValueToBasicReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateIntValueToBasicReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateIntValueToBasicReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateStrValueToBasicReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateStrValueToBasicReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateStrValueToBasicReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SClearOnlineToBasicReq* Arena::CreateMaybeMessage< ::KFMsg::S2SClearOnlineToBasicReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SClearOnlineToBasicReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryAttributeToBasicReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryAttributeToBasicReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryAttributeToBasicReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryAttributeToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryAttributeToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryAttributeToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSetPlayerNameToBasicReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSetPlayerNameToBasicReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSetPlayerNameToBasicReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSetPlayerNameToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SSetPlayerNameToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSetPlayerNameToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRelation_BasicdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBRelation_BasicdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRelation_BasicdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRelation_RelationdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBRelation_RelationdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRelation_RelationdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRelation* Arena::CreateMaybeMessage< ::KFMsg::PBRelation >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRelation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRelationToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRelationToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRelationToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRelationToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRelationToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRelationToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRelationInviteToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRelationInviteToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRelationInviteToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRelationInviteToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRelationInviteToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRelationInviteToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateIntValueToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateIntValueToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateIntValueToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateStrValueToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateStrValueToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateStrValueToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SApplyAddRelationToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SApplyAddRelationToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SApplyAddRelationToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SApplyAddRelationToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SApplyAddRelationToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SApplyAddRelationToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDelRelationInviteToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDelRelationInviteToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDelRelationInviteToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddRelationToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddRelationToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddRelationToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddRelationToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SAddRelationToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddRelationToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDelRelationToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDelRelationToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDelRelationToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDelRelationToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SDelRelationToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDelRelationToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateFriendLinessToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateFriendLinessToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateFriendLinessToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateFriendLinessToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateFriendLinessToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateFriendLinessToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRefuseRelationToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRefuseRelationToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRefuseRelationToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamCreateToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamCreateToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamCreateToTeamReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamJoinToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2STeamJoinToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamJoinToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamJoinFailedToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamJoinFailedToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamJoinFailedToTeamReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamOnlineQueryToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamOnlineQueryToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamOnlineQueryToTeamReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamOnlineQueryToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2STeamOnlineQueryToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamOnlineQueryToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamIntValueToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamIntValueToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamIntValueToTeamReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamStrValueToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamStrValueToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamStrValueToTeamReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamMemberIntValueToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamMemberIntValueToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamMemberIntValueToTeamReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamMemberStrValueToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamMemberStrValueToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamMemberStrValueToTeamReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamLeaveToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamLeaveToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamLeaveToTeamReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamKickToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamKickToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamKickToTeamReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamLeaveToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2STeamLeaveToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamLeaveToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamTellInviteToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2STeamTellInviteToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamTellInviteToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamTellApplyToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2STeamTellApplyToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamTellApplyToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STeamAgreeToTeamReq* Arena::CreateMaybeMessage< ::KFMsg::S2STeamAgreeToTeamReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STeamAgreeToTeamReq >(arena);
}
}  // namespace protobuf
}  // namespace google

#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif

// @@protoc_insertion_point(global_scope)
