// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameServerMessage.proto

#include "FrameServerMessage.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_FrameDefineMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBLoginData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBRankData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameDefineMessage_2eproto ::google::protobuf::internal::SCCInfo<7> scc_info_PBObject;
}  // namespace protobuf_FrameDefineMessage_2eproto
namespace protobuf_FrameServerMessage_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBMail_DataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBRelation_PlayerdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBRelation_RelationdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_PBZoneData;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryBasicToGameAck_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_PBMail;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_PBRelation;
}  // namespace protobuf_FrameServerMessage_2eproto
namespace KFMsg {
class PBZoneDataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBZoneData>
      _instance;
} _PBZoneData_default_instance_;
class S2SUpdateZoneToLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateZoneToLoginReq>
      _instance;
} _S2SUpdateZoneToLoginReq_default_instance_;
class S2SAddGateToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddGateToWorldReq>
      _instance;
} _S2SAddGateToWorldReq_default_instance_;
class S2SRemoveGateToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRemoveGateToWorldReq>
      _instance;
} _S2SRemoveGateToWorldReq_default_instance_;
class S2SLoginToLoginReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToLoginReq>
      _instance;
} _S2SLoginToLoginReq_default_instance_;
class S2SLoginToGateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToGateAck>
      _instance;
} _S2SLoginToGateAck_default_instance_;
class S2SLoginToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToWorldReq>
      _instance;
} _S2SLoginToWorldReq_default_instance_;
class S2SLoginToLoginAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToLoginAck>
      _instance;
} _S2SLoginToLoginAck_default_instance_;
class S2SLoginToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoginToGameReq>
      _instance;
} _S2SLoginToGameReq_default_instance_;
class S2SEnterToGateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SEnterToGateAck>
      _instance;
} _S2SEnterToGateAck_default_instance_;
class S2SLogoutToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLogoutToGameReq>
      _instance;
} _S2SLogoutToGameReq_default_instance_;
class S2SDisconnectToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDisconnectToGameReq>
      _instance;
} _S2SDisconnectToGameReq_default_instance_;
class S2SLeaveToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLeaveToGameReq>
      _instance;
} _S2SLeaveToGameReq_default_instance_;
class S2SReLoginToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SReLoginToGameReq>
      _instance;
} _S2SReLoginToGameReq_default_instance_;
class S2SReLoginToGateAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SReLoginToGateAck>
      _instance;
} _S2SReLoginToGateAck_default_instance_;
class S2SLoadPlayerToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoadPlayerToDataReq>
      _instance;
} _S2SLoadPlayerToDataReq_default_instance_;
class S2SLoadPlayerToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SLoadPlayerToGameAck>
      _instance;
} _S2SLoadPlayerToGameAck_default_instance_;
class S2SSavePlayerToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSavePlayerToDataReq>
      _instance;
} _S2SSavePlayerToDataReq_default_instance_;
class S2SSavePlayerToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSavePlayerToGameAck>
      _instance;
} _S2SSavePlayerToGameAck_default_instance_;
class S2SQueryPlayerToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryPlayerToDataReq>
      _instance;
} _S2SQueryPlayerToDataReq_default_instance_;
class S2SQueryPlayerToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryPlayerToGameAck>
      _instance;
} _S2SQueryPlayerToGameAck_default_instance_;
class S2SSetPlayerNameToDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSetPlayerNameToDataReq>
      _instance;
} _S2SSetPlayerNameToDataReq_default_instance_;
class S2SSetPlayerNameToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SSetPlayerNameToGameAck>
      _instance;
} _S2SSetPlayerNameToGameAck_default_instance_;
class S2SPlayerEnterToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerEnterToWorldReq>
      _instance;
} _S2SPlayerEnterToWorldReq_default_instance_;
class S2SPlayerLeaveToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SPlayerLeaveToWorldReq>
      _instance;
} _S2SPlayerLeaveToWorldReq_default_instance_;
class S2SKickPlayerToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickPlayerToWorldReq>
      _instance;
} _S2SKickPlayerToWorldReq_default_instance_;
class S2SKickPlayerToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickPlayerToGameReq>
      _instance;
} _S2SKickPlayerToGameReq_default_instance_;
class S2SKickPlayerToGateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickPlayerToGateReq>
      _instance;
} _S2SKickPlayerToGateReq_default_instance_;
class S2SKickPlayerToWorldAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SKickPlayerToWorldAck>
      _instance;
} _S2SKickPlayerToWorldAck_default_instance_;
class S2SBroadcastToGameReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGameReq>
      _instance;
} _S2SBroadcastToGameReq_default_instance_;
class S2SBroadcastToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGameAck>
      _instance;
} _S2SBroadcastToGameAck_default_instance_;
class S2SBroadcastToGateReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToGateReq>
      _instance;
} _S2SBroadcastToGateReq_default_instance_;
class S2SBroadcastToWorldReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToWorldReq>
      _instance;
} _S2SBroadcastToWorldReq_default_instance_;
class S2SBroadcastToWorldAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SBroadcastToWorldAck>
      _instance;
} _S2SBroadcastToWorldAck_default_instance_;
class PBMail_DataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMail_DataEntry_DoNotUse>
      _instance;
} _PBMail_DataEntry_DoNotUse_default_instance_;
class PBMailDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBMail>
      _instance;
} _PBMail_default_instance_;
class S2SQueryMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryMailReq>
      _instance;
} _S2SQueryMailReq_default_instance_;
class S2SQueryMailAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryMailAck>
      _instance;
} _S2SQueryMailAck_default_instance_;
class S2SAddMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddMailReq>
      _instance;
} _S2SAddMailReq_default_instance_;
class S2SNoticeNewMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNoticeNewMailReq>
      _instance;
} _S2SNoticeNewMailReq_default_instance_;
class S2SNewPlayerMailReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SNewPlayerMailReq>
      _instance;
} _S2SNewPlayerMailReq_default_instance_;
class S2SUpdateMailStatusReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateMailStatusReq>
      _instance;
} _S2SUpdateMailStatusReq_default_instance_;
class S2SUpdateMailStatusAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateMailStatusAck>
      _instance;
} _S2SUpdateMailStatusAck_default_instance_;
class S2SUpdateRankDataReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateRankDataReq>
      _instance;
} _S2SUpdateRankDataReq_default_instance_;
class S2SQueryRankListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryRankListReq>
      _instance;
} _S2SQueryRankListReq_default_instance_;
class S2SQueryFriendRankListReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendRankListReq>
      _instance;
} _S2SQueryFriendRankListReq_default_instance_;
class S2SRefreshRankReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRefreshRankReq>
      _instance;
} _S2SRefreshRankReq_default_instance_;
class S2SRefreshRankAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SRefreshRankAck>
      _instance;
} _S2SRefreshRankAck_default_instance_;
class S2STellRefreshRankDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2STellRefreshRank>
      _instance;
} _S2STellRefreshRank_default_instance_;
class S2SUpdateDataToPublicReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse>
      _instance;
} _S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateDataToPublicReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateDataToPublicReq>
      _instance;
} _S2SUpdateDataToPublicReq_default_instance_;
class S2SQueryBasicToPublicReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryBasicToPublicReq>
      _instance;
} _S2SQueryBasicToPublicReq_default_instance_;
class S2SQueryBasicToGameAck_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryBasicToGameAck_PbdataEntry_DoNotUse>
      _instance;
} _S2SQueryBasicToGameAck_PbdataEntry_DoNotUse_default_instance_;
class S2SQueryBasicToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryBasicToGameAck>
      _instance;
} _S2SQueryBasicToGameAck_default_instance_;
class PBRelation_PlayerdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRelation_PlayerdataEntry_DoNotUse>
      _instance;
} _PBRelation_PlayerdataEntry_DoNotUse_default_instance_;
class PBRelation_RelationdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRelation_RelationdataEntry_DoNotUse>
      _instance;
} _PBRelation_RelationdataEntry_DoNotUse_default_instance_;
class PBRelationDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<PBRelation>
      _instance;
} _PBRelation_default_instance_;
class S2SQueryFriendToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendToRelationReq>
      _instance;
} _S2SQueryFriendToRelationReq_default_instance_;
class S2SQueryFriendToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendToGameAck>
      _instance;
} _S2SQueryFriendToGameAck_default_instance_;
class S2SQueryFriendInviteToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendInviteToRelationReq>
      _instance;
} _S2SQueryFriendInviteToRelationReq_default_instance_;
class S2SQueryFriendInviteToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SQueryFriendInviteToGameAck>
      _instance;
} _S2SQueryFriendInviteToGameAck_default_instance_;
class S2SUpdateDataToFriendReq_PbdataEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse>
      _instance;
} _S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateDataToFriendReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateDataToFriendReq>
      _instance;
} _S2SUpdateDataToFriendReq_default_instance_;
class S2SAddFriendInviteToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddFriendInviteToRelationReq>
      _instance;
} _S2SAddFriendInviteToRelationReq_default_instance_;
class S2SAddFriendInviteToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddFriendInviteToGameAck>
      _instance;
} _S2SAddFriendInviteToGameAck_default_instance_;
class S2SDelFriendInviteToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDelFriendInviteToRelationReq>
      _instance;
} _S2SDelFriendInviteToRelationReq_default_instance_;
class S2SAddFriendToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddFriendToRelationReq>
      _instance;
} _S2SAddFriendToRelationReq_default_instance_;
class S2SAddFriendToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SAddFriendToGameAck>
      _instance;
} _S2SAddFriendToGameAck_default_instance_;
class S2SDelFriendToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDelFriendToRelationReq>
      _instance;
} _S2SDelFriendToRelationReq_default_instance_;
class S2SDelFriendToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SDelFriendToGameAck>
      _instance;
} _S2SDelFriendToGameAck_default_instance_;
class S2SUpdateFriendLinessToRelationReqDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateFriendLinessToRelationReq>
      _instance;
} _S2SUpdateFriendLinessToRelationReq_default_instance_;
class S2SUpdateFriendLinessToGameAckDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<S2SUpdateFriendLinessToGameAck>
      _instance;
} _S2SUpdateFriendLinessToGameAck_default_instance_;
}  // namespace KFMsg
namespace protobuf_FrameServerMessage_2eproto {
static void InitDefaultsPBZoneData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBZoneData_default_instance_;
    new (ptr) ::KFMsg::PBZoneData();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBZoneData::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBZoneData =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBZoneData}, {}};

static void InitDefaultsS2SUpdateZoneToLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateZoneToLoginReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateZoneToLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateZoneToLoginReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateZoneToLoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateZoneToLoginReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBZoneData.base,}};

static void InitDefaultsS2SAddGateToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddGateToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddGateToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddGateToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAddGateToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAddGateToWorldReq}, {}};

static void InitDefaultsS2SRemoveGateToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRemoveGateToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SRemoveGateToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRemoveGateToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRemoveGateToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRemoveGateToWorldReq}, {}};

static void InitDefaultsS2SLoginToLoginReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToLoginReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToLoginReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToLoginReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginToLoginReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginToLoginReq}, {}};

static void InitDefaultsS2SLoginToGateAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToGateAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToGateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToGateAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginToGateAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginToGateAck}, {}};

static void InitDefaultsS2SLoginToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginToWorldReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SLoginToLoginAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToLoginAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToLoginAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToLoginAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLoginToLoginAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLoginToLoginAck}, {}};

static void InitDefaultsS2SLoginToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoginToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoginToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoginToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoginToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoginToGameReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SEnterToGateAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SEnterToGateAck_default_instance_;
    new (ptr) ::KFMsg::S2SEnterToGateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SEnterToGateAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_S2SEnterToGateAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsS2SEnterToGateAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SLogoutToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLogoutToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SLogoutToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLogoutToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLogoutToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLogoutToGameReq}, {}};

static void InitDefaultsS2SDisconnectToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDisconnectToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SDisconnectToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDisconnectToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDisconnectToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDisconnectToGameReq}, {}};

static void InitDefaultsS2SLeaveToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLeaveToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SLeaveToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLeaveToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SLeaveToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SLeaveToGameReq}, {}};

static void InitDefaultsS2SReLoginToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SReLoginToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SReLoginToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SReLoginToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SReLoginToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SReLoginToGameReq}, {}};

static void InitDefaultsS2SReLoginToGateAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SReLoginToGateAck_default_instance_;
    new (ptr) ::KFMsg::S2SReLoginToGateAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SReLoginToGateAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SReLoginToGateAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SReLoginToGateAck}, {}};

static void InitDefaultsS2SLoadPlayerToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoadPlayerToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SLoadPlayerToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoadPlayerToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SLoadPlayerToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SLoadPlayerToDataReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,}};

static void InitDefaultsS2SLoadPlayerToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SLoadPlayerToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SLoadPlayerToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SLoadPlayerToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_S2SLoadPlayerToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsS2SLoadPlayerToGameAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBLoginData.base,
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSavePlayerToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSavePlayerToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SSavePlayerToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSavePlayerToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SSavePlayerToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SSavePlayerToDataReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSavePlayerToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSavePlayerToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SSavePlayerToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSavePlayerToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSavePlayerToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSavePlayerToGameAck}, {}};

static void InitDefaultsS2SQueryPlayerToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryPlayerToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryPlayerToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryPlayerToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryPlayerToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryPlayerToDataReq}, {}};

static void InitDefaultsS2SQueryPlayerToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryPlayerToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryPlayerToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryPlayerToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryPlayerToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryPlayerToGameAck}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBObject.base,}};

static void InitDefaultsS2SSetPlayerNameToDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSetPlayerNameToDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SSetPlayerNameToDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSetPlayerNameToDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSetPlayerNameToDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSetPlayerNameToDataReq}, {}};

static void InitDefaultsS2SSetPlayerNameToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SSetPlayerNameToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SSetPlayerNameToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SSetPlayerNameToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SSetPlayerNameToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SSetPlayerNameToGameAck}, {}};

static void InitDefaultsS2SPlayerEnterToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerEnterToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerEnterToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerEnterToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerEnterToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerEnterToWorldReq}, {}};

static void InitDefaultsS2SPlayerLeaveToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SPlayerLeaveToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SPlayerLeaveToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SPlayerLeaveToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SPlayerLeaveToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SPlayerLeaveToWorldReq}, {}};

static void InitDefaultsS2SKickPlayerToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickPlayerToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickPlayerToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickPlayerToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickPlayerToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickPlayerToWorldReq}, {}};

static void InitDefaultsS2SKickPlayerToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickPlayerToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickPlayerToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickPlayerToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickPlayerToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickPlayerToGameReq}, {}};

static void InitDefaultsS2SKickPlayerToGateReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickPlayerToGateReq_default_instance_;
    new (ptr) ::KFMsg::S2SKickPlayerToGateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickPlayerToGateReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickPlayerToGateReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickPlayerToGateReq}, {}};

static void InitDefaultsS2SKickPlayerToWorldAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SKickPlayerToWorldAck_default_instance_;
    new (ptr) ::KFMsg::S2SKickPlayerToWorldAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SKickPlayerToWorldAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SKickPlayerToWorldAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SKickPlayerToWorldAck}, {}};

static void InitDefaultsS2SBroadcastToGameReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGameReq_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGameReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGameReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGameReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGameReq}, {}};

static void InitDefaultsS2SBroadcastToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGameAck}, {}};

static void InitDefaultsS2SBroadcastToGateReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToGateReq_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToGateReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToGateReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToGateReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToGateReq}, {}};

static void InitDefaultsS2SBroadcastToWorldReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToWorldReq_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToWorldReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToWorldReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToWorldReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToWorldReq}, {}};

static void InitDefaultsS2SBroadcastToWorldAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SBroadcastToWorldAck_default_instance_;
    new (ptr) ::KFMsg::S2SBroadcastToWorldAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SBroadcastToWorldAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SBroadcastToWorldAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SBroadcastToWorldAck}, {}};

static void InitDefaultsPBMail_DataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMail_DataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBMail_DataEntry_DoNotUse();
  }
  ::KFMsg::PBMail_DataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBMail_DataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBMail_DataEntry_DoNotUse}, {}};

static void InitDefaultsPBMail() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBMail_default_instance_;
    new (ptr) ::KFMsg::PBMail();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBMail::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_PBMail =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsPBMail}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBMail_DataEntry_DoNotUse.base,}};

static void InitDefaultsS2SQueryMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryMailReq}, {}};

static void InitDefaultsS2SQueryMailAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryMailAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryMailAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryMailAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryMailAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryMailAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBMail.base,}};

static void InitDefaultsS2SAddMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddMailReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBMail.base,}};

static void InitDefaultsS2SNoticeNewMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SNoticeNewMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SNoticeNewMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SNoticeNewMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SNoticeNewMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SNoticeNewMailReq}, {}};

static void InitDefaultsS2SNewPlayerMailReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SNewPlayerMailReq_default_instance_;
    new (ptr) ::KFMsg::S2SNewPlayerMailReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SNewPlayerMailReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SNewPlayerMailReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SNewPlayerMailReq}, {}};

static void InitDefaultsS2SUpdateMailStatusReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateMailStatusReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateMailStatusReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateMailStatusReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateMailStatusReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateMailStatusReq}, {}};

static void InitDefaultsS2SUpdateMailStatusAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateMailStatusAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateMailStatusAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateMailStatusAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateMailStatusAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateMailStatusAck}, {}};

static void InitDefaultsS2SUpdateRankDataReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateRankDataReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateRankDataReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateRankDataReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateRankDataReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateRankDataReq}, {
      &protobuf_FrameDefineMessage_2eproto::scc_info_PBRankData.base,}};

static void InitDefaultsS2SQueryRankListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryRankListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryRankListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryRankListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryRankListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryRankListReq}, {}};

static void InitDefaultsS2SQueryFriendRankListReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendRankListReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendRankListReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendRankListReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryFriendRankListReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryFriendRankListReq}, {}};

static void InitDefaultsS2SRefreshRankReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRefreshRankReq_default_instance_;
    new (ptr) ::KFMsg::S2SRefreshRankReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRefreshRankReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRefreshRankReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRefreshRankReq}, {}};

static void InitDefaultsS2SRefreshRankAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SRefreshRankAck_default_instance_;
    new (ptr) ::KFMsg::S2SRefreshRankAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SRefreshRankAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SRefreshRankAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SRefreshRankAck}, {}};

static void InitDefaultsS2STellRefreshRank() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2STellRefreshRank_default_instance_;
    new (ptr) ::KFMsg::S2STellRefreshRank();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2STellRefreshRank::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2STellRefreshRank =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2STellRefreshRank}, {}};

static void InitDefaultsS2SUpdateDataToPublicReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateDataToPublicReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2SUpdateDataToPublicReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateDataToPublicReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateDataToPublicReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateDataToPublicReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateDataToPublicReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateDataToPublicReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2SQueryBasicToPublicReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryBasicToPublicReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryBasicToPublicReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryBasicToPublicReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryBasicToPublicReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryBasicToPublicReq}, {}};

static void InitDefaultsS2SQueryBasicToGameAck_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryBasicToGameAck_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryBasicToGameAck_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryBasicToGameAck_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2SQueryBasicToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryBasicToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryBasicToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryBasicToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryBasicToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryBasicToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryBasicToGameAck_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsPBRelation_PlayerdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRelation_PlayerdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBRelation_PlayerdataEntry_DoNotUse();
  }
  ::KFMsg::PBRelation_PlayerdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRelation_PlayerdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRelation_PlayerdataEntry_DoNotUse}, {}};

static void InitDefaultsPBRelation_RelationdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRelation_RelationdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::PBRelation_RelationdataEntry_DoNotUse();
  }
  ::KFMsg::PBRelation_RelationdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_PBRelation_RelationdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsPBRelation_RelationdataEntry_DoNotUse}, {}};

static void InitDefaultsPBRelation() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_PBRelation_default_instance_;
    new (ptr) ::KFMsg::PBRelation();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::PBRelation::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<2> scc_info_PBRelation =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsPBRelation}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation_PlayerdataEntry_DoNotUse.base,
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation_RelationdataEntry_DoNotUse.base,}};

static void InitDefaultsS2SQueryFriendToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryFriendToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryFriendToRelationReq}, {}};

static void InitDefaultsS2SQueryFriendToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryFriendToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryFriendToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SQueryFriendInviteToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendInviteToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendInviteToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendInviteToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SQueryFriendInviteToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SQueryFriendInviteToRelationReq}, {}};

static void InitDefaultsS2SQueryFriendInviteToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SQueryFriendInviteToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SQueryFriendInviteToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SQueryFriendInviteToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SQueryFriendInviteToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SQueryFriendInviteToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SUpdateDataToFriendReq_PbdataEntry_DoNotUse() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse();
  }
  ::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateDataToFriendReq_PbdataEntry_DoNotUse}, {}};

static void InitDefaultsS2SUpdateDataToFriendReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateDataToFriendReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateDataToFriendReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateDataToFriendReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SUpdateDataToFriendReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SUpdateDataToFriendReq}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse.base,}};

static void InitDefaultsS2SAddFriendInviteToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddFriendInviteToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddFriendInviteToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddFriendInviteToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAddFriendInviteToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAddFriendInviteToRelationReq}, {}};

static void InitDefaultsS2SAddFriendInviteToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddFriendInviteToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SAddFriendInviteToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddFriendInviteToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddFriendInviteToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddFriendInviteToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SDelFriendInviteToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDelFriendInviteToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SDelFriendInviteToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDelFriendInviteToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDelFriendInviteToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDelFriendInviteToRelationReq}, {}};

static void InitDefaultsS2SAddFriendToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddFriendToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SAddFriendToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddFriendToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SAddFriendToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SAddFriendToRelationReq}, {}};

static void InitDefaultsS2SAddFriendToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SAddFriendToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SAddFriendToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SAddFriendToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<1> scc_info_S2SAddFriendToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsS2SAddFriendToGameAck}, {
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base,}};

static void InitDefaultsS2SDelFriendToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDelFriendToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SDelFriendToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDelFriendToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDelFriendToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDelFriendToRelationReq}, {}};

static void InitDefaultsS2SDelFriendToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SDelFriendToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SDelFriendToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SDelFriendToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SDelFriendToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SDelFriendToGameAck}, {}};

static void InitDefaultsS2SUpdateFriendLinessToRelationReq() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateFriendLinessToRelationReq_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateFriendLinessToRelationReq();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateFriendLinessToRelationReq::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateFriendLinessToRelationReq =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateFriendLinessToRelationReq}, {}};

static void InitDefaultsS2SUpdateFriendLinessToGameAck() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::KFMsg::_S2SUpdateFriendLinessToGameAck_default_instance_;
    new (ptr) ::KFMsg::S2SUpdateFriendLinessToGameAck();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::KFMsg::S2SUpdateFriendLinessToGameAck::InitAsDefaultInstance();
}

LIBPROTOC_EXPORT ::google::protobuf::internal::SCCInfo<0> scc_info_S2SUpdateFriendLinessToGameAck =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsS2SUpdateFriendLinessToGameAck}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_PBZoneData.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateZoneToLoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddGateToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRemoveGateToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToLoginReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToGateAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToLoginAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoginToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SEnterToGateAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLogoutToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDisconnectToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLeaveToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SReLoginToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SReLoginToGateAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoadPlayerToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SLoadPlayerToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSavePlayerToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSavePlayerToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryPlayerToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryPlayerToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSetPlayerNameToDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SSetPlayerNameToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerEnterToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SPlayerLeaveToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickPlayerToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickPlayerToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickPlayerToGateReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SKickPlayerToWorldAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGameReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToGateReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToWorldReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SBroadcastToWorldAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMail_DataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBMail.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryMailAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNoticeNewMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SNewPlayerMailReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateMailStatusReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateMailStatusAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateRankDataReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryRankListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendRankListReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRefreshRankReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SRefreshRankAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2STellRefreshRank.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateDataToPublicReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryBasicToPublicReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryBasicToGameAck_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryBasicToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRelation_PlayerdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRelation_RelationdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_PBRelation.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendInviteToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SQueryFriendInviteToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateDataToFriendReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddFriendInviteToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddFriendInviteToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDelFriendInviteToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddFriendToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SAddFriendToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDelFriendToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SDelFriendToGameAck.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateFriendLinessToRelationReq.base);
  ::google::protobuf::internal::InitSCC(&scc_info_S2SUpdateFriendLinessToGameAck.base);
}

::google::protobuf::Metadata file_level_metadata[72];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, appid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, port_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBZoneData, count_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateZoneToLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateZoneToLoginReq, zonedata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGateToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGateToWorldReq, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddGateToWorldReq, gateid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoveGateToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoveGateToWorldReq, gameid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRemoveGateToWorldReq, gateid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, ip_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginReq, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGateAck, bantime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToWorldReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, gateid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, accountid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToLoginAck, sessionid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoginToGameReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, pblogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, playerdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SEnterToGateAck, servertime_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLogoutToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLogoutToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDisconnectToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLeaveToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGameReq, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, token_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, sessionid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SReLoginToGateAck, accountid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToDataReq, pblogin_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, pblogin_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SLoadPlayerToGameAck, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToDataReq, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSavePlayerToGameAck, id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToDataReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryPlayerToGameAck, playerdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, oldname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, newname_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToDataReq, itemuuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SSetPlayerNameToGameAck, itemuuid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerEnterToWorldReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SPlayerLeaveToWorldReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToWorldReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToWorldReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToWorldReq, gameid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGameReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGameReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGateReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToGateReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToWorldAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SKickPlayerToWorldAck, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, msgdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGameAck, worldid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, msgdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToGateReq, worldid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldReq, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldReq, msgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, msgid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, msgdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, serial_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SBroadcastToWorldAck, worldid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail_DataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBMail, data_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailReq, maxid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryMailAck, mail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, objectid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddMailReq, pbmail_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeNewMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNoticeNewMailReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerMailReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerMailReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SNewPlayerMailReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, flag_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusReq, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateMailStatusAck, status_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, zoneid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateRankDataReq, pbrankdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryRankListReq, zoneid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendRankListReq, friendid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRefreshRankReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRefreshRankReq, rankid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRefreshRankAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SRefreshRankAck, rankid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRefreshRank, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2STellRefreshRank, rankid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToPublicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToPublicReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToPublicReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToPublicReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToGameAck, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToGameAck, result_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryBasicToGameAck, pbdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_PlayerdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_PlayerdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_PlayerdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_PlayerdataEntry_DoNotUse, value_),
  0,
  1,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_RelationdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_RelationdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_RelationdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation_RelationdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, playerdata_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::PBRelation, relationdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendToRelationReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendToGameAck, pbfriend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteToRelationReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SQueryFriendInviteToGameAck, pbinvite_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToFriendReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToFriendReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateDataToFriendReq, pbdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteToRelationReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteToRelationReq, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteToRelationReq, message_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendInviteToGameAck, pbinvite_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendInviteToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendInviteToRelationReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendInviteToRelationReq, targetplayerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendToRelationReq, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendToRelationReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SAddFriendToGameAck, pbfriend_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendToRelationReq, playerid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SDelFriendToGameAck, friendid_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, selfplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToRelationReq, friendliness_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToGameAck, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToGameAck, playerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToGameAck, targetplayerid_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::KFMsg::S2SUpdateFriendLinessToGameAck, friendliness_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::KFMsg::PBZoneData)},
  { 9, -1, sizeof(::KFMsg::S2SUpdateZoneToLoginReq)},
  { 15, -1, sizeof(::KFMsg::S2SAddGateToWorldReq)},
  { 22, -1, sizeof(::KFMsg::S2SRemoveGateToWorldReq)},
  { 29, -1, sizeof(::KFMsg::S2SLoginToLoginReq)},
  { 38, -1, sizeof(::KFMsg::S2SLoginToGateAck)},
  { 47, -1, sizeof(::KFMsg::S2SLoginToWorldReq)},
  { 53, -1, sizeof(::KFMsg::S2SLoginToLoginAck)},
  { 62, -1, sizeof(::KFMsg::S2SLoginToGameReq)},
  { 68, -1, sizeof(::KFMsg::S2SEnterToGateAck)},
  { 76, -1, sizeof(::KFMsg::S2SLogoutToGameReq)},
  { 82, -1, sizeof(::KFMsg::S2SDisconnectToGameReq)},
  { 88, -1, sizeof(::KFMsg::S2SLeaveToGameReq)},
  { 94, -1, sizeof(::KFMsg::S2SReLoginToGameReq)},
  { 103, -1, sizeof(::KFMsg::S2SReLoginToGateAck)},
  { 112, -1, sizeof(::KFMsg::S2SLoadPlayerToDataReq)},
  { 118, -1, sizeof(::KFMsg::S2SLoadPlayerToGameAck)},
  { 126, -1, sizeof(::KFMsg::S2SSavePlayerToDataReq)},
  { 133, -1, sizeof(::KFMsg::S2SSavePlayerToGameAck)},
  { 139, -1, sizeof(::KFMsg::S2SQueryPlayerToDataReq)},
  { 145, -1, sizeof(::KFMsg::S2SQueryPlayerToGameAck)},
  { 152, -1, sizeof(::KFMsg::S2SSetPlayerNameToDataReq)},
  { 161, -1, sizeof(::KFMsg::S2SSetPlayerNameToGameAck)},
  { 170, -1, sizeof(::KFMsg::S2SPlayerEnterToWorldReq)},
  { 176, -1, sizeof(::KFMsg::S2SPlayerLeaveToWorldReq)},
  { 182, -1, sizeof(::KFMsg::S2SKickPlayerToWorldReq)},
  { 190, -1, sizeof(::KFMsg::S2SKickPlayerToGameReq)},
  { 197, -1, sizeof(::KFMsg::S2SKickPlayerToGateReq)},
  { 204, -1, sizeof(::KFMsg::S2SKickPlayerToWorldAck)},
  { 210, -1, sizeof(::KFMsg::S2SBroadcastToGameReq)},
  { 217, -1, sizeof(::KFMsg::S2SBroadcastToGameAck)},
  { 226, -1, sizeof(::KFMsg::S2SBroadcastToGateReq)},
  { 235, -1, sizeof(::KFMsg::S2SBroadcastToWorldReq)},
  { 242, -1, sizeof(::KFMsg::S2SBroadcastToWorldAck)},
  { 251, 258, sizeof(::KFMsg::PBMail_DataEntry_DoNotUse)},
  { 260, -1, sizeof(::KFMsg::PBMail)},
  { 266, -1, sizeof(::KFMsg::S2SQueryMailReq)},
  { 274, -1, sizeof(::KFMsg::S2SQueryMailAck)},
  { 281, -1, sizeof(::KFMsg::S2SAddMailReq)},
  { 289, -1, sizeof(::KFMsg::S2SNoticeNewMailReq)},
  { 295, -1, sizeof(::KFMsg::S2SNewPlayerMailReq)},
  { 302, -1, sizeof(::KFMsg::S2SUpdateMailStatusReq)},
  { 311, -1, sizeof(::KFMsg::S2SUpdateMailStatusAck)},
  { 319, -1, sizeof(::KFMsg::S2SUpdateRankDataReq)},
  { 328, -1, sizeof(::KFMsg::S2SQueryRankListReq)},
  { 335, -1, sizeof(::KFMsg::S2SQueryFriendRankListReq)},
  { 342, -1, sizeof(::KFMsg::S2SRefreshRankReq)},
  { 348, -1, sizeof(::KFMsg::S2SRefreshRankAck)},
  { 354, -1, sizeof(::KFMsg::S2STellRefreshRank)},
  { 360, 367, sizeof(::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse)},
  { 369, -1, sizeof(::KFMsg::S2SUpdateDataToPublicReq)},
  { 375, -1, sizeof(::KFMsg::S2SQueryBasicToPublicReq)},
  { 381, 388, sizeof(::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse)},
  { 390, -1, sizeof(::KFMsg::S2SQueryBasicToGameAck)},
  { 398, 405, sizeof(::KFMsg::PBRelation_PlayerdataEntry_DoNotUse)},
  { 407, 414, sizeof(::KFMsg::PBRelation_RelationdataEntry_DoNotUse)},
  { 416, -1, sizeof(::KFMsg::PBRelation)},
  { 424, -1, sizeof(::KFMsg::S2SQueryFriendToRelationReq)},
  { 430, -1, sizeof(::KFMsg::S2SQueryFriendToGameAck)},
  { 437, -1, sizeof(::KFMsg::S2SQueryFriendInviteToRelationReq)},
  { 443, -1, sizeof(::KFMsg::S2SQueryFriendInviteToGameAck)},
  { 450, 457, sizeof(::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse)},
  { 459, -1, sizeof(::KFMsg::S2SUpdateDataToFriendReq)},
  { 466, -1, sizeof(::KFMsg::S2SAddFriendInviteToRelationReq)},
  { 474, -1, sizeof(::KFMsg::S2SAddFriendInviteToGameAck)},
  { 481, -1, sizeof(::KFMsg::S2SDelFriendInviteToRelationReq)},
  { 488, -1, sizeof(::KFMsg::S2SAddFriendToRelationReq)},
  { 495, -1, sizeof(::KFMsg::S2SAddFriendToGameAck)},
  { 502, -1, sizeof(::KFMsg::S2SDelFriendToRelationReq)},
  { 508, -1, sizeof(::KFMsg::S2SDelFriendToGameAck)},
  { 515, -1, sizeof(::KFMsg::S2SUpdateFriendLinessToRelationReq)},
  { 524, -1, sizeof(::KFMsg::S2SUpdateFriendLinessToGameAck)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBZoneData_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateZoneToLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddGateToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRemoveGateToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToLoginReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToGateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToLoginAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoginToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SEnterToGateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLogoutToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDisconnectToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLeaveToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SReLoginToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SReLoginToGateAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoadPlayerToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SLoadPlayerToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSavePlayerToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSavePlayerToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryPlayerToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryPlayerToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSetPlayerNameToDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SSetPlayerNameToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerEnterToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SPlayerLeaveToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickPlayerToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickPlayerToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickPlayerToGateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SKickPlayerToWorldAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGameReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToGateReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToWorldReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SBroadcastToWorldAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMail_DataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBMail_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryMailAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SNoticeNewMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SNewPlayerMailReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateMailStatusReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateMailStatusAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateRankDataReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryRankListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendRankListReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRefreshRankReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SRefreshRankAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2STellRefreshRank_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateDataToPublicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryBasicToPublicReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryBasicToGameAck_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryBasicToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRelation_PlayerdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRelation_RelationdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_PBRelation_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendInviteToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SQueryFriendInviteToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateDataToFriendReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddFriendInviteToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddFriendInviteToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDelFriendInviteToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddFriendToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SAddFriendToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDelFriendToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SDelFriendToGameAck_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateFriendLinessToRelationReq_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::KFMsg::_S2SUpdateFriendLinessToGameAck_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "FrameServerMessage.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 72);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\030FrameServerMessage.proto\022\005KFMsg\032\030Frame"
      "DefineMessage.proto\"D\n\nPBZoneData\022\r\n\005app"
      "id\030\001 \001(\004\022\n\n\002ip\030\002 \001(\014\022\014\n\004port\030\003 \001(\r\022\r\n\005co"
      "unt\030\004 \001(\r\">\n\027S2SUpdateZoneToLoginReq\022#\n\010"
      "zonedata\030\001 \001(\0132\021.KFMsg.PBZoneData\"6\n\024S2S"
      "AddGateToWorldReq\022\016\n\006gameid\030\001 \001(\004\022\016\n\006gat"
      "eid\030\002 \003(\004\"9\n\027S2SRemoveGateToWorldReq\022\016\n\006"
      "gameid\030\001 \001(\004\022\016\n\006gateid\030\002 \001(\004\"U\n\022S2SLogin"
      "ToLoginReq\022\n\n\002ip\030\001 \001(\014\022\r\n\005token\030\002 \001(\014\022\021\n"
      "\taccountid\030\003 \001(\004\022\021\n\tsessionid\030\004 \001(\004\"Z\n\021S"
      "2SLoginToGateAck\022\016\n\006result\030\001 \001(\r\022\021\n\tacco"
      "untid\030\002 \001(\004\022\021\n\tsessionid\030\003 \001(\004\022\017\n\007bantim"
      "e\030\004 \001(\004\"9\n\022S2SLoginToWorldReq\022#\n\007pblogin"
      "\030\001 \001(\0132\022.KFMsg.PBLoginData\"Z\n\022S2SLoginTo"
      "LoginAck\022\016\n\006result\030\001 \001(\r\022\016\n\006gateid\030\002 \001(\004"
      "\022\021\n\taccountid\030\003 \001(\004\022\021\n\tsessionid\030\004 \001(\004\"8"
      "\n\021S2SLoginToGameReq\022#\n\007pblogin\030\001 \001(\0132\022.K"
      "FMsg.PBLoginData\"q\n\021S2SEnterToGateAck\022#\n"
      "\007pblogin\030\001 \001(\0132\022.KFMsg.PBLoginData\022#\n\npl"
      "ayerdata\030\002 \001(\0132\017.KFMsg.PBObject\022\022\n\nserve"
      "rtime\030\003 \001(\004\"&\n\022S2SLogoutToGameReq\022\020\n\010pla"
      "yerid\030\001 \001(\004\"*\n\026S2SDisconnectToGameReq\022\020\n"
      "\010playerid\030\001 \001(\004\"%\n\021S2SLeaveToGameReq\022\020\n\010"
      "playerid\030\001 \001(\004\"\\\n\023S2SReLoginToGameReq\022\r\n"
      "\005token\030\001 \001(\014\022\020\n\010playerid\030\002 \001(\004\022\021\n\tsessio"
      "nid\030\003 \001(\004\022\021\n\taccountid\030\004 \001(\004\"\\\n\023S2SReLog"
      "inToGateAck\022\r\n\005token\030\001 \001(\014\022\020\n\010playerid\030\002"
      " \001(\004\022\021\n\tsessionid\030\003 \001(\004\022\021\n\taccountid\030\004 \001"
      "(\004\"=\n\026S2SLoadPlayerToDataReq\022#\n\007pblogin\030"
      "\001 \001(\0132\022.KFMsg.PBLoginData\"r\n\026S2SLoadPlay"
      "erToGameAck\022\016\n\006result\030\001 \001(\r\022#\n\007pblogin\030\002"
      " \001(\0132\022.KFMsg.PBLoginData\022#\n\nplayerdata\030\003"
      " \001(\0132\017.KFMsg.PBObject\"C\n\026S2SSavePlayerTo"
      "DataReq\022\n\n\002id\030\001 \001(\004\022\035\n\004data\030\003 \001(\0132\017.KFMs"
      "g.PBObject\"$\n\026S2SSavePlayerToGameAck\022\n\n\002"
      "id\030\001 \001(\004\"+\n\027S2SQueryPlayerToDataReq\022\020\n\010p"
      "layerid\030\001 \001(\004\"N\n\027S2SQueryPlayerToGameAck"
      "\022\016\n\006result\030\001 \001(\r\022#\n\nplayerdata\030\002 \001(\0132\017.K"
      "FMsg.PBObject\"a\n\031S2SSetPlayerNameToDataR"
      "eq\022\020\n\010playerid\030\001 \001(\004\022\017\n\007oldname\030\002 \001(\014\022\017\n"
      "\007newname\030\003 \001(\014\022\020\n\010itemuuid\030\004 \001(\004\"]\n\031S2SS"
      "etPlayerNameToGameAck\022\016\n\006result\030\001 \001(\r\022\020\n"
      "\010playerid\030\002 \001(\004\022\014\n\004name\030\003 \001(\014\022\020\n\010itemuui"
      "d\030\004 \001(\004\",\n\030S2SPlayerEnterToWorldReq\022\020\n\010p"
      "layerid\030\001 \001(\004\",\n\030S2SPlayerLeaveToWorldRe"
      "q\022\020\n\010playerid\030\001 \001(\004\"I\n\027S2SKickPlayerToWo"
      "rldReq\022\014\n\004type\030\001 \001(\r\022\020\n\010playerid\030\002 \001(\004\022\016"
      "\n\006gameid\030\003 \001(\004\"8\n\026S2SKickPlayerToGameReq"
      "\022\014\n\004type\030\001 \001(\r\022\020\n\010playerid\030\002 \001(\004\"8\n\026S2SK"
      "ickPlayerToGateReq\022\014\n\004type\030\001 \001(\r\022\020\n\010play"
      "erid\030\002 \001(\004\"+\n\027S2SKickPlayerToWorldAck\022\020\n"
      "\010playerid\030\002 \001(\004\"7\n\025S2SBroadcastToGameReq"
      "\022\r\n\005msgid\030\001 \001(\r\022\017\n\007msgdata\030\002 \001(\014\"X\n\025S2SB"
      "roadcastToGameAck\022\r\n\005msgid\030\001 \001(\r\022\017\n\007msgd"
      "ata\030\002 \001(\014\022\016\n\006serial\030\003 \001(\r\022\017\n\007worldid\030\004 \001"
      "(\004\"X\n\025S2SBroadcastToGateReq\022\r\n\005msgid\030\001 \001"
      "(\r\022\017\n\007msgdata\030\002 \001(\014\022\016\n\006serial\030\003 \001(\r\022\017\n\007w"
      "orldid\030\004 \001(\004\"8\n\026S2SBroadcastToWorldReq\022\r"
      "\n\005msgid\030\001 \001(\r\022\017\n\007msgdata\030\002 \001(\014\"Y\n\026S2SBro"
      "adcastToWorldAck\022\r\n\005msgid\030\001 \001(\r\022\017\n\007msgda"
      "ta\030\002 \001(\014\022\016\n\006serial\030\003 \001(\r\022\017\n\007worldid\030\004 \001("
      "\004\"\\\n\006PBMail\022%\n\004data\030\001 \003(\0132\027.KFMsg.PBMail"
      ".DataEntry\032+\n\tDataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005"
      "value\030\002 \001(\014:\0028\001\"B\n\017S2SQueryMailReq\022\020\n\010pl"
      "ayerid\030\001 \001(\004\022\016\n\006zoneid\030\002 \001(\r\022\r\n\005maxid\030\003 "
      "\001(\004\"@\n\017S2SQueryMailAck\022\020\n\010playerid\030\001 \001(\004"
      "\022\033\n\004mail\030\002 \003(\0132\r.KFMsg.PBMail\"N\n\rS2SAddM"
      "ailReq\022\014\n\004flag\030\001 \001(\r\022\020\n\010objectid\030\002 \001(\004\022\035"
      "\n\006pbmail\030\003 \001(\0132\r.KFMsg.PBMail\"\'\n\023S2SNoti"
      "ceNewMailReq\022\020\n\010playerid\030\001 \001(\004\"7\n\023S2SNew"
      "PlayerMailReq\022\020\n\010playerid\030\001 \001(\004\022\016\n\006zonei"
      "d\030\002 \001(\r\"T\n\026S2SUpdateMailStatusReq\022\020\n\010pla"
      "yerid\030\001 \001(\004\022\n\n\002id\030\002 \001(\004\022\014\n\004flag\030\003 \001(\r\022\016\n"
      "\006status\030\004 \001(\r\"F\n\026S2SUpdateMailStatusAck\022"
      "\020\n\010playerid\030\001 \001(\004\022\n\n\002id\030\002 \001(\004\022\016\n\006status\030"
      "\003 \001(\r\"o\n\024S2SUpdateRankDataReq\022\020\n\010playeri"
      "d\030\001 \001(\004\022\016\n\006rankid\030\002 \001(\r\022\016\n\006zoneid\030\003 \001(\r\022"
      "%\n\npbrankdata\030\004 \001(\0132\021.KFMsg.PBRankData\"5"
      "\n\023S2SQueryRankListReq\022\016\n\006rankid\030\001 \001(\r\022\016\n"
      "\006zoneid\030\002 \001(\r\"=\n\031S2SQueryFriendRankListR"
      "eq\022\016\n\006rankid\030\001 \001(\r\022\020\n\010friendid\030\002 \003(\004\"#\n\021"
      "S2SRefreshRankReq\022\016\n\006rankid\030\001 \001(\r\"#\n\021S2S"
      "RefreshRankAck\022\016\n\006rankid\030\001 \001(\r\"$\n\022S2STel"
      "lRefreshRank\022\016\n\006rankid\030\001 \001(\r\"\206\001\n\030S2SUpda"
      "teDataToPublicReq\022;\n\006pbdata\030\001 \003(\0132+.KFMs"
      "g.S2SUpdateDataToPublicReq.PbdataEntry\032-"
      "\n\013PbdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002 \001("
      "\014:\0028\001\"(\n\030S2SQueryBasicToPublicReq\022\014\n\004nam"
      "e\030\001 \001(\014\"\240\001\n\026S2SQueryBasicToGameAck\022\014\n\004na"
      "me\030\001 \001(\014\022\016\n\006result\030\002 \001(\r\0229\n\006pbdata\030\003 \003(\013"
      "2).KFMsg.S2SQueryBasicToGameAck.PbdataEn"
      "try\032-\n\013PbdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\014:\0028\001\"\370\001\n\nPBRelation\022\020\n\010playerid\030\001 "
      "\001(\004\0225\n\nplayerdata\030\002 \003(\0132!.KFMsg.PBRelati"
      "on.PlayerdataEntry\0229\n\014relationdata\030\003 \003(\013"
      "2#.KFMsg.PBRelation.RelationdataEntry\0321\n"
      "\017PlayerdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value\030\002"
      " \001(\014:\0028\001\0323\n\021RelationdataEntry\022\013\n\003key\030\001 \001"
      "(\t\022\r\n\005value\030\002 \001(\014:\0028\001\"/\n\033S2SQueryFriendT"
      "oRelationReq\022\020\n\010playerid\030\001 \001(\004\"P\n\027S2SQue"
      "ryFriendToGameAck\022\020\n\010playerid\030\001 \001(\004\022#\n\010p"
      "bfriend\030\002 \003(\0132\021.KFMsg.PBRelation\"5\n!S2SQ"
      "ueryFriendInviteToRelationReq\022\020\n\010playeri"
      "d\030\001 \001(\004\"V\n\035S2SQueryFriendInviteToGameAck"
      "\022\020\n\010playerid\030\001 \001(\004\022#\n\010pbinvite\030\002 \003(\0132\021.K"
      "FMsg.PBRelation\"\230\001\n\030S2SUpdateDataToFrien"
      "dReq\022\020\n\010playerid\030\001 \001(\004\022;\n\006pbdata\030\003 \003(\0132+"
      ".KFMsg.S2SUpdateDataToFriendReq.PbdataEn"
      "try\032-\n\013PbdataEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005value"
      "\030\002 \001(\014:\0028\001\"R\n\037S2SAddFriendInviteToRelati"
      "onReq\022\014\n\004name\030\001 \001(\014\022\020\n\010playerid\030\002 \001(\004\022\017\n"
      "\007message\030\003 \001(\014\"T\n\033S2SAddFriendInviteToGa"
      "meAck\022\020\n\010playerid\030\001 \001(\004\022#\n\010pbinvite\030\002 \001("
      "\0132\021.KFMsg.PBRelation\"O\n\037S2SDelFriendInvi"
      "teToRelationReq\022\024\n\014selfplayerid\030\001 \001(\004\022\026\n"
      "\016targetplayerid\030\002 \001(\004\";\n\031S2SAddFriendToR"
      "elationReq\022\014\n\004name\030\001 \001(\014\022\020\n\010playerid\030\002 \001"
      "(\004\"N\n\025S2SAddFriendToGameAck\022\020\n\010playerid\030"
      "\001 \001(\004\022#\n\010pbfriend\030\002 \001(\0132\021.KFMsg.PBRelati"
      "on\"-\n\031S2SDelFriendToRelationReq\022\020\n\010playe"
      "rid\030\001 \001(\004\";\n\025S2SDelFriendToGameAck\022\020\n\010pl"
      "ayerid\030\001 \001(\004\022\020\n\010friendid\030\002 \001(\004\"v\n\"S2SUpd"
      "ateFriendLinessToRelationReq\022\014\n\004type\030\001 \001"
      "(\r\022\024\n\014selfplayerid\030\002 \001(\004\022\026\n\016targetplayer"
      "id\030\003 \001(\004\022\024\n\014friendliness\030\004 \001(\r\"`\n\036S2SUpd"
      "ateFriendLinessToGameAck\022\020\n\010playerid\030\001 \001"
      "(\004\022\026\n\016targetplayerid\030\002 \001(\004\022\024\n\014friendline"
      "ss\030\003 \001(\r*\273\021\n\023FrameServerProtocol\022#\n\037S2S_"
      "FRAME_SERVER_PROTOCOL_BEGIN\020\000\022\"\n\034S2S_UPD"
      "ATE_ZONE_TO_LOGIN_REQ\020\241\234\001\022\037\n\031S2S_ADD_GAT"
      "E_TO_WORLD_REQ\020\242\234\001\022\"\n\034S2S_REMOVE_GATE_TO"
      "_WORLD_REQ\020\243\234\001\022\034\n\026S2S_LOGIN_TO_LOGIN_REQ"
      "\020\205\235\001\022\033\n\025S2S_LOGIN_TO_GATE_ACK\020\206\235\001\022\034\n\026S2S"
      "_LOGIN_TO_WORLD_REQ\020\207\235\001\022\034\n\026S2S_LOGIN_TO_"
      "LOGIN_ACK\020\210\235\001\022\033\n\025S2S_LOGIN_TO_GAME_REQ\020\211"
      "\235\001\022\034\n\026S2S_LOGOUT_TO_GAME_REQ\020\212\235\001\022 \n\032S2S_"
      "DISCONNECT_TO_GAME_REQ\020\213\235\001\022\033\n\025S2S_LEAVE_"
      "TO_GAME_REQ\020\214\235\001\022\033\n\025S2S_ENTER_TO_GATE_ACK"
      "\020\215\235\001\022\035\n\027S2S_RELOGIN_TO_GAME_REQ\020\216\235\001\022\035\n\027S"
      "2S_RELOGIN_TO_GATE_ACK\020\217\235\001\022#\n\035S2S_PLAYER"
      "_ENTER_TO_WORLD_REQ\020\352\235\001\022#\n\035S2S_PLAYER_LE"
      "AVE_TO_WORLD_REQ\020\353\235\001\022!\n\033S2S_KICK_PLAYER_"
      "TO_GAME_REQ\020\354\235\001\022!\n\033S2S_KICK_PLAYER_TO_GA"
      "TE_REQ\020\355\235\001\022\"\n\034S2S_KICK_PLAYER_TO_WORLD_R"
      "EQ\020\356\235\001\022\"\n\034S2S_KICK_PLAYER_TO_WORLD_ACK\020\357"
      "\235\001\022\037\n\031S2S_BROADCAST_TO_GAME_REQ\020\315\236\001\022\037\n\031S"
      "2S_BROADCAST_TO_GAME_ACK\020\316\236\001\022 \n\032S2S_BROA"
      "DCAST_TO_WORLD_REQ\020\317\236\001\022 \n\032S2S_BROADCAST_"
      "TO_WORLD_ACK\020\320\236\001\022\037\n\031S2S_BROADCAST_TO_GAT"
      "E_REQ\020\321\236\001\022!\n\033S2S_LOAD_PLAYER_TO_DATA_REQ"
      "\020\261\237\001\022!\n\033S2S_LOAD_PLAYER_TO_GAME_ACK\020\262\237\001\022"
      "!\n\033S2S_SAVE_PLAYER_TO_DATA_REQ\020\263\237\001\022!\n\033S2"
      "S_SAVE_PLAYER_TO_GAME_ACK\020\264\237\001\022\"\n\034S2S_QUE"
      "RY_PLAYER_TO_DATA_REQ\020\265\237\001\022\"\n\034S2S_QUERY_P"
      "LAYER_TO_GAME_ACK\020\266\237\001\022$\n\036S2S_SET_PLAYERN"
      "AME_TO_DATA_REQ\020\267\237\001\022$\n\036S2S_SET_PLAYERNAM"
      "E_TO_GAME_ACK\020\270\237\001\022\035\n\027S2S_NEW_PLAYER_MAIL"
      "_REQ\020\225\240\001\022\030\n\022S2S_QUERY_MAIL_REQ\020\226\240\001\022\030\n\022S2"
      "S_QUERY_MAIL_ACK\020\227\240\001\022\026\n\020S2S_ADD_MAIL_REQ"
      "\020\230\240\001\022\035\n\027S2S_NOTICE_NEW_MAIL_REQ\020\231\240\001\022 \n\032S"
      "2S_UPDATE_MAIL_STATUS_REQ\020\232\240\001\022 \n\032S2S_UPD"
      "ATE_MAIL_STATUS_ACK\020\233\240\001\022\036\n\030S2S_UPDATE_RA"
      "NK_DATA_REQ\020\371\240\001\022\035\n\027S2S_QUERY_RANK_LIST_R"
      "EQ\020\372\240\001\022$\n\036S2S_QUERY_FRIEND_RANK_LIST_REQ"
      "\020\373\240\001\022\032\n\024S2S_REFRESH_RANK_REQ\020\374\240\001\022\032\n\024S2S_"
      "REFRESH_RANK_ACK\020\375\240\001\022\033\n\025S2S_TELL_REFRESH"
      "_RANK\020\376\240\001\022#\n\035S2S_UPDATE_DATA_TO_PUBLIC_R"
      "EQ\020\335\241\001\022#\n\035S2S_QUERY_BASIC_TO_PUBLIC_REQ\020"
      "\336\241\001\022!\n\033S2S_QUERY_BASIC_TO_GAME_ACK\020\337\241\001\022&"
      "\n S2S_QUERY_FRIEND_TO_RELATION_REQ\020\301\242\001\022\""
      "\n\034S2S_QUERY_FRIEND_TO_GAME_ACK\020\302\242\001\022-\n\'S2"
      "S_QUERY_FRIEND_INVITE_TO_RELATION_REQ\020\303\242"
      "\001\022)\n#S2S_QUERY_FRIEND_INVITE_TO_GAME_ACK"
      "\020\304\242\001\022#\n\035S2S_UPDATE_DATA_TO_FRIEND_REQ\020\305\242"
      "\001\022+\n%S2S_ADD_FRIEND_INVITE_TO_RELATION_R"
      "EQ\020\306\242\001\022\'\n!S2S_ADD_FRIEND_INVITE_TO_GAME_"
      "ACK\020\307\242\001\022+\n%S2S_DEL_FRIEND_INVITE_TO_RELA"
      "TION_REQ\020\310\242\001\022$\n\036S2S_ADD_FRIEND_TO_RELATI"
      "ON_REQ\020\311\242\001\022 \n\032S2S_ADD_FRIEND_TO_GAME_ACK"
      "\020\312\242\001\022$\n\036S2S_DEL_FRIEND_TO_RELATION_REQ\020\313"
      "\242\001\022 \n\032S2S_DEL_FRIEND_TO_GAME_ACK\020\314\242\001\022-\n\'"
      "S2S_UPDATE_FRIENDLINESS_TO_RELATION_REQ\020"
      "\315\242\001\022)\n#S2S_UPDATE_FRIENDLINESS_TO_GAME_A"
      "CK\020\316\242\001b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 7334);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "FrameServerMessage.proto", &protobuf_RegisterTypes);
  ::protobuf_FrameDefineMessage_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_FrameServerMessage_2eproto
namespace KFMsg {
const ::google::protobuf::EnumDescriptor* FrameServerProtocol_descriptor() {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_FrameServerMessage_2eproto::file_level_enum_descriptors[0];
}
bool FrameServerProtocol_IsValid(int value) {
  switch (value) {
    case 0:
    case 20001:
    case 20002:
    case 20003:
    case 20101:
    case 20102:
    case 20103:
    case 20104:
    case 20105:
    case 20106:
    case 20107:
    case 20108:
    case 20109:
    case 20110:
    case 20111:
    case 20202:
    case 20203:
    case 20204:
    case 20205:
    case 20206:
    case 20207:
    case 20301:
    case 20302:
    case 20303:
    case 20304:
    case 20305:
    case 20401:
    case 20402:
    case 20403:
    case 20404:
    case 20405:
    case 20406:
    case 20407:
    case 20408:
    case 20501:
    case 20502:
    case 20503:
    case 20504:
    case 20505:
    case 20506:
    case 20507:
    case 20601:
    case 20602:
    case 20603:
    case 20604:
    case 20605:
    case 20606:
    case 20701:
    case 20702:
    case 20703:
    case 20801:
    case 20802:
    case 20803:
    case 20804:
    case 20805:
    case 20806:
    case 20807:
    case 20808:
    case 20809:
    case 20810:
    case 20811:
    case 20812:
    case 20813:
    case 20814:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void PBZoneData::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBZoneData::kAppidFieldNumber;
const int PBZoneData::kIpFieldNumber;
const int PBZoneData::kPortFieldNumber;
const int PBZoneData::kCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBZoneData::PBZoneData()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_PBZoneData.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBZoneData)
}
PBZoneData::PBZoneData(const PBZoneData& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  ::memcpy(&appid_, &from.appid_,
    static_cast<size_t>(reinterpret_cast<char*>(&count_) -
    reinterpret_cast<char*>(&appid_)) + sizeof(count_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBZoneData)
}

void PBZoneData::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(count_));
}

PBZoneData::~PBZoneData() {
  // @@protoc_insertion_point(destructor:KFMsg.PBZoneData)
  SharedDtor();
}

void PBZoneData::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void PBZoneData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBZoneData::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBZoneData& PBZoneData::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_PBZoneData.base);
  return *internal_default_instance();
}


void PBZoneData::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBZoneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&appid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&count_) -
      reinterpret_cast<char*>(&appid_)) + sizeof(count_));
  _internal_metadata_.Clear();
}

bool PBZoneData::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBZoneData)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 appid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &appid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes ip = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 port = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &port_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBZoneData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBZoneData)
  return false;
#undef DO_
}

void PBZoneData::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBZoneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appid = 1;
  if (this->appid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->appid(), output);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->ip(), output);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->port(), output);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->count(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBZoneData)
}

::google::protobuf::uint8* PBZoneData::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBZoneData)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 appid = 1;
  if (this->appid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->appid(), target);
  }

  // bytes ip = 2;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->ip(), target);
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->port(), target);
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->count(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBZoneData)
  return target;
}

size_t PBZoneData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBZoneData)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 2;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // uint64 appid = 1;
  if (this->appid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->appid());
  }

  // uint32 port = 3;
  if (this->port() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->port());
  }

  // uint32 count = 4;
  if (this->count() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->count());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBZoneData::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBZoneData)
  GOOGLE_DCHECK_NE(&from, this);
  const PBZoneData* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBZoneData>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBZoneData)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBZoneData)
    MergeFrom(*source);
  }
}

void PBZoneData::MergeFrom(const PBZoneData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBZoneData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.appid() != 0) {
    set_appid(from.appid());
  }
  if (from.port() != 0) {
    set_port(from.port());
  }
  if (from.count() != 0) {
    set_count(from.count());
  }
}

void PBZoneData::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBZoneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBZoneData::CopyFrom(const PBZoneData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBZoneData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBZoneData::IsInitialized() const {
  return true;
}

void PBZoneData::Swap(PBZoneData* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBZoneData::InternalSwap(PBZoneData* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(appid_, other->appid_);
  swap(port_, other->port_);
  swap(count_, other->count_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBZoneData::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateZoneToLoginReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SUpdateZoneToLoginReq_default_instance_._instance.get_mutable()->zonedata_ = const_cast< ::KFMsg::PBZoneData*>(
      ::KFMsg::PBZoneData::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateZoneToLoginReq::kZonedataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateZoneToLoginReq::S2SUpdateZoneToLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateZoneToLoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateZoneToLoginReq)
}
S2SUpdateZoneToLoginReq::S2SUpdateZoneToLoginReq(const S2SUpdateZoneToLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_zonedata()) {
    zonedata_ = new ::KFMsg::PBZoneData(*from.zonedata_);
  } else {
    zonedata_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateZoneToLoginReq)
}

void S2SUpdateZoneToLoginReq::SharedCtor() {
  zonedata_ = NULL;
}

S2SUpdateZoneToLoginReq::~S2SUpdateZoneToLoginReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateZoneToLoginReq)
  SharedDtor();
}

void S2SUpdateZoneToLoginReq::SharedDtor() {
  if (this != internal_default_instance()) delete zonedata_;
}

void S2SUpdateZoneToLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateZoneToLoginReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateZoneToLoginReq& S2SUpdateZoneToLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateZoneToLoginReq.base);
  return *internal_default_instance();
}


void S2SUpdateZoneToLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateZoneToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && zonedata_ != NULL) {
    delete zonedata_;
  }
  zonedata_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SUpdateZoneToLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateZoneToLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBZoneData zonedata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_zonedata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateZoneToLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateZoneToLoginReq)
  return false;
#undef DO_
}

void S2SUpdateZoneToLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateZoneToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBZoneData zonedata = 1;
  if (this->has_zonedata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_zonedata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateZoneToLoginReq)
}

::google::protobuf::uint8* S2SUpdateZoneToLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateZoneToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBZoneData zonedata = 1;
  if (this->has_zonedata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_zonedata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateZoneToLoginReq)
  return target;
}

size_t S2SUpdateZoneToLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateZoneToLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBZoneData zonedata = 1;
  if (this->has_zonedata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *zonedata_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateZoneToLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateZoneToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateZoneToLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateZoneToLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateZoneToLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateZoneToLoginReq)
    MergeFrom(*source);
  }
}

void S2SUpdateZoneToLoginReq::MergeFrom(const S2SUpdateZoneToLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateZoneToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_zonedata()) {
    mutable_zonedata()->::KFMsg::PBZoneData::MergeFrom(from.zonedata());
  }
}

void S2SUpdateZoneToLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateZoneToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateZoneToLoginReq::CopyFrom(const S2SUpdateZoneToLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateZoneToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateZoneToLoginReq::IsInitialized() const {
  return true;
}

void S2SUpdateZoneToLoginReq::Swap(S2SUpdateZoneToLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateZoneToLoginReq::InternalSwap(S2SUpdateZoneToLoginReq* other) {
  using std::swap;
  swap(zonedata_, other->zonedata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateZoneToLoginReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddGateToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddGateToWorldReq::kGameidFieldNumber;
const int S2SAddGateToWorldReq::kGateidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddGateToWorldReq::S2SAddGateToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddGateToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddGateToWorldReq)
}
S2SAddGateToWorldReq::S2SAddGateToWorldReq(const S2SAddGateToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      gateid_(from.gateid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  gameid_ = from.gameid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddGateToWorldReq)
}

void S2SAddGateToWorldReq::SharedCtor() {
  gameid_ = GOOGLE_ULONGLONG(0);
}

S2SAddGateToWorldReq::~S2SAddGateToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddGateToWorldReq)
  SharedDtor();
}

void S2SAddGateToWorldReq::SharedDtor() {
}

void S2SAddGateToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddGateToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddGateToWorldReq& S2SAddGateToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddGateToWorldReq.base);
  return *internal_default_instance();
}


void S2SAddGateToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  gateid_.Clear();
  gameid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddGateToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddGateToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 gameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_gateid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_gateid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddGateToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddGateToWorldReq)
  return false;
#undef DO_
}

void S2SAddGateToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // repeated uint64 gateid = 2;
  if (this->gateid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _gateid_cached_byte_size_));
  }
  for (int i = 0, n = this->gateid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->gateid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddGateToWorldReq)
}

::google::protobuf::uint8* S2SAddGateToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // repeated uint64 gateid = 2;
  if (this->gateid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _gateid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->gateid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddGateToWorldReq)
  return target;
}

size_t S2SAddGateToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddGateToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 gateid = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->gateid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _gateid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddGateToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddGateToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddGateToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddGateToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddGateToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddGateToWorldReq)
    MergeFrom(*source);
  }
}

void S2SAddGateToWorldReq::MergeFrom(const S2SAddGateToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddGateToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  gateid_.MergeFrom(from.gateid_);
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
}

void S2SAddGateToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddGateToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddGateToWorldReq::CopyFrom(const S2SAddGateToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddGateToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddGateToWorldReq::IsInitialized() const {
  return true;
}

void S2SAddGateToWorldReq::Swap(S2SAddGateToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddGateToWorldReq::InternalSwap(S2SAddGateToWorldReq* other) {
  using std::swap;
  gateid_.InternalSwap(&other->gateid_);
  swap(gameid_, other->gameid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddGateToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRemoveGateToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRemoveGateToWorldReq::kGameidFieldNumber;
const int S2SRemoveGateToWorldReq::kGateidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRemoveGateToWorldReq::S2SRemoveGateToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SRemoveGateToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRemoveGateToWorldReq)
}
S2SRemoveGateToWorldReq::S2SRemoveGateToWorldReq(const S2SRemoveGateToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gameid_, &from.gameid_,
    static_cast<size_t>(reinterpret_cast<char*>(&gateid_) -
    reinterpret_cast<char*>(&gameid_)) + sizeof(gateid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRemoveGateToWorldReq)
}

void S2SRemoveGateToWorldReq::SharedCtor() {
  ::memset(&gameid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gateid_) -
      reinterpret_cast<char*>(&gameid_)) + sizeof(gateid_));
}

S2SRemoveGateToWorldReq::~S2SRemoveGateToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRemoveGateToWorldReq)
  SharedDtor();
}

void S2SRemoveGateToWorldReq::SharedDtor() {
}

void S2SRemoveGateToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRemoveGateToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRemoveGateToWorldReq& S2SRemoveGateToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SRemoveGateToWorldReq.base);
  return *internal_default_instance();
}


void S2SRemoveGateToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRemoveGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gameid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&gateid_) -
      reinterpret_cast<char*>(&gameid_)) + sizeof(gateid_));
  _internal_metadata_.Clear();
}

bool S2SRemoveGateToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRemoveGateToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 gameid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRemoveGateToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRemoveGateToWorldReq)
  return false;
#undef DO_
}

void S2SRemoveGateToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRemoveGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->gameid(), output);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gateid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRemoveGateToWorldReq)
}

::google::protobuf::uint8* S2SRemoveGateToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRemoveGateToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->gameid(), target);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gateid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRemoveGateToWorldReq)
  return target;
}

size_t S2SRemoveGateToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRemoveGateToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 gameid = 1;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gateid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRemoveGateToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRemoveGateToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRemoveGateToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRemoveGateToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRemoveGateToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRemoveGateToWorldReq)
    MergeFrom(*source);
  }
}

void S2SRemoveGateToWorldReq::MergeFrom(const S2SRemoveGateToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRemoveGateToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
}

void S2SRemoveGateToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRemoveGateToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRemoveGateToWorldReq::CopyFrom(const S2SRemoveGateToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRemoveGateToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRemoveGateToWorldReq::IsInitialized() const {
  return true;
}

void S2SRemoveGateToWorldReq::Swap(S2SRemoveGateToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRemoveGateToWorldReq::InternalSwap(S2SRemoveGateToWorldReq* other) {
  using std::swap;
  swap(gameid_, other->gameid_);
  swap(gateid_, other->gateid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRemoveGateToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToLoginReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToLoginReq::kIpFieldNumber;
const int S2SLoginToLoginReq::kTokenFieldNumber;
const int S2SLoginToLoginReq::kAccountidFieldNumber;
const int S2SLoginToLoginReq::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToLoginReq::S2SLoginToLoginReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToLoginReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToLoginReq)
}
S2SLoginToLoginReq::S2SLoginToLoginReq(const S2SLoginToLoginReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.ip().size() > 0) {
    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&sessionid_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToLoginReq)
}

void S2SLoginToLoginReq::SharedCtor() {
  ip_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
}

S2SLoginToLoginReq::~S2SLoginToLoginReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToLoginReq)
  SharedDtor();
}

void S2SLoginToLoginReq::SharedDtor() {
  ip_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SLoginToLoginReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToLoginReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToLoginReq& S2SLoginToLoginReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToLoginReq.base);
  return *internal_default_instance();
}


void S2SLoginToLoginReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&sessionid_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(sessionid_));
  _internal_metadata_.Clear();
}

bool S2SLoginToLoginReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToLoginReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes ip = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_ip()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes token = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToLoginReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToLoginReq)
  return false;
#undef DO_
}

void S2SLoginToLoginReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->ip(), output);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->token(), output);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->accountid(), output);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToLoginReq)
}

::google::protobuf::uint8* S2SLoginToLoginReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToLoginReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes ip = 1;
  if (this->ip().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->ip(), target);
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->token(), target);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->accountid(), target);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToLoginReq)
  return target;
}

size_t S2SLoginToLoginReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToLoginReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes ip = 1;
  if (this->ip().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->ip());
  }

  // bytes token = 2;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToLoginReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToLoginReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToLoginReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToLoginReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToLoginReq)
    MergeFrom(*source);
  }
}

void S2SLoginToLoginReq::MergeFrom(const S2SLoginToLoginReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToLoginReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.ip().size() > 0) {

    ip_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.ip_);
  }
  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
}

void S2SLoginToLoginReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToLoginReq::CopyFrom(const S2SLoginToLoginReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToLoginReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToLoginReq::IsInitialized() const {
  return true;
}

void S2SLoginToLoginReq::Swap(S2SLoginToLoginReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToLoginReq::InternalSwap(S2SLoginToLoginReq* other) {
  using std::swap;
  ip_.Swap(&other->ip_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToLoginReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToGateAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToGateAck::kResultFieldNumber;
const int S2SLoginToGateAck::kAccountidFieldNumber;
const int S2SLoginToGateAck::kSessionidFieldNumber;
const int S2SLoginToGateAck::kBantimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToGateAck::S2SLoginToGateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToGateAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToGateAck)
}
S2SLoginToGateAck::S2SLoginToGateAck(const S2SLoginToGateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&accountid_, &from.accountid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToGateAck)
}

void S2SLoginToGateAck::SharedCtor() {
  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
}

S2SLoginToGateAck::~S2SLoginToGateAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToGateAck)
  SharedDtor();
}

void S2SLoginToGateAck::SharedDtor() {
}

void S2SLoginToGateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToGateAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToGateAck& S2SLoginToGateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToGateAck.base);
  return *internal_default_instance();
}


void S2SLoginToGateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&accountid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&accountid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SLoginToGateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToGateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 bantime = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &bantime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToGateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToGateAck)
  return false;
#undef DO_
}

void S2SLoginToGateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->accountid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->bantime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToGateAck)
}

::google::protobuf::uint8* S2SLoginToGateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->accountid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->bantime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToGateAck)
  return target;
}

size_t S2SLoginToGateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToGateAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 accountid = 2;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 bantime = 4;
  if (this->bantime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->bantime());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToGateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToGateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToGateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToGateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToGateAck)
    MergeFrom(*source);
  }
}

void S2SLoginToGateAck::MergeFrom(const S2SLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.bantime() != 0) {
    set_bantime(from.bantime());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginToGateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToGateAck::CopyFrom(const S2SLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToGateAck::IsInitialized() const {
  return true;
}

void S2SLoginToGateAck::Swap(S2SLoginToGateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToGateAck::InternalSwap(S2SLoginToGateAck* other) {
  using std::swap;
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  swap(bantime_, other->bantime_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToGateAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToWorldReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginToWorldReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
void S2SLoginToWorldReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToWorldReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToWorldReq::S2SLoginToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToWorldReq)
}
S2SLoginToWorldReq::S2SLoginToWorldReq(const S2SLoginToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToWorldReq)
}

void S2SLoginToWorldReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoginToWorldReq::~S2SLoginToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToWorldReq)
  SharedDtor();
}

void S2SLoginToWorldReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoginToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToWorldReq& S2SLoginToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToWorldReq.base);
  return *internal_default_instance();
}


void S2SLoginToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoginToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToWorldReq)
  return false;
#undef DO_
}

void S2SLoginToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToWorldReq)
}

::google::protobuf::uint8* S2SLoginToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToWorldReq)
  return target;
}

size_t S2SLoginToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToWorldReq)
    MergeFrom(*source);
  }
}

void S2SLoginToWorldReq::MergeFrom(const S2SLoginToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoginToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToWorldReq::CopyFrom(const S2SLoginToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToWorldReq::IsInitialized() const {
  return true;
}

void S2SLoginToWorldReq::Swap(S2SLoginToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToWorldReq::InternalSwap(S2SLoginToWorldReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToLoginAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToLoginAck::kResultFieldNumber;
const int S2SLoginToLoginAck::kGateidFieldNumber;
const int S2SLoginToLoginAck::kAccountidFieldNumber;
const int S2SLoginToLoginAck::kSessionidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToLoginAck::S2SLoginToLoginAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToLoginAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToLoginAck)
}
S2SLoginToLoginAck::S2SLoginToLoginAck(const S2SLoginToLoginAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&gateid_, &from.gateid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToLoginAck)
}

void S2SLoginToLoginAck::SharedCtor() {
  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
}

S2SLoginToLoginAck::~S2SLoginToLoginAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToLoginAck)
  SharedDtor();
}

void S2SLoginToLoginAck::SharedDtor() {
}

void S2SLoginToLoginAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToLoginAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToLoginAck& S2SLoginToLoginAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToLoginAck.base);
  return *internal_default_instance();
}


void S2SLoginToLoginAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&gateid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&gateid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SLoginToLoginAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToLoginAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gateid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gateid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToLoginAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToLoginAck)
  return false;
#undef DO_
}

void S2SLoginToLoginAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->gateid(), output);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->accountid(), output);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->sessionid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToLoginAck)
}

::google::protobuf::uint8* S2SLoginToLoginAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToLoginAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->gateid(), target);
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->accountid(), target);
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->sessionid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToLoginAck)
  return target;
}

size_t S2SLoginToLoginAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToLoginAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 gateid = 2;
  if (this->gateid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gateid());
  }

  // uint64 accountid = 3;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  // uint64 sessionid = 4;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToLoginAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToLoginAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToLoginAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToLoginAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToLoginAck)
    MergeFrom(*source);
  }
}

void S2SLoginToLoginAck::MergeFrom(const S2SLoginToLoginAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToLoginAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.gateid() != 0) {
    set_gateid(from.gateid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoginToLoginAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToLoginAck::CopyFrom(const S2SLoginToLoginAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToLoginAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToLoginAck::IsInitialized() const {
  return true;
}

void S2SLoginToLoginAck::Swap(S2SLoginToLoginAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToLoginAck::InternalSwap(S2SLoginToLoginAck* other) {
  using std::swap;
  swap(gateid_, other->gateid_);
  swap(accountid_, other->accountid_);
  swap(sessionid_, other->sessionid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToLoginAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoginToGameReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoginToGameReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
void S2SLoginToGameReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoginToGameReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoginToGameReq::S2SLoginToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoginToGameReq)
}
S2SLoginToGameReq::S2SLoginToGameReq(const S2SLoginToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoginToGameReq)
}

void S2SLoginToGameReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoginToGameReq::~S2SLoginToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoginToGameReq)
  SharedDtor();
}

void S2SLoginToGameReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoginToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoginToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoginToGameReq& S2SLoginToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoginToGameReq.base);
  return *internal_default_instance();
}


void S2SLoginToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoginToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoginToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoginToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoginToGameReq)
  return false;
#undef DO_
}

void S2SLoginToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoginToGameReq)
}

::google::protobuf::uint8* S2SLoginToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoginToGameReq)
  return target;
}

size_t S2SLoginToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoginToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoginToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoginToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoginToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoginToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoginToGameReq)
    MergeFrom(*source);
  }
}

void S2SLoginToGameReq::MergeFrom(const S2SLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoginToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoginToGameReq::CopyFrom(const S2SLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoginToGameReq::IsInitialized() const {
  return true;
}

void S2SLoginToGameReq::Swap(S2SLoginToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoginToGameReq::InternalSwap(S2SLoginToGameReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoginToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SEnterToGateAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SEnterToGateAck_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
  ::KFMsg::_S2SEnterToGateAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SEnterToGateAck::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
void S2SEnterToGateAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SEnterToGateAck::kPbloginFieldNumber;
const int S2SEnterToGateAck::kPlayerdataFieldNumber;
const int S2SEnterToGateAck::kServertimeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SEnterToGateAck::S2SEnterToGateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SEnterToGateAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SEnterToGateAck)
}
S2SEnterToGateAck::S2SEnterToGateAck(const S2SEnterToGateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  servertime_ = from.servertime_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SEnterToGateAck)
}

void S2SEnterToGateAck::SharedCtor() {
  ::memset(&pblogin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&servertime_) -
      reinterpret_cast<char*>(&pblogin_)) + sizeof(servertime_));
}

S2SEnterToGateAck::~S2SEnterToGateAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SEnterToGateAck)
  SharedDtor();
}

void S2SEnterToGateAck::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SEnterToGateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SEnterToGateAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SEnterToGateAck& S2SEnterToGateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SEnterToGateAck.base);
  return *internal_default_instance();
}


void S2SEnterToGateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SEnterToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  servertime_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SEnterToGateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SEnterToGateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 servertime = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &servertime_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SEnterToGateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SEnterToGateAck)
  return false;
#undef DO_
}

void S2SEnterToGateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SEnterToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_playerdata(), output);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->servertime(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SEnterToGateAck)
}

::google::protobuf::uint8* S2SEnterToGateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SEnterToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_playerdata(), deterministic, target);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->servertime(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SEnterToGateAck)
  return target;
}

size_t S2SEnterToGateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SEnterToGateAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint64 servertime = 3;
  if (this->servertime() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->servertime());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SEnterToGateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SEnterToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SEnterToGateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SEnterToGateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SEnterToGateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SEnterToGateAck)
    MergeFrom(*source);
  }
}

void S2SEnterToGateAck::MergeFrom(const S2SEnterToGateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SEnterToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.servertime() != 0) {
    set_servertime(from.servertime());
  }
}

void S2SEnterToGateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SEnterToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SEnterToGateAck::CopyFrom(const S2SEnterToGateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SEnterToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SEnterToGateAck::IsInitialized() const {
  return true;
}

void S2SEnterToGateAck::Swap(S2SEnterToGateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SEnterToGateAck::InternalSwap(S2SEnterToGateAck* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  swap(playerdata_, other->playerdata_);
  swap(servertime_, other->servertime_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SEnterToGateAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLogoutToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLogoutToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLogoutToGameReq::S2SLogoutToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLogoutToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLogoutToGameReq)
}
S2SLogoutToGameReq::S2SLogoutToGameReq(const S2SLogoutToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLogoutToGameReq)
}

void S2SLogoutToGameReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SLogoutToGameReq::~S2SLogoutToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLogoutToGameReq)
  SharedDtor();
}

void S2SLogoutToGameReq::SharedDtor() {
}

void S2SLogoutToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLogoutToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLogoutToGameReq& S2SLogoutToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLogoutToGameReq.base);
  return *internal_default_instance();
}


void S2SLogoutToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLogoutToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SLogoutToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLogoutToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLogoutToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLogoutToGameReq)
  return false;
#undef DO_
}

void S2SLogoutToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLogoutToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLogoutToGameReq)
}

::google::protobuf::uint8* S2SLogoutToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLogoutToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLogoutToGameReq)
  return target;
}

size_t S2SLogoutToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLogoutToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLogoutToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLogoutToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLogoutToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLogoutToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLogoutToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLogoutToGameReq)
    MergeFrom(*source);
  }
}

void S2SLogoutToGameReq::MergeFrom(const S2SLogoutToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLogoutToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SLogoutToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLogoutToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLogoutToGameReq::CopyFrom(const S2SLogoutToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLogoutToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLogoutToGameReq::IsInitialized() const {
  return true;
}

void S2SLogoutToGameReq::Swap(S2SLogoutToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLogoutToGameReq::InternalSwap(S2SLogoutToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLogoutToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDisconnectToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDisconnectToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDisconnectToGameReq::S2SDisconnectToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SDisconnectToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDisconnectToGameReq)
}
S2SDisconnectToGameReq::S2SDisconnectToGameReq(const S2SDisconnectToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDisconnectToGameReq)
}

void S2SDisconnectToGameReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SDisconnectToGameReq::~S2SDisconnectToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDisconnectToGameReq)
  SharedDtor();
}

void S2SDisconnectToGameReq::SharedDtor() {
}

void S2SDisconnectToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDisconnectToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDisconnectToGameReq& S2SDisconnectToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SDisconnectToGameReq.base);
  return *internal_default_instance();
}


void S2SDisconnectToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDisconnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDisconnectToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDisconnectToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDisconnectToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDisconnectToGameReq)
  return false;
#undef DO_
}

void S2SDisconnectToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDisconnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDisconnectToGameReq)
}

::google::protobuf::uint8* S2SDisconnectToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDisconnectToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDisconnectToGameReq)
  return target;
}

size_t S2SDisconnectToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDisconnectToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDisconnectToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDisconnectToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDisconnectToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDisconnectToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDisconnectToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDisconnectToGameReq)
    MergeFrom(*source);
  }
}

void S2SDisconnectToGameReq::MergeFrom(const S2SDisconnectToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDisconnectToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SDisconnectToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDisconnectToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDisconnectToGameReq::CopyFrom(const S2SDisconnectToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDisconnectToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDisconnectToGameReq::IsInitialized() const {
  return true;
}

void S2SDisconnectToGameReq::Swap(S2SDisconnectToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDisconnectToGameReq::InternalSwap(S2SDisconnectToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDisconnectToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLeaveToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLeaveToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLeaveToGameReq::S2SLeaveToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLeaveToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLeaveToGameReq)
}
S2SLeaveToGameReq::S2SLeaveToGameReq(const S2SLeaveToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLeaveToGameReq)
}

void S2SLeaveToGameReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SLeaveToGameReq::~S2SLeaveToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLeaveToGameReq)
  SharedDtor();
}

void S2SLeaveToGameReq::SharedDtor() {
}

void S2SLeaveToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLeaveToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLeaveToGameReq& S2SLeaveToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLeaveToGameReq.base);
  return *internal_default_instance();
}


void S2SLeaveToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLeaveToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SLeaveToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLeaveToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLeaveToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLeaveToGameReq)
  return false;
#undef DO_
}

void S2SLeaveToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLeaveToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLeaveToGameReq)
}

::google::protobuf::uint8* S2SLeaveToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLeaveToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLeaveToGameReq)
  return target;
}

size_t S2SLeaveToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLeaveToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLeaveToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLeaveToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLeaveToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLeaveToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLeaveToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLeaveToGameReq)
    MergeFrom(*source);
  }
}

void S2SLeaveToGameReq::MergeFrom(const S2SLeaveToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLeaveToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SLeaveToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLeaveToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLeaveToGameReq::CopyFrom(const S2SLeaveToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLeaveToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLeaveToGameReq::IsInitialized() const {
  return true;
}

void S2SLeaveToGameReq::Swap(S2SLeaveToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLeaveToGameReq::InternalSwap(S2SLeaveToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLeaveToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SReLoginToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SReLoginToGameReq::kTokenFieldNumber;
const int S2SReLoginToGameReq::kPlayeridFieldNumber;
const int S2SReLoginToGameReq::kSessionidFieldNumber;
const int S2SReLoginToGameReq::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SReLoginToGameReq::S2SReLoginToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SReLoginToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SReLoginToGameReq)
}
S2SReLoginToGameReq::S2SReLoginToGameReq(const S2SReLoginToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SReLoginToGameReq)
}

void S2SReLoginToGameReq::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SReLoginToGameReq::~S2SReLoginToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SReLoginToGameReq)
  SharedDtor();
}

void S2SReLoginToGameReq::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SReLoginToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SReLoginToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SReLoginToGameReq& S2SReLoginToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SReLoginToGameReq.base);
  return *internal_default_instance();
}


void S2SReLoginToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SReLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SReLoginToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SReLoginToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SReLoginToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SReLoginToGameReq)
  return false;
#undef DO_
}

void S2SReLoginToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SReLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SReLoginToGameReq)
}

::google::protobuf::uint8* S2SReLoginToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SReLoginToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SReLoginToGameReq)
  return target;
}

size_t S2SReLoginToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SReLoginToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SReLoginToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SReLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SReLoginToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SReLoginToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SReLoginToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SReLoginToGameReq)
    MergeFrom(*source);
  }
}

void S2SReLoginToGameReq::MergeFrom(const S2SReLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SReLoginToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SReLoginToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SReLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SReLoginToGameReq::CopyFrom(const S2SReLoginToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SReLoginToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SReLoginToGameReq::IsInitialized() const {
  return true;
}

void S2SReLoginToGameReq::Swap(S2SReLoginToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SReLoginToGameReq::InternalSwap(S2SReLoginToGameReq* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(sessionid_, other->sessionid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SReLoginToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SReLoginToGateAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SReLoginToGateAck::kTokenFieldNumber;
const int S2SReLoginToGateAck::kPlayeridFieldNumber;
const int S2SReLoginToGateAck::kSessionidFieldNumber;
const int S2SReLoginToGateAck::kAccountidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SReLoginToGateAck::S2SReLoginToGateAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SReLoginToGateAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SReLoginToGateAck)
}
S2SReLoginToGateAck::S2SReLoginToGateAck(const S2SReLoginToGateAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.token().size() > 0) {
    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&accountid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SReLoginToGateAck)
}

void S2SReLoginToGateAck::SharedCtor() {
  token_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
}

S2SReLoginToGateAck::~S2SReLoginToGateAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SReLoginToGateAck)
  SharedDtor();
}

void S2SReLoginToGateAck::SharedDtor() {
  token_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SReLoginToGateAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SReLoginToGateAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SReLoginToGateAck& S2SReLoginToGateAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SReLoginToGateAck.base);
  return *internal_default_instance();
}


void S2SReLoginToGateAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SReLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&accountid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(accountid_));
  _internal_metadata_.Clear();
}

bool S2SReLoginToGateAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SReLoginToGateAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes token = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_token()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 sessionid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &sessionid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 accountid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &accountid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SReLoginToGateAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SReLoginToGateAck)
  return false;
#undef DO_
}

void S2SReLoginToGateAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SReLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->token(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->sessionid(), output);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->accountid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SReLoginToGateAck)
}

::google::protobuf::uint8* S2SReLoginToGateAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SReLoginToGateAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes token = 1;
  if (this->token().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->token(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->sessionid(), target);
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->accountid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SReLoginToGateAck)
  return target;
}

size_t S2SReLoginToGateAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SReLoginToGateAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes token = 1;
  if (this->token().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->token());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 sessionid = 3;
  if (this->sessionid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->sessionid());
  }

  // uint64 accountid = 4;
  if (this->accountid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->accountid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SReLoginToGateAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SReLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SReLoginToGateAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SReLoginToGateAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SReLoginToGateAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SReLoginToGateAck)
    MergeFrom(*source);
  }
}

void S2SReLoginToGateAck::MergeFrom(const S2SReLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SReLoginToGateAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.token().size() > 0) {

    token_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.token_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.sessionid() != 0) {
    set_sessionid(from.sessionid());
  }
  if (from.accountid() != 0) {
    set_accountid(from.accountid());
  }
}

void S2SReLoginToGateAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SReLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SReLoginToGateAck::CopyFrom(const S2SReLoginToGateAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SReLoginToGateAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SReLoginToGateAck::IsInitialized() const {
  return true;
}

void S2SReLoginToGateAck::Swap(S2SReLoginToGateAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SReLoginToGateAck::InternalSwap(S2SReLoginToGateAck* other) {
  using std::swap;
  token_.Swap(&other->token_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(sessionid_, other->sessionid_);
  swap(accountid_, other->accountid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SReLoginToGateAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoadPlayerToDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoadPlayerToDataReq_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
}
void S2SLoadPlayerToDataReq::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoadPlayerToDataReq::kPbloginFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoadPlayerToDataReq::S2SLoadPlayerToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoadPlayerToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoadPlayerToDataReq)
}
S2SLoadPlayerToDataReq::S2SLoadPlayerToDataReq(const S2SLoadPlayerToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoadPlayerToDataReq)
}

void S2SLoadPlayerToDataReq::SharedCtor() {
  pblogin_ = NULL;
}

S2SLoadPlayerToDataReq::~S2SLoadPlayerToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoadPlayerToDataReq)
  SharedDtor();
}

void S2SLoadPlayerToDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
}

void S2SLoadPlayerToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoadPlayerToDataReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoadPlayerToDataReq& S2SLoadPlayerToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoadPlayerToDataReq.base);
  return *internal_default_instance();
}


void S2SLoadPlayerToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoadPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  _internal_metadata_.Clear();
}

bool S2SLoadPlayerToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoadPlayerToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .KFMsg.PBLoginData pblogin = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoadPlayerToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoadPlayerToDataReq)
  return false;
#undef DO_
}

void S2SLoadPlayerToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoadPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_pblogin(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoadPlayerToDataReq)
}

::google::protobuf::uint8* S2SLoadPlayerToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoadPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_pblogin(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoadPlayerToDataReq)
  return target;
}

size_t S2SLoadPlayerToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoadPlayerToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 1;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoadPlayerToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoadPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoadPlayerToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoadPlayerToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoadPlayerToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoadPlayerToDataReq)
    MergeFrom(*source);
  }
}

void S2SLoadPlayerToDataReq::MergeFrom(const S2SLoadPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoadPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
}

void S2SLoadPlayerToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoadPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoadPlayerToDataReq::CopyFrom(const S2SLoadPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoadPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoadPlayerToDataReq::IsInitialized() const {
  return true;
}

void S2SLoadPlayerToDataReq::Swap(S2SLoadPlayerToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoadPlayerToDataReq::InternalSwap(S2SLoadPlayerToDataReq* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoadPlayerToDataReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SLoadPlayerToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SLoadPlayerToGameAck_default_instance_._instance.get_mutable()->pblogin_ = const_cast< ::KFMsg::PBLoginData*>(
      ::KFMsg::PBLoginData::internal_default_instance());
  ::KFMsg::_S2SLoadPlayerToGameAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SLoadPlayerToGameAck::clear_pblogin() {
  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
}
void S2SLoadPlayerToGameAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SLoadPlayerToGameAck::kResultFieldNumber;
const int S2SLoadPlayerToGameAck::kPbloginFieldNumber;
const int S2SLoadPlayerToGameAck::kPlayerdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SLoadPlayerToGameAck::S2SLoadPlayerToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SLoadPlayerToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SLoadPlayerToGameAck)
}
S2SLoadPlayerToGameAck::S2SLoadPlayerToGameAck(const S2SLoadPlayerToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pblogin()) {
    pblogin_ = new ::KFMsg::PBLoginData(*from.pblogin_);
  } else {
    pblogin_ = NULL;
  }
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SLoadPlayerToGameAck)
}

void S2SLoadPlayerToGameAck::SharedCtor() {
  ::memset(&pblogin_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&pblogin_)) + sizeof(result_));
}

S2SLoadPlayerToGameAck::~S2SLoadPlayerToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SLoadPlayerToGameAck)
  SharedDtor();
}

void S2SLoadPlayerToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pblogin_;
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SLoadPlayerToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SLoadPlayerToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SLoadPlayerToGameAck& S2SLoadPlayerToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SLoadPlayerToGameAck.base);
  return *internal_default_instance();
}


void S2SLoadPlayerToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SLoadPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pblogin_ != NULL) {
    delete pblogin_;
  }
  pblogin_ = NULL;
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  result_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SLoadPlayerToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SLoadPlayerToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBLoginData pblogin = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pblogin()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SLoadPlayerToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SLoadPlayerToGameAck)
  return false;
#undef DO_
}

void S2SLoadPlayerToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SLoadPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // .KFMsg.PBLoginData pblogin = 2;
  if (this->has_pblogin()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pblogin(), output);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_playerdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SLoadPlayerToGameAck)
}

::google::protobuf::uint8* S2SLoadPlayerToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SLoadPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // .KFMsg.PBLoginData pblogin = 2;
  if (this->has_pblogin()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pblogin(), deterministic, target);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_playerdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SLoadPlayerToGameAck)
  return target;
}

size_t S2SLoadPlayerToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SLoadPlayerToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBLoginData pblogin = 2;
  if (this->has_pblogin()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pblogin_);
  }

  // .KFMsg.PBObject playerdata = 3;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SLoadPlayerToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SLoadPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SLoadPlayerToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SLoadPlayerToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SLoadPlayerToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SLoadPlayerToGameAck)
    MergeFrom(*source);
  }
}

void S2SLoadPlayerToGameAck::MergeFrom(const S2SLoadPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SLoadPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pblogin()) {
    mutable_pblogin()->::KFMsg::PBLoginData::MergeFrom(from.pblogin());
  }
  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SLoadPlayerToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SLoadPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SLoadPlayerToGameAck::CopyFrom(const S2SLoadPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SLoadPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SLoadPlayerToGameAck::IsInitialized() const {
  return true;
}

void S2SLoadPlayerToGameAck::Swap(S2SLoadPlayerToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SLoadPlayerToGameAck::InternalSwap(S2SLoadPlayerToGameAck* other) {
  using std::swap;
  swap(pblogin_, other->pblogin_);
  swap(playerdata_, other->playerdata_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SLoadPlayerToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSavePlayerToDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SSavePlayerToDataReq_default_instance_._instance.get_mutable()->data_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SSavePlayerToDataReq::clear_data() {
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSavePlayerToDataReq::kIdFieldNumber;
const int S2SSavePlayerToDataReq::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSavePlayerToDataReq::S2SSavePlayerToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSavePlayerToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSavePlayerToDataReq)
}
S2SSavePlayerToDataReq::S2SSavePlayerToDataReq(const S2SSavePlayerToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_data()) {
    data_ = new ::KFMsg::PBObject(*from.data_);
  } else {
    data_ = NULL;
  }
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSavePlayerToDataReq)
}

void S2SSavePlayerToDataReq::SharedCtor() {
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&id_) -
      reinterpret_cast<char*>(&data_)) + sizeof(id_));
}

S2SSavePlayerToDataReq::~S2SSavePlayerToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSavePlayerToDataReq)
  SharedDtor();
}

void S2SSavePlayerToDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete data_;
}

void S2SSavePlayerToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSavePlayerToDataReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSavePlayerToDataReq& S2SSavePlayerToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSavePlayerToDataReq.base);
  return *internal_default_instance();
}


void S2SSavePlayerToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSavePlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SSavePlayerToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSavePlayerToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject data = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSavePlayerToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSavePlayerToDataReq)
  return false;
#undef DO_
}

void S2SSavePlayerToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSavePlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  // .KFMsg.PBObject data = 3;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_data(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSavePlayerToDataReq)
}

::google::protobuf::uint8* S2SSavePlayerToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSavePlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  // .KFMsg.PBObject data = 3;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_data(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSavePlayerToDataReq)
  return target;
}

size_t S2SSavePlayerToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSavePlayerToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject data = 3;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSavePlayerToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSavePlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSavePlayerToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSavePlayerToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSavePlayerToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSavePlayerToDataReq)
    MergeFrom(*source);
  }
}

void S2SSavePlayerToDataReq::MergeFrom(const S2SSavePlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSavePlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_data()) {
    mutable_data()->::KFMsg::PBObject::MergeFrom(from.data());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
}

void S2SSavePlayerToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSavePlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSavePlayerToDataReq::CopyFrom(const S2SSavePlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSavePlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSavePlayerToDataReq::IsInitialized() const {
  return true;
}

void S2SSavePlayerToDataReq::Swap(S2SSavePlayerToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSavePlayerToDataReq::InternalSwap(S2SSavePlayerToDataReq* other) {
  using std::swap;
  swap(data_, other->data_);
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSavePlayerToDataReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSavePlayerToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSavePlayerToGameAck::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSavePlayerToGameAck::S2SSavePlayerToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSavePlayerToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSavePlayerToGameAck)
}
S2SSavePlayerToGameAck::S2SSavePlayerToGameAck(const S2SSavePlayerToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  id_ = from.id_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSavePlayerToGameAck)
}

void S2SSavePlayerToGameAck::SharedCtor() {
  id_ = GOOGLE_ULONGLONG(0);
}

S2SSavePlayerToGameAck::~S2SSavePlayerToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSavePlayerToGameAck)
  SharedDtor();
}

void S2SSavePlayerToGameAck::SharedDtor() {
}

void S2SSavePlayerToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSavePlayerToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSavePlayerToGameAck& S2SSavePlayerToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSavePlayerToGameAck.base);
  return *internal_default_instance();
}


void S2SSavePlayerToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSavePlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SSavePlayerToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSavePlayerToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSavePlayerToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSavePlayerToGameAck)
  return false;
#undef DO_
}

void S2SSavePlayerToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSavePlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSavePlayerToGameAck)
}

::google::protobuf::uint8* S2SSavePlayerToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSavePlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 id = 1;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSavePlayerToGameAck)
  return target;
}

size_t S2SSavePlayerToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSavePlayerToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSavePlayerToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSavePlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSavePlayerToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSavePlayerToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSavePlayerToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSavePlayerToGameAck)
    MergeFrom(*source);
  }
}

void S2SSavePlayerToGameAck::MergeFrom(const S2SSavePlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSavePlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
}

void S2SSavePlayerToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSavePlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSavePlayerToGameAck::CopyFrom(const S2SSavePlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSavePlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSavePlayerToGameAck::IsInitialized() const {
  return true;
}

void S2SSavePlayerToGameAck::Swap(S2SSavePlayerToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSavePlayerToGameAck::InternalSwap(S2SSavePlayerToGameAck* other) {
  using std::swap;
  swap(id_, other->id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSavePlayerToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryPlayerToDataReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryPlayerToDataReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryPlayerToDataReq::S2SQueryPlayerToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryPlayerToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryPlayerToDataReq)
}
S2SQueryPlayerToDataReq::S2SQueryPlayerToDataReq(const S2SQueryPlayerToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryPlayerToDataReq)
}

void S2SQueryPlayerToDataReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryPlayerToDataReq::~S2SQueryPlayerToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryPlayerToDataReq)
  SharedDtor();
}

void S2SQueryPlayerToDataReq::SharedDtor() {
}

void S2SQueryPlayerToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryPlayerToDataReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryPlayerToDataReq& S2SQueryPlayerToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryPlayerToDataReq.base);
  return *internal_default_instance();
}


void S2SQueryPlayerToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryPlayerToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryPlayerToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryPlayerToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryPlayerToDataReq)
  return false;
#undef DO_
}

void S2SQueryPlayerToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryPlayerToDataReq)
}

::google::protobuf::uint8* S2SQueryPlayerToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryPlayerToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryPlayerToDataReq)
  return target;
}

size_t S2SQueryPlayerToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryPlayerToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryPlayerToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryPlayerToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryPlayerToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryPlayerToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryPlayerToDataReq)
    MergeFrom(*source);
  }
}

void S2SQueryPlayerToDataReq::MergeFrom(const S2SQueryPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryPlayerToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryPlayerToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryPlayerToDataReq::CopyFrom(const S2SQueryPlayerToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryPlayerToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryPlayerToDataReq::IsInitialized() const {
  return true;
}

void S2SQueryPlayerToDataReq::Swap(S2SQueryPlayerToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryPlayerToDataReq::InternalSwap(S2SQueryPlayerToDataReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryPlayerToDataReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryPlayerToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SQueryPlayerToGameAck_default_instance_._instance.get_mutable()->playerdata_ = const_cast< ::KFMsg::PBObject*>(
      ::KFMsg::PBObject::internal_default_instance());
}
void S2SQueryPlayerToGameAck::clear_playerdata() {
  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryPlayerToGameAck::kResultFieldNumber;
const int S2SQueryPlayerToGameAck::kPlayerdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryPlayerToGameAck::S2SQueryPlayerToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryPlayerToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryPlayerToGameAck)
}
S2SQueryPlayerToGameAck::S2SQueryPlayerToGameAck(const S2SQueryPlayerToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_playerdata()) {
    playerdata_ = new ::KFMsg::PBObject(*from.playerdata_);
  } else {
    playerdata_ = NULL;
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryPlayerToGameAck)
}

void S2SQueryPlayerToGameAck::SharedCtor() {
  ::memset(&playerdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerdata_)) + sizeof(result_));
}

S2SQueryPlayerToGameAck::~S2SQueryPlayerToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryPlayerToGameAck)
  SharedDtor();
}

void S2SQueryPlayerToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete playerdata_;
}

void S2SQueryPlayerToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryPlayerToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryPlayerToGameAck& S2SQueryPlayerToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryPlayerToGameAck.base);
  return *internal_default_instance();
}


void S2SQueryPlayerToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && playerdata_ != NULL) {
    delete playerdata_;
  }
  playerdata_ = NULL;
  result_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SQueryPlayerToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryPlayerToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBObject playerdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_playerdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryPlayerToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryPlayerToGameAck)
  return false;
#undef DO_
}

void S2SQueryPlayerToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_playerdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryPlayerToGameAck)
}

::google::protobuf::uint8* S2SQueryPlayerToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryPlayerToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_playerdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryPlayerToGameAck)
  return target;
}

size_t S2SQueryPlayerToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryPlayerToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBObject playerdata = 2;
  if (this->has_playerdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *playerdata_);
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryPlayerToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryPlayerToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryPlayerToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryPlayerToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryPlayerToGameAck)
    MergeFrom(*source);
  }
}

void S2SQueryPlayerToGameAck::MergeFrom(const S2SQueryPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryPlayerToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_playerdata()) {
    mutable_playerdata()->::KFMsg::PBObject::MergeFrom(from.playerdata());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SQueryPlayerToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryPlayerToGameAck::CopyFrom(const S2SQueryPlayerToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryPlayerToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryPlayerToGameAck::IsInitialized() const {
  return true;
}

void S2SQueryPlayerToGameAck::Swap(S2SQueryPlayerToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryPlayerToGameAck::InternalSwap(S2SQueryPlayerToGameAck* other) {
  using std::swap;
  swap(playerdata_, other->playerdata_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryPlayerToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSetPlayerNameToDataReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSetPlayerNameToDataReq::kPlayeridFieldNumber;
const int S2SSetPlayerNameToDataReq::kOldnameFieldNumber;
const int S2SSetPlayerNameToDataReq::kNewnameFieldNumber;
const int S2SSetPlayerNameToDataReq::kItemuuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSetPlayerNameToDataReq::S2SSetPlayerNameToDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSetPlayerNameToDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSetPlayerNameToDataReq)
}
S2SSetPlayerNameToDataReq::S2SSetPlayerNameToDataReq(const S2SSetPlayerNameToDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.oldname().size() > 0) {
    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.newname().size() > 0) {
    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&itemuuid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(itemuuid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSetPlayerNameToDataReq)
}

void S2SSetPlayerNameToDataReq::SharedCtor() {
  oldname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemuuid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(itemuuid_));
}

S2SSetPlayerNameToDataReq::~S2SSetPlayerNameToDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSetPlayerNameToDataReq)
  SharedDtor();
}

void S2SSetPlayerNameToDataReq::SharedDtor() {
  oldname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSetPlayerNameToDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSetPlayerNameToDataReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSetPlayerNameToDataReq& S2SSetPlayerNameToDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSetPlayerNameToDataReq.base);
  return *internal_default_instance();
}


void S2SSetPlayerNameToDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSetPlayerNameToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  oldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&itemuuid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(itemuuid_));
  _internal_metadata_.Clear();
}

bool S2SSetPlayerNameToDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSetPlayerNameToDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes oldname = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_oldname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes newname = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_newname()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 itemuuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &itemuuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSetPlayerNameToDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSetPlayerNameToDataReq)
  return false;
#undef DO_
}

void S2SSetPlayerNameToDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSetPlayerNameToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->oldname(), output);
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->newname(), output);
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->itemuuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSetPlayerNameToDataReq)
}

::google::protobuf::uint8* S2SSetPlayerNameToDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSetPlayerNameToDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->oldname(), target);
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->newname(), target);
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->itemuuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSetPlayerNameToDataReq)
  return target;
}

size_t S2SSetPlayerNameToDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSetPlayerNameToDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes oldname = 2;
  if (this->oldname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->oldname());
  }

  // bytes newname = 3;
  if (this->newname().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->newname());
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->itemuuid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSetPlayerNameToDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSetPlayerNameToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSetPlayerNameToDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSetPlayerNameToDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSetPlayerNameToDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSetPlayerNameToDataReq)
    MergeFrom(*source);
  }
}

void S2SSetPlayerNameToDataReq::MergeFrom(const S2SSetPlayerNameToDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSetPlayerNameToDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.oldname().size() > 0) {

    oldname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.oldname_);
  }
  if (from.newname().size() > 0) {

    newname_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.newname_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.itemuuid() != 0) {
    set_itemuuid(from.itemuuid());
  }
}

void S2SSetPlayerNameToDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSetPlayerNameToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSetPlayerNameToDataReq::CopyFrom(const S2SSetPlayerNameToDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSetPlayerNameToDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSetPlayerNameToDataReq::IsInitialized() const {
  return true;
}

void S2SSetPlayerNameToDataReq::Swap(S2SSetPlayerNameToDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSetPlayerNameToDataReq::InternalSwap(S2SSetPlayerNameToDataReq* other) {
  using std::swap;
  oldname_.Swap(&other->oldname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  newname_.Swap(&other->newname_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(itemuuid_, other->itemuuid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSetPlayerNameToDataReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SSetPlayerNameToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SSetPlayerNameToGameAck::kResultFieldNumber;
const int S2SSetPlayerNameToGameAck::kPlayeridFieldNumber;
const int S2SSetPlayerNameToGameAck::kNameFieldNumber;
const int S2SSetPlayerNameToGameAck::kItemuuidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SSetPlayerNameToGameAck::S2SSetPlayerNameToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SSetPlayerNameToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SSetPlayerNameToGameAck)
}
S2SSetPlayerNameToGameAck::S2SSetPlayerNameToGameAck(const S2SSetPlayerNameToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&result_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SSetPlayerNameToGameAck)
}

void S2SSetPlayerNameToGameAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
}

S2SSetPlayerNameToGameAck::~S2SSetPlayerNameToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SSetPlayerNameToGameAck)
  SharedDtor();
}

void S2SSetPlayerNameToGameAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SSetPlayerNameToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SSetPlayerNameToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SSetPlayerNameToGameAck& S2SSetPlayerNameToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SSetPlayerNameToGameAck.base);
  return *internal_default_instance();
}


void S2SSetPlayerNameToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SSetPlayerNameToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&result_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(result_));
  _internal_metadata_.Clear();
}

bool S2SSetPlayerNameToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SSetPlayerNameToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 result = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes name = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 itemuuid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &itemuuid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SSetPlayerNameToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SSetPlayerNameToGameAck)
  return false;
#undef DO_
}

void S2SSetPlayerNameToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SSetPlayerNameToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->result(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->name(), output);
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->itemuuid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SSetPlayerNameToGameAck)
}

::google::protobuf::uint8* S2SSetPlayerNameToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SSetPlayerNameToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 result = 1;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->result(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // bytes name = 3;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->name(), target);
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->itemuuid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SSetPlayerNameToGameAck)
  return target;
}

size_t S2SSetPlayerNameToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SSetPlayerNameToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 3;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 itemuuid = 4;
  if (this->itemuuid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->itemuuid());
  }

  // uint32 result = 1;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SSetPlayerNameToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SSetPlayerNameToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SSetPlayerNameToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SSetPlayerNameToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SSetPlayerNameToGameAck)
    MergeFrom(*source);
  }
}

void S2SSetPlayerNameToGameAck::MergeFrom(const S2SSetPlayerNameToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.itemuuid() != 0) {
    set_itemuuid(from.itemuuid());
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SSetPlayerNameToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SSetPlayerNameToGameAck::CopyFrom(const S2SSetPlayerNameToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SSetPlayerNameToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SSetPlayerNameToGameAck::IsInitialized() const {
  return true;
}

void S2SSetPlayerNameToGameAck::Swap(S2SSetPlayerNameToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SSetPlayerNameToGameAck::InternalSwap(S2SSetPlayerNameToGameAck* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  swap(itemuuid_, other->itemuuid_);
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SSetPlayerNameToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerEnterToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerEnterToWorldReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerEnterToWorldReq::S2SPlayerEnterToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SPlayerEnterToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerEnterToWorldReq)
}
S2SPlayerEnterToWorldReq::S2SPlayerEnterToWorldReq(const S2SPlayerEnterToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerEnterToWorldReq)
}

void S2SPlayerEnterToWorldReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SPlayerEnterToWorldReq::~S2SPlayerEnterToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerEnterToWorldReq)
  SharedDtor();
}

void S2SPlayerEnterToWorldReq::SharedDtor() {
}

void S2SPlayerEnterToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerEnterToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerEnterToWorldReq& S2SPlayerEnterToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SPlayerEnterToWorldReq.base);
  return *internal_default_instance();
}


void S2SPlayerEnterToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerEnterToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SPlayerEnterToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerEnterToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerEnterToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerEnterToWorldReq)
  return false;
#undef DO_
}

void S2SPlayerEnterToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerEnterToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerEnterToWorldReq)
}

::google::protobuf::uint8* S2SPlayerEnterToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerEnterToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerEnterToWorldReq)
  return target;
}

size_t S2SPlayerEnterToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerEnterToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerEnterToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerEnterToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerEnterToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerEnterToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerEnterToWorldReq)
    MergeFrom(*source);
  }
}

void S2SPlayerEnterToWorldReq::MergeFrom(const S2SPlayerEnterToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SPlayerEnterToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerEnterToWorldReq::CopyFrom(const S2SPlayerEnterToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerEnterToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerEnterToWorldReq::IsInitialized() const {
  return true;
}

void S2SPlayerEnterToWorldReq::Swap(S2SPlayerEnterToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerEnterToWorldReq::InternalSwap(S2SPlayerEnterToWorldReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerEnterToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SPlayerLeaveToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SPlayerLeaveToWorldReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SPlayerLeaveToWorldReq::S2SPlayerLeaveToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SPlayerLeaveToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SPlayerLeaveToWorldReq)
}
S2SPlayerLeaveToWorldReq::S2SPlayerLeaveToWorldReq(const S2SPlayerLeaveToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SPlayerLeaveToWorldReq)
}

void S2SPlayerLeaveToWorldReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SPlayerLeaveToWorldReq::~S2SPlayerLeaveToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SPlayerLeaveToWorldReq)
  SharedDtor();
}

void S2SPlayerLeaveToWorldReq::SharedDtor() {
}

void S2SPlayerLeaveToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SPlayerLeaveToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SPlayerLeaveToWorldReq& S2SPlayerLeaveToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SPlayerLeaveToWorldReq.base);
  return *internal_default_instance();
}


void S2SPlayerLeaveToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SPlayerLeaveToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SPlayerLeaveToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SPlayerLeaveToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SPlayerLeaveToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SPlayerLeaveToWorldReq)
  return false;
#undef DO_
}

void S2SPlayerLeaveToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SPlayerLeaveToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SPlayerLeaveToWorldReq)
}

::google::protobuf::uint8* S2SPlayerLeaveToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SPlayerLeaveToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SPlayerLeaveToWorldReq)
  return target;
}

size_t S2SPlayerLeaveToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SPlayerLeaveToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SPlayerLeaveToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SPlayerLeaveToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SPlayerLeaveToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SPlayerLeaveToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SPlayerLeaveToWorldReq)
    MergeFrom(*source);
  }
}

void S2SPlayerLeaveToWorldReq::MergeFrom(const S2SPlayerLeaveToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SPlayerLeaveToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SPlayerLeaveToWorldReq::CopyFrom(const S2SPlayerLeaveToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SPlayerLeaveToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SPlayerLeaveToWorldReq::IsInitialized() const {
  return true;
}

void S2SPlayerLeaveToWorldReq::Swap(S2SPlayerLeaveToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SPlayerLeaveToWorldReq::InternalSwap(S2SPlayerLeaveToWorldReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SPlayerLeaveToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickPlayerToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickPlayerToWorldReq::kTypeFieldNumber;
const int S2SKickPlayerToWorldReq::kPlayeridFieldNumber;
const int S2SKickPlayerToWorldReq::kGameidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickPlayerToWorldReq::S2SKickPlayerToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickPlayerToWorldReq)
}
S2SKickPlayerToWorldReq::S2SKickPlayerToWorldReq(const S2SKickPlayerToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickPlayerToWorldReq)
}

void S2SKickPlayerToWorldReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

S2SKickPlayerToWorldReq::~S2SKickPlayerToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickPlayerToWorldReq)
  SharedDtor();
}

void S2SKickPlayerToWorldReq::SharedDtor() {
}

void S2SKickPlayerToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickPlayerToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickPlayerToWorldReq& S2SKickPlayerToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToWorldReq.base);
  return *internal_default_instance();
}


void S2SKickPlayerToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickPlayerToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SKickPlayerToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickPlayerToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 gameid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &gameid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickPlayerToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickPlayerToWorldReq)
  return false;
#undef DO_
}

void S2SKickPlayerToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickPlayerToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // uint64 gameid = 3;
  if (this->gameid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->gameid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickPlayerToWorldReq)
}

::google::protobuf::uint8* S2SKickPlayerToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickPlayerToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // uint64 gameid = 3;
  if (this->gameid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->gameid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickPlayerToWorldReq)
  return target;
}

size_t S2SKickPlayerToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickPlayerToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 gameid = 3;
  if (this->gameid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->gameid());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickPlayerToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickPlayerToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickPlayerToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickPlayerToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickPlayerToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickPlayerToWorldReq)
    MergeFrom(*source);
  }
}

void S2SKickPlayerToWorldReq::MergeFrom(const S2SKickPlayerToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickPlayerToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.gameid() != 0) {
    set_gameid(from.gameid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SKickPlayerToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickPlayerToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickPlayerToWorldReq::CopyFrom(const S2SKickPlayerToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickPlayerToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickPlayerToWorldReq::IsInitialized() const {
  return true;
}

void S2SKickPlayerToWorldReq::Swap(S2SKickPlayerToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickPlayerToWorldReq::InternalSwap(S2SKickPlayerToWorldReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(gameid_, other->gameid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickPlayerToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickPlayerToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickPlayerToGameReq::kTypeFieldNumber;
const int S2SKickPlayerToGameReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickPlayerToGameReq::S2SKickPlayerToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickPlayerToGameReq)
}
S2SKickPlayerToGameReq::S2SKickPlayerToGameReq(const S2SKickPlayerToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickPlayerToGameReq)
}

void S2SKickPlayerToGameReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

S2SKickPlayerToGameReq::~S2SKickPlayerToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickPlayerToGameReq)
  SharedDtor();
}

void S2SKickPlayerToGameReq::SharedDtor() {
}

void S2SKickPlayerToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickPlayerToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickPlayerToGameReq& S2SKickPlayerToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToGameReq.base);
  return *internal_default_instance();
}


void S2SKickPlayerToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickPlayerToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SKickPlayerToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickPlayerToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickPlayerToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickPlayerToGameReq)
  return false;
#undef DO_
}

void S2SKickPlayerToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickPlayerToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickPlayerToGameReq)
}

::google::protobuf::uint8* S2SKickPlayerToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickPlayerToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickPlayerToGameReq)
  return target;
}

size_t S2SKickPlayerToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickPlayerToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickPlayerToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickPlayerToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickPlayerToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickPlayerToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickPlayerToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickPlayerToGameReq)
    MergeFrom(*source);
  }
}

void S2SKickPlayerToGameReq::MergeFrom(const S2SKickPlayerToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickPlayerToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SKickPlayerToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickPlayerToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickPlayerToGameReq::CopyFrom(const S2SKickPlayerToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickPlayerToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickPlayerToGameReq::IsInitialized() const {
  return true;
}

void S2SKickPlayerToGameReq::Swap(S2SKickPlayerToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickPlayerToGameReq::InternalSwap(S2SKickPlayerToGameReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickPlayerToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickPlayerToGateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickPlayerToGateReq::kTypeFieldNumber;
const int S2SKickPlayerToGateReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickPlayerToGateReq::S2SKickPlayerToGateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToGateReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickPlayerToGateReq)
}
S2SKickPlayerToGateReq::S2SKickPlayerToGateReq(const S2SKickPlayerToGateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&type_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickPlayerToGateReq)
}

void S2SKickPlayerToGateReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
}

S2SKickPlayerToGateReq::~S2SKickPlayerToGateReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickPlayerToGateReq)
  SharedDtor();
}

void S2SKickPlayerToGateReq::SharedDtor() {
}

void S2SKickPlayerToGateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickPlayerToGateReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickPlayerToGateReq& S2SKickPlayerToGateReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToGateReq.base);
  return *internal_default_instance();
}


void S2SKickPlayerToGateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickPlayerToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&type_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(type_));
  _internal_metadata_.Clear();
}

bool S2SKickPlayerToGateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickPlayerToGateReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickPlayerToGateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickPlayerToGateReq)
  return false;
#undef DO_
}

void S2SKickPlayerToGateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickPlayerToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickPlayerToGateReq)
}

::google::protobuf::uint8* S2SKickPlayerToGateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickPlayerToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickPlayerToGateReq)
  return target;
}

size_t S2SKickPlayerToGateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickPlayerToGateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickPlayerToGateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickPlayerToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickPlayerToGateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickPlayerToGateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickPlayerToGateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickPlayerToGateReq)
    MergeFrom(*source);
  }
}

void S2SKickPlayerToGateReq::MergeFrom(const S2SKickPlayerToGateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickPlayerToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
}

void S2SKickPlayerToGateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickPlayerToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickPlayerToGateReq::CopyFrom(const S2SKickPlayerToGateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickPlayerToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickPlayerToGateReq::IsInitialized() const {
  return true;
}

void S2SKickPlayerToGateReq::Swap(S2SKickPlayerToGateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickPlayerToGateReq::InternalSwap(S2SKickPlayerToGateReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(type_, other->type_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickPlayerToGateReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SKickPlayerToWorldAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SKickPlayerToWorldAck::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SKickPlayerToWorldAck::S2SKickPlayerToWorldAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToWorldAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SKickPlayerToWorldAck)
}
S2SKickPlayerToWorldAck::S2SKickPlayerToWorldAck(const S2SKickPlayerToWorldAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SKickPlayerToWorldAck)
}

void S2SKickPlayerToWorldAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SKickPlayerToWorldAck::~S2SKickPlayerToWorldAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SKickPlayerToWorldAck)
  SharedDtor();
}

void S2SKickPlayerToWorldAck::SharedDtor() {
}

void S2SKickPlayerToWorldAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SKickPlayerToWorldAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SKickPlayerToWorldAck& S2SKickPlayerToWorldAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SKickPlayerToWorldAck.base);
  return *internal_default_instance();
}


void S2SKickPlayerToWorldAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SKickPlayerToWorldAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SKickPlayerToWorldAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SKickPlayerToWorldAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SKickPlayerToWorldAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SKickPlayerToWorldAck)
  return false;
#undef DO_
}

void S2SKickPlayerToWorldAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SKickPlayerToWorldAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SKickPlayerToWorldAck)
}

::google::protobuf::uint8* S2SKickPlayerToWorldAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SKickPlayerToWorldAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SKickPlayerToWorldAck)
  return target;
}

size_t S2SKickPlayerToWorldAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SKickPlayerToWorldAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SKickPlayerToWorldAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SKickPlayerToWorldAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SKickPlayerToWorldAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SKickPlayerToWorldAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SKickPlayerToWorldAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SKickPlayerToWorldAck)
    MergeFrom(*source);
  }
}

void S2SKickPlayerToWorldAck::MergeFrom(const S2SKickPlayerToWorldAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SKickPlayerToWorldAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SKickPlayerToWorldAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SKickPlayerToWorldAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SKickPlayerToWorldAck::CopyFrom(const S2SKickPlayerToWorldAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SKickPlayerToWorldAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SKickPlayerToWorldAck::IsInitialized() const {
  return true;
}

void S2SKickPlayerToWorldAck::Swap(S2SKickPlayerToWorldAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SKickPlayerToWorldAck::InternalSwap(S2SKickPlayerToWorldAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SKickPlayerToWorldAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGameReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGameReq::kMsgidFieldNumber;
const int S2SBroadcastToGameReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGameReq::S2SBroadcastToGameReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGameReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGameReq)
}
S2SBroadcastToGameReq::S2SBroadcastToGameReq(const S2SBroadcastToGameReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGameReq)
}

void S2SBroadcastToGameReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToGameReq::~S2SBroadcastToGameReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGameReq)
  SharedDtor();
}

void S2SBroadcastToGameReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGameReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGameReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGameReq& S2SBroadcastToGameReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGameReq.base);
  return *internal_default_instance();
}


void S2SBroadcastToGameReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGameReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGameReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGameReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGameReq)
  return false;
#undef DO_
}

void S2SBroadcastToGameReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGameReq)
}

::google::protobuf::uint8* S2SBroadcastToGameReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGameReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGameReq)
  return target;
}

size_t S2SBroadcastToGameReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGameReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGameReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGameReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGameReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGameReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGameReq)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGameReq::MergeFrom(const S2SBroadcastToGameReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGameReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToGameReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGameReq::CopyFrom(const S2SBroadcastToGameReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGameReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGameReq::IsInitialized() const {
  return true;
}

void S2SBroadcastToGameReq::Swap(S2SBroadcastToGameReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGameReq::InternalSwap(S2SBroadcastToGameReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGameReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGameAck::kMsgidFieldNumber;
const int S2SBroadcastToGameAck::kMsgdataFieldNumber;
const int S2SBroadcastToGameAck::kSerialFieldNumber;
const int S2SBroadcastToGameAck::kWorldidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGameAck::S2SBroadcastToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGameAck)
}
S2SBroadcastToGameAck::S2SBroadcastToGameAck(const S2SBroadcastToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&worldid_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGameAck)
}

void S2SBroadcastToGameAck::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
}

S2SBroadcastToGameAck::~S2SBroadcastToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGameAck)
  SharedDtor();
}

void S2SBroadcastToGameAck::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGameAck& S2SBroadcastToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGameAck.base);
  return *internal_default_instance();
}


void S2SBroadcastToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 worldid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGameAck)
  return false;
#undef DO_
}

void S2SBroadcastToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->worldid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGameAck)
}

::google::protobuf::uint8* S2SBroadcastToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->worldid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGameAck)
  return target;
}

size_t S2SBroadcastToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->worldid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGameAck)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGameAck::MergeFrom(const S2SBroadcastToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  if (from.worldid() != 0) {
    set_worldid(from.worldid());
  }
}

void S2SBroadcastToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGameAck::CopyFrom(const S2SBroadcastToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGameAck::IsInitialized() const {
  return true;
}

void S2SBroadcastToGameAck::Swap(S2SBroadcastToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGameAck::InternalSwap(S2SBroadcastToGameAck* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  swap(serial_, other->serial_);
  swap(worldid_, other->worldid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToGateReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToGateReq::kMsgidFieldNumber;
const int S2SBroadcastToGateReq::kMsgdataFieldNumber;
const int S2SBroadcastToGateReq::kSerialFieldNumber;
const int S2SBroadcastToGateReq::kWorldidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToGateReq::S2SBroadcastToGateReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGateReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToGateReq)
}
S2SBroadcastToGateReq::S2SBroadcastToGateReq(const S2SBroadcastToGateReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&worldid_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToGateReq)
}

void S2SBroadcastToGateReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
}

S2SBroadcastToGateReq::~S2SBroadcastToGateReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToGateReq)
  SharedDtor();
}

void S2SBroadcastToGateReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToGateReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToGateReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToGateReq& S2SBroadcastToGateReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToGateReq.base);
  return *internal_default_instance();
}


void S2SBroadcastToGateReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  _internal_metadata_.Clear();
}

bool S2SBroadcastToGateReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToGateReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 worldid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToGateReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToGateReq)
  return false;
#undef DO_
}

void S2SBroadcastToGateReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->worldid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToGateReq)
}

::google::protobuf::uint8* S2SBroadcastToGateReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToGateReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->worldid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToGateReq)
  return target;
}

size_t S2SBroadcastToGateReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToGateReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->worldid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToGateReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToGateReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToGateReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToGateReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToGateReq)
    MergeFrom(*source);
  }
}

void S2SBroadcastToGateReq::MergeFrom(const S2SBroadcastToGateReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToGateReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  if (from.worldid() != 0) {
    set_worldid(from.worldid());
  }
}

void S2SBroadcastToGateReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToGateReq::CopyFrom(const S2SBroadcastToGateReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToGateReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToGateReq::IsInitialized() const {
  return true;
}

void S2SBroadcastToGateReq::Swap(S2SBroadcastToGateReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToGateReq::InternalSwap(S2SBroadcastToGateReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  swap(serial_, other->serial_);
  swap(worldid_, other->worldid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToGateReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToWorldReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToWorldReq::kMsgidFieldNumber;
const int S2SBroadcastToWorldReq::kMsgdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToWorldReq::S2SBroadcastToWorldReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToWorldReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToWorldReq)
}
S2SBroadcastToWorldReq::S2SBroadcastToWorldReq(const S2SBroadcastToWorldReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  msgid_ = from.msgid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToWorldReq)
}

void S2SBroadcastToWorldReq::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
}

S2SBroadcastToWorldReq::~S2SBroadcastToWorldReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToWorldReq)
  SharedDtor();
}

void S2SBroadcastToWorldReq::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToWorldReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToWorldReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToWorldReq& S2SBroadcastToWorldReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToWorldReq.base);
  return *internal_default_instance();
}


void S2SBroadcastToWorldReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  msgid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SBroadcastToWorldReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToWorldReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToWorldReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToWorldReq)
  return false;
#undef DO_
}

void S2SBroadcastToWorldReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToWorldReq)
}

::google::protobuf::uint8* S2SBroadcastToWorldReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToWorldReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToWorldReq)
  return target;
}

size_t S2SBroadcastToWorldReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToWorldReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToWorldReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToWorldReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToWorldReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToWorldReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToWorldReq)
    MergeFrom(*source);
  }
}

void S2SBroadcastToWorldReq::MergeFrom(const S2SBroadcastToWorldReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToWorldReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
}

void S2SBroadcastToWorldReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToWorldReq::CopyFrom(const S2SBroadcastToWorldReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToWorldReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToWorldReq::IsInitialized() const {
  return true;
}

void S2SBroadcastToWorldReq::Swap(S2SBroadcastToWorldReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToWorldReq::InternalSwap(S2SBroadcastToWorldReq* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToWorldReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SBroadcastToWorldAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SBroadcastToWorldAck::kMsgidFieldNumber;
const int S2SBroadcastToWorldAck::kMsgdataFieldNumber;
const int S2SBroadcastToWorldAck::kSerialFieldNumber;
const int S2SBroadcastToWorldAck::kWorldidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SBroadcastToWorldAck::S2SBroadcastToWorldAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToWorldAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SBroadcastToWorldAck)
}
S2SBroadcastToWorldAck::S2SBroadcastToWorldAck(const S2SBroadcastToWorldAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.msgdata().size() > 0) {
    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  ::memcpy(&msgid_, &from.msgid_,
    static_cast<size_t>(reinterpret_cast<char*>(&worldid_) -
    reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SBroadcastToWorldAck)
}

void S2SBroadcastToWorldAck::SharedCtor() {
  msgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
}

S2SBroadcastToWorldAck::~S2SBroadcastToWorldAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SBroadcastToWorldAck)
  SharedDtor();
}

void S2SBroadcastToWorldAck::SharedDtor() {
  msgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SBroadcastToWorldAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SBroadcastToWorldAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SBroadcastToWorldAck& S2SBroadcastToWorldAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SBroadcastToWorldAck.base);
  return *internal_default_instance();
}


void S2SBroadcastToWorldAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SBroadcastToWorldAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&msgid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&worldid_) -
      reinterpret_cast<char*>(&msgid_)) + sizeof(worldid_));
  _internal_metadata_.Clear();
}

bool S2SBroadcastToWorldAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SBroadcastToWorldAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 msgid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msgid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes msgdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_msgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 serial = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &serial_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 worldid = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &worldid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SBroadcastToWorldAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SBroadcastToWorldAck)
  return false;
#undef DO_
}

void S2SBroadcastToWorldAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SBroadcastToWorldAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msgid(), output);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->msgdata(), output);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->serial(), output);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->worldid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SBroadcastToWorldAck)
}

::google::protobuf::uint8* S2SBroadcastToWorldAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SBroadcastToWorldAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msgid(), target);
  }

  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->msgdata(), target);
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->serial(), target);
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->worldid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SBroadcastToWorldAck)
  return target;
}

size_t S2SBroadcastToWorldAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SBroadcastToWorldAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes msgdata = 2;
  if (this->msgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->msgdata());
  }

  // uint32 msgid = 1;
  if (this->msgid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->msgid());
  }

  // uint32 serial = 3;
  if (this->serial() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->serial());
  }

  // uint64 worldid = 4;
  if (this->worldid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->worldid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SBroadcastToWorldAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SBroadcastToWorldAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SBroadcastToWorldAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SBroadcastToWorldAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SBroadcastToWorldAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SBroadcastToWorldAck)
    MergeFrom(*source);
  }
}

void S2SBroadcastToWorldAck::MergeFrom(const S2SBroadcastToWorldAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SBroadcastToWorldAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.msgdata().size() > 0) {

    msgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.msgdata_);
  }
  if (from.msgid() != 0) {
    set_msgid(from.msgid());
  }
  if (from.serial() != 0) {
    set_serial(from.serial());
  }
  if (from.worldid() != 0) {
    set_worldid(from.worldid());
  }
}

void S2SBroadcastToWorldAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SBroadcastToWorldAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SBroadcastToWorldAck::CopyFrom(const S2SBroadcastToWorldAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SBroadcastToWorldAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SBroadcastToWorldAck::IsInitialized() const {
  return true;
}

void S2SBroadcastToWorldAck::Swap(S2SBroadcastToWorldAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SBroadcastToWorldAck::InternalSwap(S2SBroadcastToWorldAck* other) {
  using std::swap;
  msgdata_.Swap(&other->msgdata_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(msgid_, other->msgid_);
  swap(serial_, other->serial_);
  swap(worldid_, other->worldid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SBroadcastToWorldAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBMail_DataEntry_DoNotUse::PBMail_DataEntry_DoNotUse() {}
PBMail_DataEntry_DoNotUse::PBMail_DataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBMail_DataEntry_DoNotUse::MergeFrom(const PBMail_DataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBMail_DataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[34];
}
void PBMail_DataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBMail::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBMail::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBMail::PBMail()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_PBMail.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBMail)
}
PBMail::PBMail(const PBMail& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  data_.MergeFrom(from.data_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBMail)
}

void PBMail::SharedCtor() {
}

PBMail::~PBMail() {
  // @@protoc_insertion_point(destructor:KFMsg.PBMail)
  SharedDtor();
}

void PBMail::SharedDtor() {
}

void PBMail::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBMail::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBMail& PBMail::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_PBMail.base);
  return *internal_default_instance();
}


void PBMail::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  data_.Clear();
  _internal_metadata_.Clear();
}

bool PBMail::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBMail)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          PBMail_DataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBMail_DataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&data_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBMail.DataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBMail)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBMail)
  return false;
#undef DO_
}

void PBMail::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBMail.DataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBMail)
}

::google::protobuf::uint8* PBMail::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBMail)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> data = 1;
  if (!this->data().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBMail.DataEntry.key");
      }
    };

    if (deterministic &&
        this->data().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->data().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(data_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->data().begin();
          it != this->data().end(); ++it) {
        entry.reset(data_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBMail)
  return target;
}

size_t PBMail::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBMail)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> data = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->data_size());
  {
    ::std::unique_ptr<PBMail_DataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->data().begin();
        it != this->data().end(); ++it) {
      entry.reset(data_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBMail::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBMail)
  GOOGLE_DCHECK_NE(&from, this);
  const PBMail* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBMail>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBMail)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBMail)
    MergeFrom(*source);
  }
}

void PBMail::MergeFrom(const PBMail& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBMail)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void PBMail::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBMail::CopyFrom(const PBMail& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBMail)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBMail::IsInitialized() const {
  return true;
}

void PBMail::Swap(PBMail* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBMail::InternalSwap(PBMail* other) {
  using std::swap;
  data_.Swap(&other->data_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBMail::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryMailReq::kPlayeridFieldNumber;
const int S2SQueryMailReq::kZoneidFieldNumber;
const int S2SQueryMailReq::kMaxidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryMailReq::S2SQueryMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryMailReq)
}
S2SQueryMailReq::S2SQueryMailReq(const S2SQueryMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryMailReq)
}

void S2SQueryMailReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SQueryMailReq::~S2SQueryMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryMailReq)
  SharedDtor();
}

void S2SQueryMailReq::SharedDtor() {
}

void S2SQueryMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryMailReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryMailReq& S2SQueryMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryMailReq.base);
  return *internal_default_instance();
}


void S2SQueryMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SQueryMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 maxid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &maxid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryMailReq)
  return false;
#undef DO_
}

void S2SQueryMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  // uint64 maxid = 3;
  if (this->maxid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->maxid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryMailReq)
}

::google::protobuf::uint8* S2SQueryMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  // uint64 maxid = 3;
  if (this->maxid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->maxid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryMailReq)
  return target;
}

size_t S2SQueryMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 maxid = 3;
  if (this->maxid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->maxid());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryMailReq)
    MergeFrom(*source);
  }
}

void S2SQueryMailReq::MergeFrom(const S2SQueryMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.maxid() != 0) {
    set_maxid(from.maxid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SQueryMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryMailReq::CopyFrom(const S2SQueryMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryMailReq::IsInitialized() const {
  return true;
}

void S2SQueryMailReq::Swap(S2SQueryMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryMailReq::InternalSwap(S2SQueryMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(maxid_, other->maxid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryMailReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryMailAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryMailAck::kPlayeridFieldNumber;
const int S2SQueryMailAck::kMailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryMailAck::S2SQueryMailAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryMailAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryMailAck)
}
S2SQueryMailAck::S2SQueryMailAck(const S2SQueryMailAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      mail_(from.mail_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryMailAck)
}

void S2SQueryMailAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryMailAck::~S2SQueryMailAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryMailAck)
  SharedDtor();
}

void S2SQueryMailAck::SharedDtor() {
}

void S2SQueryMailAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryMailAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryMailAck& S2SQueryMailAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryMailAck.base);
  return *internal_default_instance();
}


void S2SQueryMailAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  mail_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryMailAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryMailAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBMail mail = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_mail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryMailAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryMailAck)
  return false;
#undef DO_
}

void S2SQueryMailAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // repeated .KFMsg.PBMail mail = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mail_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->mail(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryMailAck)
}

::google::protobuf::uint8* S2SQueryMailAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryMailAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // repeated .KFMsg.PBMail mail = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->mail_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->mail(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryMailAck)
  return target;
}

size_t S2SQueryMailAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryMailAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBMail mail = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->mail_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->mail(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryMailAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryMailAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryMailAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryMailAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryMailAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryMailAck)
    MergeFrom(*source);
  }
}

void S2SQueryMailAck::MergeFrom(const S2SQueryMailAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryMailAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  mail_.MergeFrom(from.mail_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryMailAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryMailAck::CopyFrom(const S2SQueryMailAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryMailAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryMailAck::IsInitialized() const {
  return true;
}

void S2SQueryMailAck::Swap(S2SQueryMailAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryMailAck::InternalSwap(S2SQueryMailAck* other) {
  using std::swap;
  CastToBase(&mail_)->InternalSwap(CastToBase(&other->mail_));
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryMailAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddMailReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddMailReq_default_instance_._instance.get_mutable()->pbmail_ = const_cast< ::KFMsg::PBMail*>(
      ::KFMsg::PBMail::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddMailReq::kFlagFieldNumber;
const int S2SAddMailReq::kObjectidFieldNumber;
const int S2SAddMailReq::kPbmailFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddMailReq::S2SAddMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddMailReq)
}
S2SAddMailReq::S2SAddMailReq(const S2SAddMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbmail()) {
    pbmail_ = new ::KFMsg::PBMail(*from.pbmail_);
  } else {
    pbmail_ = NULL;
  }
  ::memcpy(&objectid_, &from.objectid_,
    static_cast<size_t>(reinterpret_cast<char*>(&flag_) -
    reinterpret_cast<char*>(&objectid_)) + sizeof(flag_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddMailReq)
}

void S2SAddMailReq::SharedCtor() {
  ::memset(&pbmail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&pbmail_)) + sizeof(flag_));
}

S2SAddMailReq::~S2SAddMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddMailReq)
  SharedDtor();
}

void S2SAddMailReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbmail_;
}

void S2SAddMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddMailReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddMailReq& S2SAddMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddMailReq.base);
  return *internal_default_instance();
}


void S2SAddMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbmail_ != NULL) {
    delete pbmail_;
  }
  pbmail_ = NULL;
  ::memset(&objectid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&flag_) -
      reinterpret_cast<char*>(&objectid_)) + sizeof(flag_));
  _internal_metadata_.Clear();
}

bool S2SAddMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 flag = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 objectid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &objectid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBMail pbmail = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbmail()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddMailReq)
  return false;
#undef DO_
}

void S2SAddMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flag = 1;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->flag(), output);
  }

  // uint64 objectid = 2;
  if (this->objectid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->objectid(), output);
  }

  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_pbmail(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddMailReq)
}

::google::protobuf::uint8* S2SAddMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 flag = 1;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->flag(), target);
  }

  // uint64 objectid = 2;
  if (this->objectid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->objectid(), target);
  }

  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_pbmail(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddMailReq)
  return target;
}

size_t S2SAddMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBMail pbmail = 3;
  if (this->has_pbmail()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbmail_);
  }

  // uint64 objectid = 2;
  if (this->objectid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->objectid());
  }

  // uint32 flag = 1;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddMailReq)
    MergeFrom(*source);
  }
}

void S2SAddMailReq::MergeFrom(const S2SAddMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbmail()) {
    mutable_pbmail()->::KFMsg::PBMail::MergeFrom(from.pbmail());
  }
  if (from.objectid() != 0) {
    set_objectid(from.objectid());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
}

void S2SAddMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddMailReq::CopyFrom(const S2SAddMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddMailReq::IsInitialized() const {
  return true;
}

void S2SAddMailReq::Swap(S2SAddMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddMailReq::InternalSwap(S2SAddMailReq* other) {
  using std::swap;
  swap(pbmail_, other->pbmail_);
  swap(objectid_, other->objectid_);
  swap(flag_, other->flag_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddMailReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNoticeNewMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNoticeNewMailReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNoticeNewMailReq::S2SNoticeNewMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SNoticeNewMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SNoticeNewMailReq)
}
S2SNoticeNewMailReq::S2SNoticeNewMailReq(const S2SNoticeNewMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SNoticeNewMailReq)
}

void S2SNoticeNewMailReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SNoticeNewMailReq::~S2SNoticeNewMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SNoticeNewMailReq)
  SharedDtor();
}

void S2SNoticeNewMailReq::SharedDtor() {
}

void S2SNoticeNewMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNoticeNewMailReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNoticeNewMailReq& S2SNoticeNewMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SNoticeNewMailReq.base);
  return *internal_default_instance();
}


void S2SNoticeNewMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SNoticeNewMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SNoticeNewMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SNoticeNewMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SNoticeNewMailReq)
  return false;
#undef DO_
}

void S2SNoticeNewMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SNoticeNewMailReq)
}

::google::protobuf::uint8* S2SNoticeNewMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SNoticeNewMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SNoticeNewMailReq)
  return target;
}

size_t S2SNoticeNewMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SNoticeNewMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNoticeNewMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SNoticeNewMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNoticeNewMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNoticeNewMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SNoticeNewMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SNoticeNewMailReq)
    MergeFrom(*source);
  }
}

void S2SNoticeNewMailReq::MergeFrom(const S2SNoticeNewMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SNoticeNewMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SNoticeNewMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SNoticeNewMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNoticeNewMailReq::CopyFrom(const S2SNoticeNewMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SNoticeNewMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNoticeNewMailReq::IsInitialized() const {
  return true;
}

void S2SNoticeNewMailReq::Swap(S2SNoticeNewMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNoticeNewMailReq::InternalSwap(S2SNoticeNewMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNoticeNewMailReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SNewPlayerMailReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SNewPlayerMailReq::kPlayeridFieldNumber;
const int S2SNewPlayerMailReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SNewPlayerMailReq::S2SNewPlayerMailReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SNewPlayerMailReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SNewPlayerMailReq)
}
S2SNewPlayerMailReq::S2SNewPlayerMailReq(const S2SNewPlayerMailReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SNewPlayerMailReq)
}

void S2SNewPlayerMailReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
}

S2SNewPlayerMailReq::~S2SNewPlayerMailReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SNewPlayerMailReq)
  SharedDtor();
}

void S2SNewPlayerMailReq::SharedDtor() {
}

void S2SNewPlayerMailReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SNewPlayerMailReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SNewPlayerMailReq& S2SNewPlayerMailReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SNewPlayerMailReq.base);
  return *internal_default_instance();
}


void S2SNewPlayerMailReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SNewPlayerMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SNewPlayerMailReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SNewPlayerMailReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SNewPlayerMailReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SNewPlayerMailReq)
  return false;
#undef DO_
}

void S2SNewPlayerMailReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SNewPlayerMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SNewPlayerMailReq)
}

::google::protobuf::uint8* S2SNewPlayerMailReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SNewPlayerMailReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SNewPlayerMailReq)
  return target;
}

size_t S2SNewPlayerMailReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SNewPlayerMailReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SNewPlayerMailReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SNewPlayerMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SNewPlayerMailReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SNewPlayerMailReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SNewPlayerMailReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SNewPlayerMailReq)
    MergeFrom(*source);
  }
}

void S2SNewPlayerMailReq::MergeFrom(const S2SNewPlayerMailReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SNewPlayerMailReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SNewPlayerMailReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SNewPlayerMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SNewPlayerMailReq::CopyFrom(const S2SNewPlayerMailReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SNewPlayerMailReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SNewPlayerMailReq::IsInitialized() const {
  return true;
}

void S2SNewPlayerMailReq::Swap(S2SNewPlayerMailReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SNewPlayerMailReq::InternalSwap(S2SNewPlayerMailReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SNewPlayerMailReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateMailStatusReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateMailStatusReq::kPlayeridFieldNumber;
const int S2SUpdateMailStatusReq::kIdFieldNumber;
const int S2SUpdateMailStatusReq::kFlagFieldNumber;
const int S2SUpdateMailStatusReq::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateMailStatusReq::S2SUpdateMailStatusReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateMailStatusReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateMailStatusReq)
}
S2SUpdateMailStatusReq::S2SUpdateMailStatusReq(const S2SUpdateMailStatusReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateMailStatusReq)
}

void S2SUpdateMailStatusReq::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
}

S2SUpdateMailStatusReq::~S2SUpdateMailStatusReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateMailStatusReq)
  SharedDtor();
}

void S2SUpdateMailStatusReq::SharedDtor() {
}

void S2SUpdateMailStatusReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateMailStatusReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateMailStatusReq& S2SUpdateMailStatusReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateMailStatusReq.base);
  return *internal_default_instance();
}


void S2SUpdateMailStatusReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateMailStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool S2SUpdateMailStatusReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateMailStatusReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 flag = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &flag_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateMailStatusReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateMailStatusReq)
  return false;
#undef DO_
}

void S2SUpdateMailStatusReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateMailStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->flag(), output);
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateMailStatusReq)
}

::google::protobuf::uint8* S2SUpdateMailStatusReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateMailStatusReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->flag(), target);
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateMailStatusReq)
  return target;
}

size_t S2SUpdateMailStatusReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateMailStatusReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 flag = 3;
  if (this->flag() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->flag());
  }

  // uint32 status = 4;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateMailStatusReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateMailStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateMailStatusReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateMailStatusReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateMailStatusReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateMailStatusReq)
    MergeFrom(*source);
  }
}

void S2SUpdateMailStatusReq::MergeFrom(const S2SUpdateMailStatusReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateMailStatusReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.flag() != 0) {
    set_flag(from.flag());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void S2SUpdateMailStatusReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateMailStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateMailStatusReq::CopyFrom(const S2SUpdateMailStatusReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateMailStatusReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateMailStatusReq::IsInitialized() const {
  return true;
}

void S2SUpdateMailStatusReq::Swap(S2SUpdateMailStatusReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateMailStatusReq::InternalSwap(S2SUpdateMailStatusReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(id_, other->id_);
  swap(flag_, other->flag_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateMailStatusReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateMailStatusAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateMailStatusAck::kPlayeridFieldNumber;
const int S2SUpdateMailStatusAck::kIdFieldNumber;
const int S2SUpdateMailStatusAck::kStatusFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateMailStatusAck::S2SUpdateMailStatusAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateMailStatusAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateMailStatusAck)
}
S2SUpdateMailStatusAck::S2SUpdateMailStatusAck(const S2SUpdateMailStatusAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&status_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateMailStatusAck)
}

void S2SUpdateMailStatusAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
}

S2SUpdateMailStatusAck::~S2SUpdateMailStatusAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateMailStatusAck)
  SharedDtor();
}

void S2SUpdateMailStatusAck::SharedDtor() {
}

void S2SUpdateMailStatusAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateMailStatusAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateMailStatusAck& S2SUpdateMailStatusAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateMailStatusAck.base);
  return *internal_default_instance();
}


void S2SUpdateMailStatusAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateMailStatusAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&status_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(status_));
  _internal_metadata_.Clear();
}

bool S2SUpdateMailStatusAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateMailStatusAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 id = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 status = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &status_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateMailStatusAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateMailStatusAck)
  return false;
#undef DO_
}

void S2SUpdateMailStatusAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateMailStatusAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->id(), output);
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateMailStatusAck)
}

::google::protobuf::uint8* S2SUpdateMailStatusAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateMailStatusAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->id(), target);
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateMailStatusAck)
  return target;
}

size_t S2SUpdateMailStatusAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateMailStatusAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 id = 2;
  if (this->id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->id());
  }

  // uint32 status = 3;
  if (this->status() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->status());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateMailStatusAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateMailStatusAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateMailStatusAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateMailStatusAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateMailStatusAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateMailStatusAck)
    MergeFrom(*source);
  }
}

void S2SUpdateMailStatusAck::MergeFrom(const S2SUpdateMailStatusAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateMailStatusAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.status() != 0) {
    set_status(from.status());
  }
}

void S2SUpdateMailStatusAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateMailStatusAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateMailStatusAck::CopyFrom(const S2SUpdateMailStatusAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateMailStatusAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateMailStatusAck::IsInitialized() const {
  return true;
}

void S2SUpdateMailStatusAck::Swap(S2SUpdateMailStatusAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateMailStatusAck::InternalSwap(S2SUpdateMailStatusAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(id_, other->id_);
  swap(status_, other->status_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateMailStatusAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateRankDataReq::InitAsDefaultInstance() {
  ::KFMsg::_S2SUpdateRankDataReq_default_instance_._instance.get_mutable()->pbrankdata_ = const_cast< ::KFMsg::PBRankData*>(
      ::KFMsg::PBRankData::internal_default_instance());
}
void S2SUpdateRankDataReq::clear_pbrankdata() {
  if (GetArenaNoVirtual() == NULL && pbrankdata_ != NULL) {
    delete pbrankdata_;
  }
  pbrankdata_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateRankDataReq::kPlayeridFieldNumber;
const int S2SUpdateRankDataReq::kRankidFieldNumber;
const int S2SUpdateRankDataReq::kZoneidFieldNumber;
const int S2SUpdateRankDataReq::kPbrankdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateRankDataReq::S2SUpdateRankDataReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateRankDataReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateRankDataReq)
}
S2SUpdateRankDataReq::S2SUpdateRankDataReq(const S2SUpdateRankDataReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbrankdata()) {
    pbrankdata_ = new ::KFMsg::PBRankData(*from.pbrankdata_);
  } else {
    pbrankdata_ = NULL;
  }
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateRankDataReq)
}

void S2SUpdateRankDataReq::SharedCtor() {
  ::memset(&pbrankdata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&pbrankdata_)) + sizeof(zoneid_));
}

S2SUpdateRankDataReq::~S2SUpdateRankDataReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateRankDataReq)
  SharedDtor();
}

void S2SUpdateRankDataReq::SharedDtor() {
  if (this != internal_default_instance()) delete pbrankdata_;
}

void S2SUpdateRankDataReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateRankDataReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateRankDataReq& S2SUpdateRankDataReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateRankDataReq.base);
  return *internal_default_instance();
}


void S2SUpdateRankDataReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbrankdata_ != NULL) {
    delete pbrankdata_;
  }
  pbrankdata_ = NULL;
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateRankDataReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateRankDataReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 rankid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRankData pbrankdata = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbrankdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateRankDataReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateRankDataReq)
  return false;
#undef DO_
}

void S2SUpdateRankDataReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->rankid(), output);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->zoneid(), output);
  }

  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->_internal_pbrankdata(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateRankDataReq)
}

::google::protobuf::uint8* S2SUpdateRankDataReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateRankDataReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->rankid(), target);
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->zoneid(), target);
  }

  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, this->_internal_pbrankdata(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateRankDataReq)
  return target;
}

size_t S2SUpdateRankDataReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateRankDataReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBRankData pbrankdata = 4;
  if (this->has_pbrankdata()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbrankdata_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint32 rankid = 2;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  // uint32 zoneid = 3;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateRankDataReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateRankDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateRankDataReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateRankDataReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateRankDataReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateRankDataReq)
    MergeFrom(*source);
  }
}

void S2SUpdateRankDataReq::MergeFrom(const S2SUpdateRankDataReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateRankDataReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbrankdata()) {
    mutable_pbrankdata()->::KFMsg::PBRankData::MergeFrom(from.pbrankdata());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SUpdateRankDataReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateRankDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateRankDataReq::CopyFrom(const S2SUpdateRankDataReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateRankDataReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateRankDataReq::IsInitialized() const {
  return true;
}

void S2SUpdateRankDataReq::Swap(S2SUpdateRankDataReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateRankDataReq::InternalSwap(S2SUpdateRankDataReq* other) {
  using std::swap;
  swap(pbrankdata_, other->pbrankdata_);
  swap(playerid_, other->playerid_);
  swap(rankid_, other->rankid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateRankDataReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryRankListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryRankListReq::kRankidFieldNumber;
const int S2SQueryRankListReq::kZoneidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryRankListReq::S2SQueryRankListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRankListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryRankListReq)
}
S2SQueryRankListReq::S2SQueryRankListReq(const S2SQueryRankListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&rankid_, &from.rankid_,
    static_cast<size_t>(reinterpret_cast<char*>(&zoneid_) -
    reinterpret_cast<char*>(&rankid_)) + sizeof(zoneid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryRankListReq)
}

void S2SQueryRankListReq::SharedCtor() {
  ::memset(&rankid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&rankid_)) + sizeof(zoneid_));
}

S2SQueryRankListReq::~S2SQueryRankListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryRankListReq)
  SharedDtor();
}

void S2SQueryRankListReq::SharedDtor() {
}

void S2SQueryRankListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryRankListReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryRankListReq& S2SQueryRankListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryRankListReq.base);
  return *internal_default_instance();
}


void S2SQueryRankListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&rankid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&zoneid_) -
      reinterpret_cast<char*>(&rankid_)) + sizeof(zoneid_));
  _internal_metadata_.Clear();
}

bool S2SQueryRankListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryRankListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 zoneid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &zoneid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryRankListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryRankListReq)
  return false;
#undef DO_
}

void S2SQueryRankListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankid(), output);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->zoneid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryRankListReq)
}

::google::protobuf::uint8* S2SQueryRankListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankid(), target);
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->zoneid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryRankListReq)
  return target;
}

size_t S2SQueryRankListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryRankListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  // uint32 zoneid = 2;
  if (this->zoneid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->zoneid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryRankListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryRankListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryRankListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryRankListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryRankListReq)
    MergeFrom(*source);
  }
}

void S2SQueryRankListReq::MergeFrom(const S2SQueryRankListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
  if (from.zoneid() != 0) {
    set_zoneid(from.zoneid());
  }
}

void S2SQueryRankListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryRankListReq::CopyFrom(const S2SQueryRankListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryRankListReq::IsInitialized() const {
  return true;
}

void S2SQueryRankListReq::Swap(S2SQueryRankListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryRankListReq::InternalSwap(S2SQueryRankListReq* other) {
  using std::swap;
  swap(rankid_, other->rankid_);
  swap(zoneid_, other->zoneid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryRankListReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendRankListReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendRankListReq::kRankidFieldNumber;
const int S2SQueryFriendRankListReq::kFriendidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendRankListReq::S2SQueryFriendRankListReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendRankListReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendRankListReq)
}
S2SQueryFriendRankListReq::S2SQueryFriendRankListReq(const S2SQueryFriendRankListReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      friendid_(from.friendid_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rankid_ = from.rankid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendRankListReq)
}

void S2SQueryFriendRankListReq::SharedCtor() {
  rankid_ = 0u;
}

S2SQueryFriendRankListReq::~S2SQueryFriendRankListReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendRankListReq)
  SharedDtor();
}

void S2SQueryFriendRankListReq::SharedDtor() {
}

void S2SQueryFriendRankListReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendRankListReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendRankListReq& S2SQueryFriendRankListReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendRankListReq.base);
  return *internal_default_instance();
}


void S2SQueryFriendRankListReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  friendid_.Clear();
  rankid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SQueryFriendRankListReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendRankListReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 friendid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_friendid())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 1, 18u, input, this->mutable_friendid())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendRankListReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendRankListReq)
  return false;
#undef DO_
}

void S2SQueryFriendRankListReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankid(), output);
  }

  // repeated uint64 friendid = 2;
  if (this->friendid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _friendid_cached_byte_size_));
  }
  for (int i = 0, n = this->friendid_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->friendid(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendRankListReq)
}

::google::protobuf::uint8* S2SQueryFriendRankListReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendRankListReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankid(), target);
  }

  // repeated uint64 friendid = 2;
  if (this->friendid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _friendid_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->friendid_, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendRankListReq)
  return target;
}

size_t S2SQueryFriendRankListReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendRankListReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated uint64 friendid = 2;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->friendid_);
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _friendid_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendRankListReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendRankListReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendRankListReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendRankListReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendRankListReq)
    MergeFrom(*source);
  }
}

void S2SQueryFriendRankListReq::MergeFrom(const S2SQueryFriendRankListReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendRankListReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  friendid_.MergeFrom(from.friendid_);
  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
}

void S2SQueryFriendRankListReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendRankListReq::CopyFrom(const S2SQueryFriendRankListReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendRankListReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendRankListReq::IsInitialized() const {
  return true;
}

void S2SQueryFriendRankListReq::Swap(S2SQueryFriendRankListReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendRankListReq::InternalSwap(S2SQueryFriendRankListReq* other) {
  using std::swap;
  friendid_.InternalSwap(&other->friendid_);
  swap(rankid_, other->rankid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendRankListReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRefreshRankReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRefreshRankReq::kRankidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRefreshRankReq::S2SRefreshRankReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SRefreshRankReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRefreshRankReq)
}
S2SRefreshRankReq::S2SRefreshRankReq(const S2SRefreshRankReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rankid_ = from.rankid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRefreshRankReq)
}

void S2SRefreshRankReq::SharedCtor() {
  rankid_ = 0u;
}

S2SRefreshRankReq::~S2SRefreshRankReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRefreshRankReq)
  SharedDtor();
}

void S2SRefreshRankReq::SharedDtor() {
}

void S2SRefreshRankReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRefreshRankReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRefreshRankReq& S2SRefreshRankReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SRefreshRankReq.base);
  return *internal_default_instance();
}


void S2SRefreshRankReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRefreshRankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SRefreshRankReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRefreshRankReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRefreshRankReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRefreshRankReq)
  return false;
#undef DO_
}

void S2SRefreshRankReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRefreshRankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRefreshRankReq)
}

::google::protobuf::uint8* S2SRefreshRankReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRefreshRankReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRefreshRankReq)
  return target;
}

size_t S2SRefreshRankReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRefreshRankReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRefreshRankReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRefreshRankReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRefreshRankReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRefreshRankReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRefreshRankReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRefreshRankReq)
    MergeFrom(*source);
  }
}

void S2SRefreshRankReq::MergeFrom(const S2SRefreshRankReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRefreshRankReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
}

void S2SRefreshRankReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRefreshRankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRefreshRankReq::CopyFrom(const S2SRefreshRankReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRefreshRankReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRefreshRankReq::IsInitialized() const {
  return true;
}

void S2SRefreshRankReq::Swap(S2SRefreshRankReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRefreshRankReq::InternalSwap(S2SRefreshRankReq* other) {
  using std::swap;
  swap(rankid_, other->rankid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRefreshRankReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SRefreshRankAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SRefreshRankAck::kRankidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SRefreshRankAck::S2SRefreshRankAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SRefreshRankAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SRefreshRankAck)
}
S2SRefreshRankAck::S2SRefreshRankAck(const S2SRefreshRankAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rankid_ = from.rankid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SRefreshRankAck)
}

void S2SRefreshRankAck::SharedCtor() {
  rankid_ = 0u;
}

S2SRefreshRankAck::~S2SRefreshRankAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SRefreshRankAck)
  SharedDtor();
}

void S2SRefreshRankAck::SharedDtor() {
}

void S2SRefreshRankAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SRefreshRankAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SRefreshRankAck& S2SRefreshRankAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SRefreshRankAck.base);
  return *internal_default_instance();
}


void S2SRefreshRankAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SRefreshRankAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SRefreshRankAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SRefreshRankAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SRefreshRankAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SRefreshRankAck)
  return false;
#undef DO_
}

void S2SRefreshRankAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SRefreshRankAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SRefreshRankAck)
}

::google::protobuf::uint8* S2SRefreshRankAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SRefreshRankAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SRefreshRankAck)
  return target;
}

size_t S2SRefreshRankAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SRefreshRankAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SRefreshRankAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SRefreshRankAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SRefreshRankAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SRefreshRankAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SRefreshRankAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SRefreshRankAck)
    MergeFrom(*source);
  }
}

void S2SRefreshRankAck::MergeFrom(const S2SRefreshRankAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SRefreshRankAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
}

void S2SRefreshRankAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SRefreshRankAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SRefreshRankAck::CopyFrom(const S2SRefreshRankAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SRefreshRankAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SRefreshRankAck::IsInitialized() const {
  return true;
}

void S2SRefreshRankAck::Swap(S2SRefreshRankAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SRefreshRankAck::InternalSwap(S2SRefreshRankAck* other) {
  using std::swap;
  swap(rankid_, other->rankid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SRefreshRankAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2STellRefreshRank::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2STellRefreshRank::kRankidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2STellRefreshRank::S2STellRefreshRank()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2STellRefreshRank.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2STellRefreshRank)
}
S2STellRefreshRank::S2STellRefreshRank(const S2STellRefreshRank& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  rankid_ = from.rankid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2STellRefreshRank)
}

void S2STellRefreshRank::SharedCtor() {
  rankid_ = 0u;
}

S2STellRefreshRank::~S2STellRefreshRank() {
  // @@protoc_insertion_point(destructor:KFMsg.S2STellRefreshRank)
  SharedDtor();
}

void S2STellRefreshRank::SharedDtor() {
}

void S2STellRefreshRank::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2STellRefreshRank::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2STellRefreshRank& S2STellRefreshRank::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2STellRefreshRank.base);
  return *internal_default_instance();
}


void S2STellRefreshRank::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2STellRefreshRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  rankid_ = 0u;
  _internal_metadata_.Clear();
}

bool S2STellRefreshRank::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2STellRefreshRank)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 rankid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &rankid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2STellRefreshRank)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2STellRefreshRank)
  return false;
#undef DO_
}

void S2STellRefreshRank::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2STellRefreshRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->rankid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2STellRefreshRank)
}

::google::protobuf::uint8* S2STellRefreshRank::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2STellRefreshRank)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->rankid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2STellRefreshRank)
  return target;
}

size_t S2STellRefreshRank::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2STellRefreshRank)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 rankid = 1;
  if (this->rankid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->rankid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2STellRefreshRank::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2STellRefreshRank)
  GOOGLE_DCHECK_NE(&from, this);
  const S2STellRefreshRank* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2STellRefreshRank>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2STellRefreshRank)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2STellRefreshRank)
    MergeFrom(*source);
  }
}

void S2STellRefreshRank::MergeFrom(const S2STellRefreshRank& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2STellRefreshRank)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.rankid() != 0) {
    set_rankid(from.rankid());
  }
}

void S2STellRefreshRank::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2STellRefreshRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2STellRefreshRank::CopyFrom(const S2STellRefreshRank& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2STellRefreshRank)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2STellRefreshRank::IsInitialized() const {
  return true;
}

void S2STellRefreshRank::Swap(S2STellRefreshRank* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2STellRefreshRank::InternalSwap(S2STellRefreshRank* other) {
  using std::swap;
  swap(rankid_, other->rankid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2STellRefreshRank::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse() {}
S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse::MergeFrom(const S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[49];
}
void S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SUpdateDataToPublicReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateDataToPublicReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateDataToPublicReq::S2SUpdateDataToPublicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateDataToPublicReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateDataToPublicReq)
}
S2SUpdateDataToPublicReq::S2SUpdateDataToPublicReq(const S2SUpdateDataToPublicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateDataToPublicReq)
}

void S2SUpdateDataToPublicReq::SharedCtor() {
}

S2SUpdateDataToPublicReq::~S2SUpdateDataToPublicReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateDataToPublicReq)
  SharedDtor();
}

void S2SUpdateDataToPublicReq::SharedDtor() {
}

void S2SUpdateDataToPublicReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateDataToPublicReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateDataToPublicReq& S2SUpdateDataToPublicReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateDataToPublicReq.base);
  return *internal_default_instance();
}


void S2SUpdateDataToPublicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateDataToPublicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  _internal_metadata_.Clear();
}

bool S2SUpdateDataToPublicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateDataToPublicReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, bytes> pbdata = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SUpdateDataToPublicReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateDataToPublicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateDataToPublicReq)
  return false;
#undef DO_
}

void S2SUpdateDataToPublicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateDataToPublicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> pbdata = 1;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateDataToPublicReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateDataToPublicReq)
}

::google::protobuf::uint8* S2SUpdateDataToPublicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateDataToPublicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, bytes> pbdata = 1;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateDataToPublicReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateDataToPublicReq)
  return target;
}

size_t S2SUpdateDataToPublicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateDataToPublicReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateDataToPublicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateDataToPublicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateDataToPublicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateDataToPublicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateDataToPublicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateDataToPublicReq)
    MergeFrom(*source);
  }
}

void S2SUpdateDataToPublicReq::MergeFrom(const S2SUpdateDataToPublicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateDataToPublicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
}

void S2SUpdateDataToPublicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateDataToPublicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateDataToPublicReq::CopyFrom(const S2SUpdateDataToPublicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateDataToPublicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateDataToPublicReq::IsInitialized() const {
  return true;
}

void S2SUpdateDataToPublicReq::Swap(S2SUpdateDataToPublicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateDataToPublicReq::InternalSwap(S2SUpdateDataToPublicReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateDataToPublicReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryBasicToPublicReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryBasicToPublicReq::kNameFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryBasicToPublicReq::S2SQueryBasicToPublicReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryBasicToPublicReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryBasicToPublicReq)
}
S2SQueryBasicToPublicReq::S2SQueryBasicToPublicReq(const S2SQueryBasicToPublicReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryBasicToPublicReq)
}

void S2SQueryBasicToPublicReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

S2SQueryBasicToPublicReq::~S2SQueryBasicToPublicReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryBasicToPublicReq)
  SharedDtor();
}

void S2SQueryBasicToPublicReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SQueryBasicToPublicReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryBasicToPublicReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryBasicToPublicReq& S2SQueryBasicToPublicReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryBasicToPublicReq.base);
  return *internal_default_instance();
}


void S2SQueryBasicToPublicReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryBasicToPublicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool S2SQueryBasicToPublicReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryBasicToPublicReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryBasicToPublicReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryBasicToPublicReq)
  return false;
#undef DO_
}

void S2SQueryBasicToPublicReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryBasicToPublicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryBasicToPublicReq)
}

::google::protobuf::uint8* S2SQueryBasicToPublicReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryBasicToPublicReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryBasicToPublicReq)
  return target;
}

size_t S2SQueryBasicToPublicReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryBasicToPublicReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryBasicToPublicReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryBasicToPublicReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryBasicToPublicReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryBasicToPublicReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryBasicToPublicReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryBasicToPublicReq)
    MergeFrom(*source);
  }
}

void S2SQueryBasicToPublicReq::MergeFrom(const S2SQueryBasicToPublicReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryBasicToPublicReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
}

void S2SQueryBasicToPublicReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryBasicToPublicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryBasicToPublicReq::CopyFrom(const S2SQueryBasicToPublicReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryBasicToPublicReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryBasicToPublicReq::IsInitialized() const {
  return true;
}

void S2SQueryBasicToPublicReq::Swap(S2SQueryBasicToPublicReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryBasicToPublicReq::InternalSwap(S2SQueryBasicToPublicReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryBasicToPublicReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SQueryBasicToGameAck_PbdataEntry_DoNotUse::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse() {}
S2SQueryBasicToGameAck_PbdataEntry_DoNotUse::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SQueryBasicToGameAck_PbdataEntry_DoNotUse::MergeFrom(const S2SQueryBasicToGameAck_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SQueryBasicToGameAck_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[52];
}
void S2SQueryBasicToGameAck_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SQueryBasicToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryBasicToGameAck::kNameFieldNumber;
const int S2SQueryBasicToGameAck::kResultFieldNumber;
const int S2SQueryBasicToGameAck::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryBasicToGameAck::S2SQueryBasicToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryBasicToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryBasicToGameAck)
}
S2SQueryBasicToGameAck::S2SQueryBasicToGameAck(const S2SQueryBasicToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  result_ = from.result_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryBasicToGameAck)
}

void S2SQueryBasicToGameAck::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0u;
}

S2SQueryBasicToGameAck::~S2SQueryBasicToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryBasicToGameAck)
  SharedDtor();
}

void S2SQueryBasicToGameAck::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SQueryBasicToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryBasicToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryBasicToGameAck& S2SQueryBasicToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryBasicToGameAck.base);
  return *internal_default_instance();
}


void S2SQueryBasicToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryBasicToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  result_ = 0u;
  _internal_metadata_.Clear();
}

bool S2SQueryBasicToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryBasicToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 result = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &result_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          S2SQueryBasicToGameAck_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SQueryBasicToGameAck_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SQueryBasicToGameAck.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryBasicToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryBasicToGameAck)
  return false;
#undef DO_
}

void S2SQueryBasicToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryBasicToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->result(), output);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SQueryBasicToGameAck.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SQueryBasicToGameAck_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SQueryBasicToGameAck_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryBasicToGameAck)
}

::google::protobuf::uint8* S2SQueryBasicToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryBasicToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->result(), target);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SQueryBasicToGameAck.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SQueryBasicToGameAck_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SQueryBasicToGameAck_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryBasicToGameAck)
  return target;
}

size_t S2SQueryBasicToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryBasicToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2SQueryBasicToGameAck_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint32 result = 2;
  if (this->result() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->result());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryBasicToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryBasicToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryBasicToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryBasicToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryBasicToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryBasicToGameAck)
    MergeFrom(*source);
  }
}

void S2SQueryBasicToGameAck::MergeFrom(const S2SQueryBasicToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryBasicToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.result() != 0) {
    set_result(from.result());
  }
}

void S2SQueryBasicToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryBasicToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryBasicToGameAck::CopyFrom(const S2SQueryBasicToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryBasicToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryBasicToGameAck::IsInitialized() const {
  return true;
}

void S2SQueryBasicToGameAck::Swap(S2SQueryBasicToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryBasicToGameAck::InternalSwap(S2SQueryBasicToGameAck* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(result_, other->result_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryBasicToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

PBRelation_PlayerdataEntry_DoNotUse::PBRelation_PlayerdataEntry_DoNotUse() {}
PBRelation_PlayerdataEntry_DoNotUse::PBRelation_PlayerdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBRelation_PlayerdataEntry_DoNotUse::MergeFrom(const PBRelation_PlayerdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBRelation_PlayerdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[54];
}
void PBRelation_PlayerdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

PBRelation_RelationdataEntry_DoNotUse::PBRelation_RelationdataEntry_DoNotUse() {}
PBRelation_RelationdataEntry_DoNotUse::PBRelation_RelationdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void PBRelation_RelationdataEntry_DoNotUse::MergeFrom(const PBRelation_RelationdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata PBRelation_RelationdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[55];
}
void PBRelation_RelationdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void PBRelation::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PBRelation::kPlayeridFieldNumber;
const int PBRelation::kPlayerdataFieldNumber;
const int PBRelation::kRelationdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PBRelation::PBRelation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.PBRelation)
}
PBRelation::PBRelation(const PBRelation& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerdata_.MergeFrom(from.playerdata_);
  relationdata_.MergeFrom(from.relationdata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.PBRelation)
}

void PBRelation::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

PBRelation::~PBRelation() {
  // @@protoc_insertion_point(destructor:KFMsg.PBRelation)
  SharedDtor();
}

void PBRelation::SharedDtor() {
}

void PBRelation::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* PBRelation::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const PBRelation& PBRelation::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_PBRelation.base);
  return *internal_default_instance();
}


void PBRelation::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.PBRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerdata_.Clear();
  relationdata_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool PBRelation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.PBRelation)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> playerdata = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          PBRelation_PlayerdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBRelation_PlayerdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&playerdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBRelation.PlayerdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> relationdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          PBRelation_RelationdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              PBRelation_RelationdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&relationdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.PBRelation.RelationdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.PBRelation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.PBRelation)
  return false;
#undef DO_
}

void PBRelation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.PBRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // map<string, bytes> playerdata = 2;
  if (!this->playerdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRelation.PlayerdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->playerdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->playerdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->playerdata().begin();
          it != this->playerdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRelation_PlayerdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(playerdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRelation_PlayerdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->playerdata().begin();
          it != this->playerdata().end(); ++it) {
        entry.reset(playerdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            2, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> relationdata = 3;
  if (!this->relationdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRelation.RelationdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->relationdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->relationdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->relationdata().begin();
          it != this->relationdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(relationdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->relationdata().begin();
          it != this->relationdata().end(); ++it) {
        entry.reset(relationdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.PBRelation)
}

::google::protobuf::uint8* PBRelation::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.PBRelation)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // map<string, bytes> playerdata = 2;
  if (!this->playerdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRelation.PlayerdataEntry.key");
      }
    };

    if (deterministic &&
        this->playerdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->playerdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->playerdata().begin();
          it != this->playerdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRelation_PlayerdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(playerdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRelation_PlayerdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->playerdata().begin();
          it != this->playerdata().end(); ++it) {
        entry.reset(playerdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       2, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // map<string, bytes> relationdata = 3;
  if (!this->relationdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.PBRelation.RelationdataEntry.key");
      }
    };

    if (deterministic &&
        this->relationdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->relationdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->relationdata().begin();
          it != this->relationdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(relationdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->relationdata().begin();
          it != this->relationdata().end(); ++it) {
        entry.reset(relationdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.PBRelation)
  return target;
}

size_t PBRelation::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.PBRelation)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> playerdata = 2;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->playerdata_size());
  {
    ::std::unique_ptr<PBRelation_PlayerdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->playerdata().begin();
        it != this->playerdata().end(); ++it) {
      entry.reset(playerdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // map<string, bytes> relationdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->relationdata_size());
  {
    ::std::unique_ptr<PBRelation_RelationdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->relationdata().begin();
        it != this->relationdata().end(); ++it) {
      entry.reset(relationdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PBRelation::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.PBRelation)
  GOOGLE_DCHECK_NE(&from, this);
  const PBRelation* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const PBRelation>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.PBRelation)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.PBRelation)
    MergeFrom(*source);
  }
}

void PBRelation::MergeFrom(const PBRelation& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.PBRelation)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  playerdata_.MergeFrom(from.playerdata_);
  relationdata_.MergeFrom(from.relationdata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void PBRelation::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.PBRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PBRelation::CopyFrom(const PBRelation& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.PBRelation)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PBRelation::IsInitialized() const {
  return true;
}

void PBRelation::Swap(PBRelation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PBRelation::InternalSwap(PBRelation* other) {
  using std::swap;
  playerdata_.Swap(&other->playerdata_);
  relationdata_.Swap(&other->relationdata_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata PBRelation::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendToRelationReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendToRelationReq::S2SQueryFriendToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendToRelationReq)
}
S2SQueryFriendToRelationReq::S2SQueryFriendToRelationReq(const S2SQueryFriendToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendToRelationReq)
}

void S2SQueryFriendToRelationReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryFriendToRelationReq::~S2SQueryFriendToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendToRelationReq)
  SharedDtor();
}

void S2SQueryFriendToRelationReq::SharedDtor() {
}

void S2SQueryFriendToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendToRelationReq& S2SQueryFriendToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendToRelationReq.base);
  return *internal_default_instance();
}


void S2SQueryFriendToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryFriendToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendToRelationReq)
  return false;
#undef DO_
}

void S2SQueryFriendToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendToRelationReq)
}

::google::protobuf::uint8* S2SQueryFriendToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendToRelationReq)
  return target;
}

size_t S2SQueryFriendToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendToRelationReq)
    MergeFrom(*source);
  }
}

void S2SQueryFriendToRelationReq::MergeFrom(const S2SQueryFriendToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryFriendToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendToRelationReq::CopyFrom(const S2SQueryFriendToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendToRelationReq::IsInitialized() const {
  return true;
}

void S2SQueryFriendToRelationReq::Swap(S2SQueryFriendToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendToRelationReq::InternalSwap(S2SQueryFriendToRelationReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendToGameAck::kPlayeridFieldNumber;
const int S2SQueryFriendToGameAck::kPbfriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendToGameAck::S2SQueryFriendToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendToGameAck)
}
S2SQueryFriendToGameAck::S2SQueryFriendToGameAck(const S2SQueryFriendToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbfriend_(from.pbfriend_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendToGameAck)
}

void S2SQueryFriendToGameAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryFriendToGameAck::~S2SQueryFriendToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendToGameAck)
  SharedDtor();
}

void S2SQueryFriendToGameAck::SharedDtor() {
}

void S2SQueryFriendToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendToGameAck& S2SQueryFriendToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendToGameAck.base);
  return *internal_default_instance();
}


void S2SQueryFriendToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbfriend_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryFriendToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBRelation pbfriend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbfriend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendToGameAck)
  return false;
#undef DO_
}

void S2SQueryFriendToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // repeated .KFMsg.PBRelation pbfriend = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbfriend_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pbfriend(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendToGameAck)
}

::google::protobuf::uint8* S2SQueryFriendToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // repeated .KFMsg.PBRelation pbfriend = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbfriend_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pbfriend(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendToGameAck)
  return target;
}

size_t S2SQueryFriendToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRelation pbfriend = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pbfriend_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbfriend(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendToGameAck)
    MergeFrom(*source);
  }
}

void S2SQueryFriendToGameAck::MergeFrom(const S2SQueryFriendToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbfriend_.MergeFrom(from.pbfriend_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryFriendToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendToGameAck::CopyFrom(const S2SQueryFriendToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendToGameAck::IsInitialized() const {
  return true;
}

void S2SQueryFriendToGameAck::Swap(S2SQueryFriendToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendToGameAck::InternalSwap(S2SQueryFriendToGameAck* other) {
  using std::swap;
  CastToBase(&pbfriend_)->InternalSwap(CastToBase(&other->pbfriend_));
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendInviteToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendInviteToRelationReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendInviteToRelationReq::S2SQueryFriendInviteToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendInviteToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendInviteToRelationReq)
}
S2SQueryFriendInviteToRelationReq::S2SQueryFriendInviteToRelationReq(const S2SQueryFriendInviteToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendInviteToRelationReq)
}

void S2SQueryFriendInviteToRelationReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryFriendInviteToRelationReq::~S2SQueryFriendInviteToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendInviteToRelationReq)
  SharedDtor();
}

void S2SQueryFriendInviteToRelationReq::SharedDtor() {
}

void S2SQueryFriendInviteToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendInviteToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendInviteToRelationReq& S2SQueryFriendInviteToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendInviteToRelationReq.base);
  return *internal_default_instance();
}


void S2SQueryFriendInviteToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryFriendInviteToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendInviteToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendInviteToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendInviteToRelationReq)
  return false;
#undef DO_
}

void S2SQueryFriendInviteToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendInviteToRelationReq)
}

::google::protobuf::uint8* S2SQueryFriendInviteToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendInviteToRelationReq)
  return target;
}

size_t S2SQueryFriendInviteToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendInviteToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendInviteToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendInviteToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendInviteToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendInviteToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendInviteToRelationReq)
    MergeFrom(*source);
  }
}

void S2SQueryFriendInviteToRelationReq::MergeFrom(const S2SQueryFriendInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryFriendInviteToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendInviteToRelationReq::CopyFrom(const S2SQueryFriendInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendInviteToRelationReq::IsInitialized() const {
  return true;
}

void S2SQueryFriendInviteToRelationReq::Swap(S2SQueryFriendInviteToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendInviteToRelationReq::InternalSwap(S2SQueryFriendInviteToRelationReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendInviteToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SQueryFriendInviteToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SQueryFriendInviteToGameAck::kPlayeridFieldNumber;
const int S2SQueryFriendInviteToGameAck::kPbinviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SQueryFriendInviteToGameAck::S2SQueryFriendInviteToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendInviteToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SQueryFriendInviteToGameAck)
}
S2SQueryFriendInviteToGameAck::S2SQueryFriendInviteToGameAck(const S2SQueryFriendInviteToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      pbinvite_(from.pbinvite_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SQueryFriendInviteToGameAck)
}

void S2SQueryFriendInviteToGameAck::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SQueryFriendInviteToGameAck::~S2SQueryFriendInviteToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SQueryFriendInviteToGameAck)
  SharedDtor();
}

void S2SQueryFriendInviteToGameAck::SharedDtor() {
}

void S2SQueryFriendInviteToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SQueryFriendInviteToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SQueryFriendInviteToGameAck& S2SQueryFriendInviteToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SQueryFriendInviteToGameAck.base);
  return *internal_default_instance();
}


void S2SQueryFriendInviteToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SQueryFriendInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbinvite_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SQueryFriendInviteToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SQueryFriendInviteToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .KFMsg.PBRelation pbinvite = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_pbinvite()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SQueryFriendInviteToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SQueryFriendInviteToGameAck)
  return false;
#undef DO_
}

void S2SQueryFriendInviteToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SQueryFriendInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // repeated .KFMsg.PBRelation pbinvite = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbinvite_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->pbinvite(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SQueryFriendInviteToGameAck)
}

::google::protobuf::uint8* S2SQueryFriendInviteToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SQueryFriendInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // repeated .KFMsg.PBRelation pbinvite = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->pbinvite_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->pbinvite(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SQueryFriendInviteToGameAck)
  return target;
}

size_t S2SQueryFriendInviteToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SQueryFriendInviteToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .KFMsg.PBRelation pbinvite = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->pbinvite_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->pbinvite(static_cast<int>(i)));
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SQueryFriendInviteToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SQueryFriendInviteToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SQueryFriendInviteToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SQueryFriendInviteToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SQueryFriendInviteToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SQueryFriendInviteToGameAck)
    MergeFrom(*source);
  }
}

void S2SQueryFriendInviteToGameAck::MergeFrom(const S2SQueryFriendInviteToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SQueryFriendInviteToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbinvite_.MergeFrom(from.pbinvite_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SQueryFriendInviteToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SQueryFriendInviteToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SQueryFriendInviteToGameAck::CopyFrom(const S2SQueryFriendInviteToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SQueryFriendInviteToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SQueryFriendInviteToGameAck::IsInitialized() const {
  return true;
}

void S2SQueryFriendInviteToGameAck::Swap(S2SQueryFriendInviteToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SQueryFriendInviteToGameAck::InternalSwap(S2SQueryFriendInviteToGameAck* other) {
  using std::swap;
  CastToBase(&pbinvite_)->InternalSwap(CastToBase(&other->pbinvite_));
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SQueryFriendInviteToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse() {}
S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse::MergeFrom(const S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse::GetMetadata() const {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[61];
}
void S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void S2SUpdateDataToFriendReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateDataToFriendReq::kPlayeridFieldNumber;
const int S2SUpdateDataToFriendReq::kPbdataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateDataToFriendReq::S2SUpdateDataToFriendReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateDataToFriendReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateDataToFriendReq)
}
S2SUpdateDataToFriendReq::S2SUpdateDataToFriendReq(const S2SUpdateDataToFriendReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  pbdata_.MergeFrom(from.pbdata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateDataToFriendReq)
}

void S2SUpdateDataToFriendReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SUpdateDataToFriendReq::~S2SUpdateDataToFriendReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateDataToFriendReq)
  SharedDtor();
}

void S2SUpdateDataToFriendReq::SharedDtor() {
}

void S2SUpdateDataToFriendReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateDataToFriendReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateDataToFriendReq& S2SUpdateDataToFriendReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateDataToFriendReq.base);
  return *internal_default_instance();
}


void S2SUpdateDataToFriendReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateDataToFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  pbdata_.Clear();
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SUpdateDataToFriendReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateDataToFriendReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<string, bytes> pbdata = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse,
              ::std::string, ::std::string,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
              0 >,
            ::google::protobuf::Map< ::std::string, ::std::string > > parser(&pbdata_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "KFMsg.S2SUpdateDataToFriendReq.PbdataEntry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateDataToFriendReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateDataToFriendReq)
  return false;
#undef DO_
}

void S2SUpdateDataToFriendReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateDataToFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateDataToFriendReq.PbdataEntry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            3, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateDataToFriendReq)
}

::google::protobuf::uint8* S2SUpdateDataToFriendReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateDataToFriendReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // map<string, bytes> pbdata = 3;
  if (!this->pbdata().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::std::string >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "KFMsg.S2SUpdateDataToFriendReq.PbdataEntry.key");
      }
    };

    if (deterministic &&
        this->pbdata().size() > 1) {
      ::std::unique_ptr<SortItem[]> items(
          new SortItem[this->pbdata().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::std::string >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::std::unique_ptr<S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(pbdata_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::std::unique_ptr<S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
          it = this->pbdata().begin();
          it != this->pbdata().end(); ++it) {
        entry.reset(pbdata_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       3, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateDataToFriendReq)
  return target;
}

size_t S2SUpdateDataToFriendReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateDataToFriendReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, bytes> pbdata = 3;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->pbdata_size());
  {
    ::std::unique_ptr<S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::std::string >::const_iterator
        it = this->pbdata().begin();
        it != this->pbdata().end(); ++it) {
      entry.reset(pbdata_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateDataToFriendReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateDataToFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateDataToFriendReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateDataToFriendReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateDataToFriendReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateDataToFriendReq)
    MergeFrom(*source);
  }
}

void S2SUpdateDataToFriendReq::MergeFrom(const S2SUpdateDataToFriendReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateDataToFriendReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  pbdata_.MergeFrom(from.pbdata_);
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SUpdateDataToFriendReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateDataToFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateDataToFriendReq::CopyFrom(const S2SUpdateDataToFriendReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateDataToFriendReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateDataToFriendReq::IsInitialized() const {
  return true;
}

void S2SUpdateDataToFriendReq::Swap(S2SUpdateDataToFriendReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateDataToFriendReq::InternalSwap(S2SUpdateDataToFriendReq* other) {
  using std::swap;
  pbdata_.Swap(&other->pbdata_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateDataToFriendReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddFriendInviteToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddFriendInviteToRelationReq::kNameFieldNumber;
const int S2SAddFriendInviteToRelationReq::kPlayeridFieldNumber;
const int S2SAddFriendInviteToRelationReq::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddFriendInviteToRelationReq::S2SAddFriendInviteToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddFriendInviteToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddFriendInviteToRelationReq)
}
S2SAddFriendInviteToRelationReq::S2SAddFriendInviteToRelationReq(const S2SAddFriendInviteToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.message().size() > 0) {
    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddFriendInviteToRelationReq)
}

void S2SAddFriendInviteToRelationReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SAddFriendInviteToRelationReq::~S2SAddFriendInviteToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddFriendInviteToRelationReq)
  SharedDtor();
}

void S2SAddFriendInviteToRelationReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SAddFriendInviteToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddFriendInviteToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddFriendInviteToRelationReq& S2SAddFriendInviteToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddFriendInviteToRelationReq.base);
  return *internal_default_instance();
}


void S2SAddFriendInviteToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddFriendInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddFriendInviteToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddFriendInviteToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes message = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddFriendInviteToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddFriendInviteToRelationReq)
  return false;
#undef DO_
}

void S2SAddFriendInviteToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddFriendInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->message(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddFriendInviteToRelationReq)
}

::google::protobuf::uint8* S2SAddFriendInviteToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddFriendInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->message(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddFriendInviteToRelationReq)
  return target;
}

size_t S2SAddFriendInviteToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddFriendInviteToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // bytes message = 3;
  if (this->message().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->message());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddFriendInviteToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddFriendInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddFriendInviteToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddFriendInviteToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddFriendInviteToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddFriendInviteToRelationReq)
    MergeFrom(*source);
  }
}

void S2SAddFriendInviteToRelationReq::MergeFrom(const S2SAddFriendInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddFriendInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.message().size() > 0) {

    message_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.message_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SAddFriendInviteToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddFriendInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddFriendInviteToRelationReq::CopyFrom(const S2SAddFriendInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddFriendInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddFriendInviteToRelationReq::IsInitialized() const {
  return true;
}

void S2SAddFriendInviteToRelationReq::Swap(S2SAddFriendInviteToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddFriendInviteToRelationReq::InternalSwap(S2SAddFriendInviteToRelationReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  message_.Swap(&other->message_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddFriendInviteToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddFriendInviteToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddFriendInviteToGameAck_default_instance_._instance.get_mutable()->pbinvite_ = const_cast< ::KFMsg::PBRelation*>(
      ::KFMsg::PBRelation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddFriendInviteToGameAck::kPlayeridFieldNumber;
const int S2SAddFriendInviteToGameAck::kPbinviteFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddFriendInviteToGameAck::S2SAddFriendInviteToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddFriendInviteToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddFriendInviteToGameAck)
}
S2SAddFriendInviteToGameAck::S2SAddFriendInviteToGameAck(const S2SAddFriendInviteToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbinvite()) {
    pbinvite_ = new ::KFMsg::PBRelation(*from.pbinvite_);
  } else {
    pbinvite_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddFriendInviteToGameAck)
}

void S2SAddFriendInviteToGameAck::SharedCtor() {
  ::memset(&pbinvite_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbinvite_)) + sizeof(playerid_));
}

S2SAddFriendInviteToGameAck::~S2SAddFriendInviteToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddFriendInviteToGameAck)
  SharedDtor();
}

void S2SAddFriendInviteToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbinvite_;
}

void S2SAddFriendInviteToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddFriendInviteToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddFriendInviteToGameAck& S2SAddFriendInviteToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddFriendInviteToGameAck.base);
  return *internal_default_instance();
}


void S2SAddFriendInviteToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddFriendInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbinvite_ != NULL) {
    delete pbinvite_;
  }
  pbinvite_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddFriendInviteToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddFriendInviteToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRelation pbinvite = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbinvite()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddFriendInviteToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddFriendInviteToGameAck)
  return false;
#undef DO_
}

void S2SAddFriendInviteToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddFriendInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBRelation pbinvite = 2;
  if (this->has_pbinvite()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbinvite(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddFriendInviteToGameAck)
}

::google::protobuf::uint8* S2SAddFriendInviteToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddFriendInviteToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBRelation pbinvite = 2;
  if (this->has_pbinvite()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbinvite(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddFriendInviteToGameAck)
  return target;
}

size_t S2SAddFriendInviteToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddFriendInviteToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBRelation pbinvite = 2;
  if (this->has_pbinvite()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbinvite_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddFriendInviteToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddFriendInviteToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddFriendInviteToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddFriendInviteToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddFriendInviteToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddFriendInviteToGameAck)
    MergeFrom(*source);
  }
}

void S2SAddFriendInviteToGameAck::MergeFrom(const S2SAddFriendInviteToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddFriendInviteToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbinvite()) {
    mutable_pbinvite()->::KFMsg::PBRelation::MergeFrom(from.pbinvite());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SAddFriendInviteToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddFriendInviteToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddFriendInviteToGameAck::CopyFrom(const S2SAddFriendInviteToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddFriendInviteToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddFriendInviteToGameAck::IsInitialized() const {
  return true;
}

void S2SAddFriendInviteToGameAck::Swap(S2SAddFriendInviteToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddFriendInviteToGameAck::InternalSwap(S2SAddFriendInviteToGameAck* other) {
  using std::swap;
  swap(pbinvite_, other->pbinvite_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddFriendInviteToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDelFriendInviteToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDelFriendInviteToRelationReq::kSelfplayeridFieldNumber;
const int S2SDelFriendInviteToRelationReq::kTargetplayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDelFriendInviteToRelationReq::S2SDelFriendInviteToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SDelFriendInviteToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDelFriendInviteToRelationReq)
}
S2SDelFriendInviteToRelationReq::S2SDelFriendInviteToRelationReq(const S2SDelFriendInviteToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetplayerid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDelFriendInviteToRelationReq)
}

void S2SDelFriendInviteToRelationReq::SharedCtor() {
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
}

S2SDelFriendInviteToRelationReq::~S2SDelFriendInviteToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDelFriendInviteToRelationReq)
  SharedDtor();
}

void S2SDelFriendInviteToRelationReq::SharedDtor() {
}

void S2SDelFriendInviteToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDelFriendInviteToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDelFriendInviteToRelationReq& S2SDelFriendInviteToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SDelFriendInviteToRelationReq.base);
  return *internal_default_instance();
}


void S2SDelFriendInviteToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDelFriendInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  _internal_metadata_.Clear();
}

bool S2SDelFriendInviteToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDelFriendInviteToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 selfplayerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDelFriendInviteToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDelFriendInviteToRelationReq)
  return false;
#undef DO_
}

void S2SDelFriendInviteToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDelFriendInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDelFriendInviteToRelationReq)
}

::google::protobuf::uint8* S2SDelFriendInviteToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDelFriendInviteToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDelFriendInviteToRelationReq)
  return target;
}

size_t S2SDelFriendInviteToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDelFriendInviteToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 selfplayerid = 1;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDelFriendInviteToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDelFriendInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDelFriendInviteToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDelFriendInviteToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDelFriendInviteToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDelFriendInviteToRelationReq)
    MergeFrom(*source);
  }
}

void S2SDelFriendInviteToRelationReq::MergeFrom(const S2SDelFriendInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDelFriendInviteToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
}

void S2SDelFriendInviteToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDelFriendInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDelFriendInviteToRelationReq::CopyFrom(const S2SDelFriendInviteToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDelFriendInviteToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDelFriendInviteToRelationReq::IsInitialized() const {
  return true;
}

void S2SDelFriendInviteToRelationReq::Swap(S2SDelFriendInviteToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDelFriendInviteToRelationReq::InternalSwap(S2SDelFriendInviteToRelationReq* other) {
  using std::swap;
  swap(selfplayerid_, other->selfplayerid_);
  swap(targetplayerid_, other->targetplayerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDelFriendInviteToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddFriendToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddFriendToRelationReq::kNameFieldNumber;
const int S2SAddFriendToRelationReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddFriendToRelationReq::S2SAddFriendToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddFriendToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddFriendToRelationReq)
}
S2SAddFriendToRelationReq::S2SAddFriendToRelationReq(const S2SAddFriendToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.name().size() > 0) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddFriendToRelationReq)
}

void S2SAddFriendToRelationReq::SharedCtor() {
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SAddFriendToRelationReq::~S2SAddFriendToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddFriendToRelationReq)
  SharedDtor();
}

void S2SAddFriendToRelationReq::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void S2SAddFriendToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddFriendToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddFriendToRelationReq& S2SAddFriendToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddFriendToRelationReq.base);
  return *internal_default_instance();
}


void S2SAddFriendToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddFriendToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddFriendToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddFriendToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 playerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddFriendToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddFriendToRelationReq)
  return false;
#undef DO_
}

void S2SAddFriendToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddFriendToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->name(), output);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddFriendToRelationReq)
}

::google::protobuf::uint8* S2SAddFriendToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddFriendToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes name = 1;
  if (this->name().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->name(), target);
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddFriendToRelationReq)
  return target;
}

size_t S2SAddFriendToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddFriendToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->name());
  }

  // uint64 playerid = 2;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddFriendToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddFriendToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddFriendToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddFriendToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddFriendToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddFriendToRelationReq)
    MergeFrom(*source);
  }
}

void S2SAddFriendToRelationReq::MergeFrom(const S2SAddFriendToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddFriendToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SAddFriendToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddFriendToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddFriendToRelationReq::CopyFrom(const S2SAddFriendToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddFriendToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddFriendToRelationReq::IsInitialized() const {
  return true;
}

void S2SAddFriendToRelationReq::Swap(S2SAddFriendToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddFriendToRelationReq::InternalSwap(S2SAddFriendToRelationReq* other) {
  using std::swap;
  name_.Swap(&other->name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddFriendToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SAddFriendToGameAck::InitAsDefaultInstance() {
  ::KFMsg::_S2SAddFriendToGameAck_default_instance_._instance.get_mutable()->pbfriend_ = const_cast< ::KFMsg::PBRelation*>(
      ::KFMsg::PBRelation::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SAddFriendToGameAck::kPlayeridFieldNumber;
const int S2SAddFriendToGameAck::kPbfriendFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SAddFriendToGameAck::S2SAddFriendToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SAddFriendToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SAddFriendToGameAck)
}
S2SAddFriendToGameAck::S2SAddFriendToGameAck(const S2SAddFriendToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_pbfriend()) {
    pbfriend_ = new ::KFMsg::PBRelation(*from.pbfriend_);
  } else {
    pbfriend_ = NULL;
  }
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SAddFriendToGameAck)
}

void S2SAddFriendToGameAck::SharedCtor() {
  ::memset(&pbfriend_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&playerid_) -
      reinterpret_cast<char*>(&pbfriend_)) + sizeof(playerid_));
}

S2SAddFriendToGameAck::~S2SAddFriendToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SAddFriendToGameAck)
  SharedDtor();
}

void S2SAddFriendToGameAck::SharedDtor() {
  if (this != internal_default_instance()) delete pbfriend_;
}

void S2SAddFriendToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SAddFriendToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SAddFriendToGameAck& S2SAddFriendToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SAddFriendToGameAck.base);
  return *internal_default_instance();
}


void S2SAddFriendToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SAddFriendToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && pbfriend_ != NULL) {
    delete pbfriend_;
  }
  pbfriend_ = NULL;
  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SAddFriendToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SAddFriendToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .KFMsg.PBRelation pbfriend = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_pbfriend()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SAddFriendToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SAddFriendToGameAck)
  return false;
#undef DO_
}

void S2SAddFriendToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SAddFriendToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // .KFMsg.PBRelation pbfriend = 2;
  if (this->has_pbfriend()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_pbfriend(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SAddFriendToGameAck)
}

::google::protobuf::uint8* S2SAddFriendToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SAddFriendToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // .KFMsg.PBRelation pbfriend = 2;
  if (this->has_pbfriend()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_pbfriend(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SAddFriendToGameAck)
  return target;
}

size_t S2SAddFriendToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SAddFriendToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .KFMsg.PBRelation pbfriend = 2;
  if (this->has_pbfriend()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *pbfriend_);
  }

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SAddFriendToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SAddFriendToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SAddFriendToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SAddFriendToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SAddFriendToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SAddFriendToGameAck)
    MergeFrom(*source);
  }
}

void S2SAddFriendToGameAck::MergeFrom(const S2SAddFriendToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SAddFriendToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_pbfriend()) {
    mutable_pbfriend()->::KFMsg::PBRelation::MergeFrom(from.pbfriend());
  }
  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SAddFriendToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SAddFriendToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SAddFriendToGameAck::CopyFrom(const S2SAddFriendToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SAddFriendToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SAddFriendToGameAck::IsInitialized() const {
  return true;
}

void S2SAddFriendToGameAck::Swap(S2SAddFriendToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SAddFriendToGameAck::InternalSwap(S2SAddFriendToGameAck* other) {
  using std::swap;
  swap(pbfriend_, other->pbfriend_);
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SAddFriendToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDelFriendToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDelFriendToRelationReq::kPlayeridFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDelFriendToRelationReq::S2SDelFriendToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SDelFriendToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDelFriendToRelationReq)
}
S2SDelFriendToRelationReq::S2SDelFriendToRelationReq(const S2SDelFriendToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  playerid_ = from.playerid_;
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDelFriendToRelationReq)
}

void S2SDelFriendToRelationReq::SharedCtor() {
  playerid_ = GOOGLE_ULONGLONG(0);
}

S2SDelFriendToRelationReq::~S2SDelFriendToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDelFriendToRelationReq)
  SharedDtor();
}

void S2SDelFriendToRelationReq::SharedDtor() {
}

void S2SDelFriendToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDelFriendToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDelFriendToRelationReq& S2SDelFriendToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SDelFriendToRelationReq.base);
  return *internal_default_instance();
}


void S2SDelFriendToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDelFriendToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  playerid_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool S2SDelFriendToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDelFriendToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDelFriendToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDelFriendToRelationReq)
  return false;
#undef DO_
}

void S2SDelFriendToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDelFriendToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDelFriendToRelationReq)
}

::google::protobuf::uint8* S2SDelFriendToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDelFriendToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDelFriendToRelationReq)
  return target;
}

size_t S2SDelFriendToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDelFriendToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDelFriendToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDelFriendToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDelFriendToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDelFriendToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDelFriendToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDelFriendToRelationReq)
    MergeFrom(*source);
  }
}

void S2SDelFriendToRelationReq::MergeFrom(const S2SDelFriendToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDelFriendToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
}

void S2SDelFriendToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDelFriendToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDelFriendToRelationReq::CopyFrom(const S2SDelFriendToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDelFriendToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDelFriendToRelationReq::IsInitialized() const {
  return true;
}

void S2SDelFriendToRelationReq::Swap(S2SDelFriendToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDelFriendToRelationReq::InternalSwap(S2SDelFriendToRelationReq* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDelFriendToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SDelFriendToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SDelFriendToGameAck::kPlayeridFieldNumber;
const int S2SDelFriendToGameAck::kFriendidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SDelFriendToGameAck::S2SDelFriendToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SDelFriendToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SDelFriendToGameAck)
}
S2SDelFriendToGameAck::S2SDelFriendToGameAck(const S2SDelFriendToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&friendid_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(friendid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SDelFriendToGameAck)
}

void S2SDelFriendToGameAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(friendid_));
}

S2SDelFriendToGameAck::~S2SDelFriendToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SDelFriendToGameAck)
  SharedDtor();
}

void S2SDelFriendToGameAck::SharedDtor() {
}

void S2SDelFriendToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SDelFriendToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SDelFriendToGameAck& S2SDelFriendToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SDelFriendToGameAck.base);
  return *internal_default_instance();
}


void S2SDelFriendToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SDelFriendToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendid_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(friendid_));
  _internal_metadata_.Clear();
}

bool S2SDelFriendToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SDelFriendToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 friendid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &friendid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SDelFriendToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SDelFriendToGameAck)
  return false;
#undef DO_
}

void S2SDelFriendToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SDelFriendToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 friendid = 2;
  if (this->friendid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->friendid(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SDelFriendToGameAck)
}

::google::protobuf::uint8* S2SDelFriendToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SDelFriendToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 friendid = 2;
  if (this->friendid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->friendid(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SDelFriendToGameAck)
  return target;
}

size_t S2SDelFriendToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SDelFriendToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 friendid = 2;
  if (this->friendid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->friendid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SDelFriendToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SDelFriendToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SDelFriendToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SDelFriendToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SDelFriendToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SDelFriendToGameAck)
    MergeFrom(*source);
  }
}

void S2SDelFriendToGameAck::MergeFrom(const S2SDelFriendToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SDelFriendToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.friendid() != 0) {
    set_friendid(from.friendid());
  }
}

void S2SDelFriendToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SDelFriendToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SDelFriendToGameAck::CopyFrom(const S2SDelFriendToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SDelFriendToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SDelFriendToGameAck::IsInitialized() const {
  return true;
}

void S2SDelFriendToGameAck::Swap(S2SDelFriendToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SDelFriendToGameAck::InternalSwap(S2SDelFriendToGameAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(friendid_, other->friendid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SDelFriendToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateFriendLinessToRelationReq::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateFriendLinessToRelationReq::kTypeFieldNumber;
const int S2SUpdateFriendLinessToRelationReq::kSelfplayeridFieldNumber;
const int S2SUpdateFriendLinessToRelationReq::kTargetplayeridFieldNumber;
const int S2SUpdateFriendLinessToRelationReq::kFriendlinessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateFriendLinessToRelationReq::S2SUpdateFriendLinessToRelationReq()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateFriendLinessToRelationReq.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateFriendLinessToRelationReq)
}
S2SUpdateFriendLinessToRelationReq::S2SUpdateFriendLinessToRelationReq(const S2SUpdateFriendLinessToRelationReq& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&selfplayerid_, &from.selfplayerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&targetplayerid_) -
    reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateFriendLinessToRelationReq)
}

void S2SUpdateFriendLinessToRelationReq::SharedCtor() {
  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
}

S2SUpdateFriendLinessToRelationReq::~S2SUpdateFriendLinessToRelationReq() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateFriendLinessToRelationReq)
  SharedDtor();
}

void S2SUpdateFriendLinessToRelationReq::SharedDtor() {
}

void S2SUpdateFriendLinessToRelationReq::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateFriendLinessToRelationReq::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateFriendLinessToRelationReq& S2SUpdateFriendLinessToRelationReq::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateFriendLinessToRelationReq.base);
  return *internal_default_instance();
}


void S2SUpdateFriendLinessToRelationReq::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&selfplayerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&targetplayerid_) -
      reinterpret_cast<char*>(&selfplayerid_)) + sizeof(targetplayerid_));
  _internal_metadata_.Clear();
}

bool S2SUpdateFriendLinessToRelationReq::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 selfplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &selfplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friendliness = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendliness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateFriendLinessToRelationReq)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateFriendLinessToRelationReq)
  return false;
#undef DO_
}

void S2SUpdateFriendLinessToRelationReq::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->type(), output);
  }

  // uint64 selfplayerid = 2;
  if (this->selfplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->selfplayerid(), output);
  }

  // uint64 targetplayerid = 3;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->targetplayerid(), output);
  }

  // uint32 friendliness = 4;
  if (this->friendliness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->friendliness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateFriendLinessToRelationReq)
}

::google::protobuf::uint8* S2SUpdateFriendLinessToRelationReq::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 type = 1;
  if (this->type() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->type(), target);
  }

  // uint64 selfplayerid = 2;
  if (this->selfplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->selfplayerid(), target);
  }

  // uint64 targetplayerid = 3;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->targetplayerid(), target);
  }

  // uint32 friendliness = 4;
  if (this->friendliness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->friendliness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateFriendLinessToRelationReq)
  return target;
}

size_t S2SUpdateFriendLinessToRelationReq::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 selfplayerid = 2;
  if (this->selfplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->selfplayerid());
  }

  // uint32 type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->type());
  }

  // uint32 friendliness = 4;
  if (this->friendliness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friendliness());
  }

  // uint64 targetplayerid = 3;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateFriendLinessToRelationReq::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateFriendLinessToRelationReq* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateFriendLinessToRelationReq>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateFriendLinessToRelationReq)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateFriendLinessToRelationReq)
    MergeFrom(*source);
  }
}

void S2SUpdateFriendLinessToRelationReq::MergeFrom(const S2SUpdateFriendLinessToRelationReq& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.selfplayerid() != 0) {
    set_selfplayerid(from.selfplayerid());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.friendliness() != 0) {
    set_friendliness(from.friendliness());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
}

void S2SUpdateFriendLinessToRelationReq::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateFriendLinessToRelationReq::CopyFrom(const S2SUpdateFriendLinessToRelationReq& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateFriendLinessToRelationReq)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateFriendLinessToRelationReq::IsInitialized() const {
  return true;
}

void S2SUpdateFriendLinessToRelationReq::Swap(S2SUpdateFriendLinessToRelationReq* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateFriendLinessToRelationReq::InternalSwap(S2SUpdateFriendLinessToRelationReq* other) {
  using std::swap;
  swap(selfplayerid_, other->selfplayerid_);
  swap(type_, other->type_);
  swap(friendliness_, other->friendliness_);
  swap(targetplayerid_, other->targetplayerid_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateFriendLinessToRelationReq::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void S2SUpdateFriendLinessToGameAck::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int S2SUpdateFriendLinessToGameAck::kPlayeridFieldNumber;
const int S2SUpdateFriendLinessToGameAck::kTargetplayeridFieldNumber;
const int S2SUpdateFriendLinessToGameAck::kFriendlinessFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

S2SUpdateFriendLinessToGameAck::S2SUpdateFriendLinessToGameAck()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateFriendLinessToGameAck.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:KFMsg.S2SUpdateFriendLinessToGameAck)
}
S2SUpdateFriendLinessToGameAck::S2SUpdateFriendLinessToGameAck(const S2SUpdateFriendLinessToGameAck& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&playerid_, &from.playerid_,
    static_cast<size_t>(reinterpret_cast<char*>(&friendliness_) -
    reinterpret_cast<char*>(&playerid_)) + sizeof(friendliness_));
  // @@protoc_insertion_point(copy_constructor:KFMsg.S2SUpdateFriendLinessToGameAck)
}

void S2SUpdateFriendLinessToGameAck::SharedCtor() {
  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendliness_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(friendliness_));
}

S2SUpdateFriendLinessToGameAck::~S2SUpdateFriendLinessToGameAck() {
  // @@protoc_insertion_point(destructor:KFMsg.S2SUpdateFriendLinessToGameAck)
  SharedDtor();
}

void S2SUpdateFriendLinessToGameAck::SharedDtor() {
}

void S2SUpdateFriendLinessToGameAck::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* S2SUpdateFriendLinessToGameAck::descriptor() {
  ::protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const S2SUpdateFriendLinessToGameAck& S2SUpdateFriendLinessToGameAck::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_FrameServerMessage_2eproto::scc_info_S2SUpdateFriendLinessToGameAck.base);
  return *internal_default_instance();
}


void S2SUpdateFriendLinessToGameAck::Clear() {
// @@protoc_insertion_point(message_clear_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&playerid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&friendliness_) -
      reinterpret_cast<char*>(&playerid_)) + sizeof(friendliness_));
  _internal_metadata_.Clear();
}

bool S2SUpdateFriendLinessToGameAck::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint64 playerid = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &playerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 targetplayerid = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &targetplayerid_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 friendliness = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &friendliness_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:KFMsg.S2SUpdateFriendLinessToGameAck)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:KFMsg.S2SUpdateFriendLinessToGameAck)
  return false;
#undef DO_
}

void S2SUpdateFriendLinessToGameAck::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->playerid(), output);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->targetplayerid(), output);
  }

  // uint32 friendliness = 3;
  if (this->friendliness() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->friendliness(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:KFMsg.S2SUpdateFriendLinessToGameAck)
}

::google::protobuf::uint8* S2SUpdateFriendLinessToGameAck::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->playerid(), target);
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->targetplayerid(), target);
  }

  // uint32 friendliness = 3;
  if (this->friendliness() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->friendliness(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:KFMsg.S2SUpdateFriendLinessToGameAck)
  return target;
}

size_t S2SUpdateFriendLinessToGameAck::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 playerid = 1;
  if (this->playerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->playerid());
  }

  // uint64 targetplayerid = 2;
  if (this->targetplayerid() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->targetplayerid());
  }

  // uint32 friendliness = 3;
  if (this->friendliness() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->friendliness());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void S2SUpdateFriendLinessToGameAck::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  const S2SUpdateFriendLinessToGameAck* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const S2SUpdateFriendLinessToGameAck>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:KFMsg.S2SUpdateFriendLinessToGameAck)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:KFMsg.S2SUpdateFriendLinessToGameAck)
    MergeFrom(*source);
  }
}

void S2SUpdateFriendLinessToGameAck::MergeFrom(const S2SUpdateFriendLinessToGameAck& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.playerid() != 0) {
    set_playerid(from.playerid());
  }
  if (from.targetplayerid() != 0) {
    set_targetplayerid(from.targetplayerid());
  }
  if (from.friendliness() != 0) {
    set_friendliness(from.friendliness());
  }
}

void S2SUpdateFriendLinessToGameAck::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void S2SUpdateFriendLinessToGameAck::CopyFrom(const S2SUpdateFriendLinessToGameAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:KFMsg.S2SUpdateFriendLinessToGameAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool S2SUpdateFriendLinessToGameAck::IsInitialized() const {
  return true;
}

void S2SUpdateFriendLinessToGameAck::Swap(S2SUpdateFriendLinessToGameAck* other) {
  if (other == this) return;
  InternalSwap(other);
}
void S2SUpdateFriendLinessToGameAck::InternalSwap(S2SUpdateFriendLinessToGameAck* other) {
  using std::swap;
  swap(playerid_, other->playerid_);
  swap(targetplayerid_, other->targetplayerid_);
  swap(friendliness_, other->friendliness_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata S2SUpdateFriendLinessToGameAck::GetMetadata() const {
  protobuf_FrameServerMessage_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_FrameServerMessage_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBZoneData* Arena::CreateMaybeMessage< ::KFMsg::PBZoneData >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBZoneData >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateZoneToLoginReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateZoneToLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateZoneToLoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddGateToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddGateToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddGateToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRemoveGateToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRemoveGateToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRemoveGateToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToLoginReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToLoginReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToLoginReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToGateAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToGateAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToGateAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToLoginAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToLoginAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToLoginAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoginToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoginToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoginToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SEnterToGateAck* Arena::CreateMaybeMessage< ::KFMsg::S2SEnterToGateAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SEnterToGateAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLogoutToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLogoutToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLogoutToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDisconnectToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDisconnectToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDisconnectToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLeaveToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLeaveToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLeaveToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SReLoginToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SReLoginToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SReLoginToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SReLoginToGateAck* Arena::CreateMaybeMessage< ::KFMsg::S2SReLoginToGateAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SReLoginToGateAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoadPlayerToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SLoadPlayerToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoadPlayerToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SLoadPlayerToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SLoadPlayerToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SLoadPlayerToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSavePlayerToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSavePlayerToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSavePlayerToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSavePlayerToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SSavePlayerToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSavePlayerToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryPlayerToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryPlayerToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryPlayerToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryPlayerToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryPlayerToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryPlayerToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSetPlayerNameToDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SSetPlayerNameToDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSetPlayerNameToDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SSetPlayerNameToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SSetPlayerNameToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SSetPlayerNameToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerEnterToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerEnterToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerEnterToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SPlayerLeaveToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SPlayerLeaveToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SPlayerLeaveToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickPlayerToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickPlayerToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickPlayerToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickPlayerToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickPlayerToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickPlayerToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickPlayerToGateReq* Arena::CreateMaybeMessage< ::KFMsg::S2SKickPlayerToGateReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickPlayerToGateReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SKickPlayerToWorldAck* Arena::CreateMaybeMessage< ::KFMsg::S2SKickPlayerToWorldAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SKickPlayerToWorldAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGameReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGameReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGameReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToGateReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToGateReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToGateReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToWorldReq* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToWorldReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToWorldReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SBroadcastToWorldAck* Arena::CreateMaybeMessage< ::KFMsg::S2SBroadcastToWorldAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SBroadcastToWorldAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMail_DataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBMail_DataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMail_DataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBMail* Arena::CreateMaybeMessage< ::KFMsg::PBMail >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBMail >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryMailAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryMailAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryMailAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SNoticeNewMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SNoticeNewMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SNoticeNewMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SNewPlayerMailReq* Arena::CreateMaybeMessage< ::KFMsg::S2SNewPlayerMailReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SNewPlayerMailReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateMailStatusReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateMailStatusReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateMailStatusReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateMailStatusAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateMailStatusAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateMailStatusAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateRankDataReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateRankDataReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateRankDataReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryRankListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryRankListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryRankListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendRankListReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendRankListReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendRankListReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRefreshRankReq* Arena::CreateMaybeMessage< ::KFMsg::S2SRefreshRankReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRefreshRankReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SRefreshRankAck* Arena::CreateMaybeMessage< ::KFMsg::S2SRefreshRankAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SRefreshRankAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2STellRefreshRank* Arena::CreateMaybeMessage< ::KFMsg::S2STellRefreshRank >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2STellRefreshRank >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateDataToPublicReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateDataToPublicReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateDataToPublicReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateDataToPublicReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryBasicToPublicReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryBasicToPublicReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryBasicToPublicReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryBasicToGameAck_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryBasicToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryBasicToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryBasicToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRelation_PlayerdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBRelation_PlayerdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRelation_PlayerdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRelation_RelationdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::PBRelation_RelationdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRelation_RelationdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::PBRelation* Arena::CreateMaybeMessage< ::KFMsg::PBRelation >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::PBRelation >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendInviteToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendInviteToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendInviteToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SQueryFriendInviteToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SQueryFriendInviteToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SQueryFriendInviteToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateDataToFriendReq_PbdataEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateDataToFriendReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateDataToFriendReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateDataToFriendReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddFriendInviteToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddFriendInviteToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddFriendInviteToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddFriendInviteToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SAddFriendInviteToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddFriendInviteToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDelFriendInviteToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDelFriendInviteToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDelFriendInviteToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddFriendToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SAddFriendToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddFriendToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SAddFriendToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SAddFriendToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SAddFriendToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDelFriendToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SDelFriendToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDelFriendToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SDelFriendToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SDelFriendToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SDelFriendToGameAck >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateFriendLinessToRelationReq* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateFriendLinessToRelationReq >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateFriendLinessToRelationReq >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::KFMsg::S2SUpdateFriendLinessToGameAck* Arena::CreateMaybeMessage< ::KFMsg::S2SUpdateFriendLinessToGameAck >(Arena* arena) {
  return Arena::CreateInternal< ::KFMsg::S2SUpdateFriendLinessToGameAck >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
