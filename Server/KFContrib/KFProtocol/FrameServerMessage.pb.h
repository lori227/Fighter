// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FrameServerMessage.proto

#ifndef PROTOBUF_INCLUDED_FrameServerMessage_2eproto
#define PROTOBUF_INCLUDED_FrameServerMessage_2eproto

#ifdef _MSC_VER
	#pragma warning(push)
	#pragma warning(disable : 4946)
#endif

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "FrameDefineMessage.pb.h"
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_FrameServerMessage_2eproto LIBPROTOC_EXPORT

namespace protobuf_FrameServerMessage_2eproto {
// Internal implementation detail -- do not use these members.
struct LIBPROTOC_EXPORT TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[97];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void LIBPROTOC_EXPORT AddDescriptors();
}  // namespace protobuf_FrameServerMessage_2eproto
namespace KFMsg {
class PBMail;
class PBMailDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBMailDefaultTypeInternal _PBMail_default_instance_;
class PBMail_DataEntry_DoNotUse;
class PBMail_DataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBMail_DataEntry_DoNotUseDefaultTypeInternal _PBMail_DataEntry_DoNotUse_default_instance_;
class PBRelation;
class PBRelationDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRelationDefaultTypeInternal _PBRelation_default_instance_;
class PBRelation_BasicdataEntry_DoNotUse;
class PBRelation_BasicdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRelation_BasicdataEntry_DoNotUseDefaultTypeInternal _PBRelation_BasicdataEntry_DoNotUse_default_instance_;
class PBRelation_RelationdataEntry_DoNotUse;
class PBRelation_RelationdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern PBRelation_RelationdataEntry_DoNotUseDefaultTypeInternal _PBRelation_RelationdataEntry_DoNotUse_default_instance_;
class S2SAddGateToWorldReq;
class S2SAddGateToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddGateToWorldReqDefaultTypeInternal _S2SAddGateToWorldReq_default_instance_;
class S2SAddMailReq;
class S2SAddMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddMailReqDefaultTypeInternal _S2SAddMailReq_default_instance_;
class S2SAddRelationToGameAck;
class S2SAddRelationToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddRelationToGameAckDefaultTypeInternal _S2SAddRelationToGameAck_default_instance_;
class S2SAddRelationToRelationReq;
class S2SAddRelationToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SAddRelationToRelationReqDefaultTypeInternal _S2SAddRelationToRelationReq_default_instance_;
class S2SApplyAddRelationToGameAck;
class S2SApplyAddRelationToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SApplyAddRelationToGameAckDefaultTypeInternal _S2SApplyAddRelationToGameAck_default_instance_;
class S2SApplyAddRelationToRelationReq;
class S2SApplyAddRelationToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SApplyAddRelationToRelationReqDefaultTypeInternal _S2SApplyAddRelationToRelationReq_default_instance_;
class S2SBroadcastToGameAck;
class S2SBroadcastToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToGameAckDefaultTypeInternal _S2SBroadcastToGameAck_default_instance_;
class S2SBroadcastToGameReq;
class S2SBroadcastToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToGameReqDefaultTypeInternal _S2SBroadcastToGameReq_default_instance_;
class S2SBroadcastToGateReq;
class S2SBroadcastToGateReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToGateReqDefaultTypeInternal _S2SBroadcastToGateReq_default_instance_;
class S2SBroadcastToServerReq;
class S2SBroadcastToServerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToServerReqDefaultTypeInternal _S2SBroadcastToServerReq_default_instance_;
class S2SBroadcastToWorldAck;
class S2SBroadcastToWorldAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToWorldAckDefaultTypeInternal _S2SBroadcastToWorldAck_default_instance_;
class S2SBroadcastToWorldReq;
class S2SBroadcastToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SBroadcastToWorldReqDefaultTypeInternal _S2SBroadcastToWorldReq_default_instance_;
class S2SClearOnlineToBasicReq;
class S2SClearOnlineToBasicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SClearOnlineToBasicReqDefaultTypeInternal _S2SClearOnlineToBasicReq_default_instance_;
class S2SConnectToGameReq;
class S2SConnectToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SConnectToGameReqDefaultTypeInternal _S2SConnectToGameReq_default_instance_;
class S2SDelRelationInviteToRelationReq;
class S2SDelRelationInviteToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDelRelationInviteToRelationReqDefaultTypeInternal _S2SDelRelationInviteToRelationReq_default_instance_;
class S2SDelRelationToGameAck;
class S2SDelRelationToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDelRelationToGameAckDefaultTypeInternal _S2SDelRelationToGameAck_default_instance_;
class S2SDelRelationToRelationReq;
class S2SDelRelationToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDelRelationToRelationReqDefaultTypeInternal _S2SDelRelationToRelationReq_default_instance_;
class S2SDisconnectToGameReq;
class S2SDisconnectToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SDisconnectToGameReqDefaultTypeInternal _S2SDisconnectToGameReq_default_instance_;
class S2SEnterToGateAck;
class S2SEnterToGateAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SEnterToGateAckDefaultTypeInternal _S2SEnterToGateAck_default_instance_;
class S2SKickPlayerToGameReq;
class S2SKickPlayerToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SKickPlayerToGameReqDefaultTypeInternal _S2SKickPlayerToGameReq_default_instance_;
class S2SKickPlayerToGateReq;
class S2SKickPlayerToGateReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SKickPlayerToGateReqDefaultTypeInternal _S2SKickPlayerToGateReq_default_instance_;
class S2SLeaveToGameReq;
class S2SLeaveToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLeaveToGameReqDefaultTypeInternal _S2SLeaveToGameReq_default_instance_;
class S2SLoadPlayerToDataReq;
class S2SLoadPlayerToDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoadPlayerToDataReqDefaultTypeInternal _S2SLoadPlayerToDataReq_default_instance_;
class S2SLoadPlayerToGameAck;
class S2SLoadPlayerToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoadPlayerToGameAckDefaultTypeInternal _S2SLoadPlayerToGameAck_default_instance_;
class S2SLoginToGameReq;
class S2SLoginToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToGameReqDefaultTypeInternal _S2SLoginToGameReq_default_instance_;
class S2SLoginToGateAck;
class S2SLoginToGateAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToGateAckDefaultTypeInternal _S2SLoginToGateAck_default_instance_;
class S2SLoginToLoginAck;
class S2SLoginToLoginAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToLoginAckDefaultTypeInternal _S2SLoginToLoginAck_default_instance_;
class S2SLoginToLoginReq;
class S2SLoginToLoginReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToLoginReqDefaultTypeInternal _S2SLoginToLoginReq_default_instance_;
class S2SLoginToWorldReq;
class S2SLoginToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLoginToWorldReqDefaultTypeInternal _S2SLoginToWorldReq_default_instance_;
class S2SLogoutToGameReq;
class S2SLogoutToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SLogoutToGameReqDefaultTypeInternal _S2SLogoutToGameReq_default_instance_;
class S2SNewPlayerMailReq;
class S2SNewPlayerMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SNewPlayerMailReqDefaultTypeInternal _S2SNewPlayerMailReq_default_instance_;
class S2SNoticeNewMailReq;
class S2SNoticeNewMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SNoticeNewMailReqDefaultTypeInternal _S2SNoticeNewMailReq_default_instance_;
class S2SNoticeRankWorkerReq;
class S2SNoticeRankWorkerReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SNoticeRankWorkerReqDefaultTypeInternal _S2SNoticeRankWorkerReq_default_instance_;
class S2SPlayerEnterToWorldReq;
class S2SPlayerEnterToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerEnterToWorldReqDefaultTypeInternal _S2SPlayerEnterToWorldReq_default_instance_;
class S2SPlayerLeaveToWorldReq;
class S2SPlayerLeaveToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SPlayerLeaveToWorldReqDefaultTypeInternal _S2SPlayerLeaveToWorldReq_default_instance_;
class S2SQueryAttributeToBasicReq;
class S2SQueryAttributeToBasicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryAttributeToBasicReqDefaultTypeInternal _S2SQueryAttributeToBasicReq_default_instance_;
class S2SQueryAttributeToGameAck;
class S2SQueryAttributeToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryAttributeToGameAckDefaultTypeInternal _S2SQueryAttributeToGameAck_default_instance_;
class S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse;
class S2SQueryAttributeToGameAck_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryAttributeToGameAck_PbdataEntry_DoNotUseDefaultTypeInternal _S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse_default_instance_;
class S2SQueryFriendRankListReq;
class S2SQueryFriendRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryFriendRankListReqDefaultTypeInternal _S2SQueryFriendRankListReq_default_instance_;
class S2SQueryMailAck;
class S2SQueryMailAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryMailAckDefaultTypeInternal _S2SQueryMailAck_default_instance_;
class S2SQueryMailReq;
class S2SQueryMailReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryMailReqDefaultTypeInternal _S2SQueryMailReq_default_instance_;
class S2SQueryPlayerToDataReq;
class S2SQueryPlayerToDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryPlayerToDataReqDefaultTypeInternal _S2SQueryPlayerToDataReq_default_instance_;
class S2SQueryPlayerToGameAck;
class S2SQueryPlayerToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryPlayerToGameAckDefaultTypeInternal _S2SQueryPlayerToGameAck_default_instance_;
class S2SQueryRankListReq;
class S2SQueryRankListReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRankListReqDefaultTypeInternal _S2SQueryRankListReq_default_instance_;
class S2SQueryRelationInviteToGameAck;
class S2SQueryRelationInviteToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRelationInviteToGameAckDefaultTypeInternal _S2SQueryRelationInviteToGameAck_default_instance_;
class S2SQueryRelationInviteToRelationReq;
class S2SQueryRelationInviteToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRelationInviteToRelationReqDefaultTypeInternal _S2SQueryRelationInviteToRelationReq_default_instance_;
class S2SQueryRelationToGameAck;
class S2SQueryRelationToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRelationToGameAckDefaultTypeInternal _S2SQueryRelationToGameAck_default_instance_;
class S2SQueryRelationToRelationReq;
class S2SQueryRelationToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SQueryRelationToRelationReqDefaultTypeInternal _S2SQueryRelationToRelationReq_default_instance_;
class S2SReLoginToGameReq;
class S2SReLoginToGameReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SReLoginToGameReqDefaultTypeInternal _S2SReLoginToGameReq_default_instance_;
class S2SReLoginToGateAck;
class S2SReLoginToGateAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SReLoginToGateAckDefaultTypeInternal _S2SReLoginToGateAck_default_instance_;
class S2SRefuseRelationToRelationReq;
class S2SRefuseRelationToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRefuseRelationToRelationReqDefaultTypeInternal _S2SRefuseRelationToRelationReq_default_instance_;
class S2SRemoveGateToWorldReq;
class S2SRemoveGateToWorldReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SRemoveGateToWorldReqDefaultTypeInternal _S2SRemoveGateToWorldReq_default_instance_;
class S2SSavePlayerToDataReq;
class S2SSavePlayerToDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSavePlayerToDataReqDefaultTypeInternal _S2SSavePlayerToDataReq_default_instance_;
class S2SSavePlayerToGameAck;
class S2SSavePlayerToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSavePlayerToGameAckDefaultTypeInternal _S2SSavePlayerToGameAck_default_instance_;
class S2SSetPlayerNameToBasicReq;
class S2SSetPlayerNameToBasicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSetPlayerNameToBasicReqDefaultTypeInternal _S2SSetPlayerNameToBasicReq_default_instance_;
class S2SSetPlayerNameToGameAck;
class S2SSetPlayerNameToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSetPlayerNameToGameAckDefaultTypeInternal _S2SSetPlayerNameToGameAck_default_instance_;
class S2SSyncAddDataFromServer;
class S2SSyncAddDataFromServerDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSyncAddDataFromServerDefaultTypeInternal _S2SSyncAddDataFromServer_default_instance_;
class S2SSyncRefreshRank;
class S2SSyncRefreshRankDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSyncRefreshRankDefaultTypeInternal _S2SSyncRefreshRank_default_instance_;
class S2SSyncRemoveDataFromServer;
class S2SSyncRemoveDataFromServerDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSyncRemoveDataFromServerDefaultTypeInternal _S2SSyncRemoveDataFromServer_default_instance_;
class S2SSyncUpdateDataFromServer;
class S2SSyncUpdateDataFromServerDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SSyncUpdateDataFromServerDefaultTypeInternal _S2SSyncUpdateDataFromServer_default_instance_;
class S2STeamAgreeToTeamReq;
class S2STeamAgreeToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamAgreeToTeamReqDefaultTypeInternal _S2STeamAgreeToTeamReq_default_instance_;
class S2STeamCreateToTeamReq;
class S2STeamCreateToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamCreateToTeamReqDefaultTypeInternal _S2STeamCreateToTeamReq_default_instance_;
class S2STeamIntValueToTeamReq;
class S2STeamIntValueToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamIntValueToTeamReqDefaultTypeInternal _S2STeamIntValueToTeamReq_default_instance_;
class S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse;
class S2STeamIntValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamIntValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
class S2STeamJoinFailedToTeamReq;
class S2STeamJoinFailedToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamJoinFailedToTeamReqDefaultTypeInternal _S2STeamJoinFailedToTeamReq_default_instance_;
class S2STeamJoinToGameAck;
class S2STeamJoinToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamJoinToGameAckDefaultTypeInternal _S2STeamJoinToGameAck_default_instance_;
class S2STeamKickToTeamReq;
class S2STeamKickToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamKickToTeamReqDefaultTypeInternal _S2STeamKickToTeamReq_default_instance_;
class S2STeamLeaveToGameAck;
class S2STeamLeaveToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamLeaveToGameAckDefaultTypeInternal _S2STeamLeaveToGameAck_default_instance_;
class S2STeamLeaveToTeamReq;
class S2STeamLeaveToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamLeaveToTeamReqDefaultTypeInternal _S2STeamLeaveToTeamReq_default_instance_;
class S2STeamMemberIntValueToTeamReq;
class S2STeamMemberIntValueToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamMemberIntValueToTeamReqDefaultTypeInternal _S2STeamMemberIntValueToTeamReq_default_instance_;
class S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse;
class S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
class S2STeamMemberStrValueToTeamReq;
class S2STeamMemberStrValueToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamMemberStrValueToTeamReqDefaultTypeInternal _S2STeamMemberStrValueToTeamReq_default_instance_;
class S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse;
class S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
class S2STeamOnlineQueryToGameAck;
class S2STeamOnlineQueryToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamOnlineQueryToGameAckDefaultTypeInternal _S2STeamOnlineQueryToGameAck_default_instance_;
class S2STeamOnlineQueryToTeamReq;
class S2STeamOnlineQueryToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamOnlineQueryToTeamReqDefaultTypeInternal _S2STeamOnlineQueryToTeamReq_default_instance_;
class S2STeamStrValueToTeamReq;
class S2STeamStrValueToTeamReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamStrValueToTeamReqDefaultTypeInternal _S2STeamStrValueToTeamReq_default_instance_;
class S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse;
class S2STeamStrValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamStrValueToTeamReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_;
class S2STeamTellApplyToGameAck;
class S2STeamTellApplyToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamTellApplyToGameAckDefaultTypeInternal _S2STeamTellApplyToGameAck_default_instance_;
class S2STeamTellInviteToGameAck;
class S2STeamTellInviteToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2STeamTellInviteToGameAckDefaultTypeInternal _S2STeamTellInviteToGameAck_default_instance_;
class S2SUpdateFriendLinessToGameAck;
class S2SUpdateFriendLinessToGameAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateFriendLinessToGameAckDefaultTypeInternal _S2SUpdateFriendLinessToGameAck_default_instance_;
class S2SUpdateFriendLinessToRelationReq;
class S2SUpdateFriendLinessToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateFriendLinessToRelationReqDefaultTypeInternal _S2SUpdateFriendLinessToRelationReq_default_instance_;
class S2SUpdateIntValueToBasicReq;
class S2SUpdateIntValueToBasicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateIntValueToBasicReqDefaultTypeInternal _S2SUpdateIntValueToBasicReq_default_instance_;
class S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse;
class S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateIntValueToRelationReq;
class S2SUpdateIntValueToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateIntValueToRelationReqDefaultTypeInternal _S2SUpdateIntValueToRelationReq_default_instance_;
class S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse;
class S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateMailStatusAck;
class S2SUpdateMailStatusAckDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateMailStatusAckDefaultTypeInternal _S2SUpdateMailStatusAck_default_instance_;
class S2SUpdateMailStatusReq;
class S2SUpdateMailStatusReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateMailStatusReqDefaultTypeInternal _S2SUpdateMailStatusReq_default_instance_;
class S2SUpdateRankDataReq;
class S2SUpdateRankDataReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateRankDataReqDefaultTypeInternal _S2SUpdateRankDataReq_default_instance_;
class S2SUpdateStrValueToBasicReq;
class S2SUpdateStrValueToBasicReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateStrValueToBasicReqDefaultTypeInternal _S2SUpdateStrValueToBasicReq_default_instance_;
class S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse;
class S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse_default_instance_;
class S2SUpdateStrValueToRelationReq;
class S2SUpdateStrValueToRelationReqDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateStrValueToRelationReqDefaultTypeInternal _S2SUpdateStrValueToRelationReq_default_instance_;
class S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse;
class S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUseDefaultTypeInternal;
LIBPROTOC_EXPORT extern S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUseDefaultTypeInternal _S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse_default_instance_;
}  // namespace KFMsg
namespace google {
namespace protobuf {
template<> LIBPROTOC_EXPORT ::KFMsg::PBMail* Arena::CreateMaybeMessage<::KFMsg::PBMail>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBMail_DataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBMail_DataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRelation* Arena::CreateMaybeMessage<::KFMsg::PBRelation>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRelation_BasicdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBRelation_BasicdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::PBRelation_RelationdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::PBRelation_RelationdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddGateToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddGateToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddMailReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddRelationToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SAddRelationToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SAddRelationToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SAddRelationToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SApplyAddRelationToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SApplyAddRelationToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SApplyAddRelationToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SApplyAddRelationToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToGateReq* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToGateReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToServerReq* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToServerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToWorldAck* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToWorldAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SBroadcastToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SBroadcastToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SClearOnlineToBasicReq* Arena::CreateMaybeMessage<::KFMsg::S2SClearOnlineToBasicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SConnectToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SConnectToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDelRelationInviteToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SDelRelationInviteToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDelRelationToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SDelRelationToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDelRelationToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SDelRelationToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SDisconnectToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SDisconnectToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SEnterToGateAck* Arena::CreateMaybeMessage<::KFMsg::S2SEnterToGateAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SKickPlayerToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SKickPlayerToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SKickPlayerToGateReq* Arena::CreateMaybeMessage<::KFMsg::S2SKickPlayerToGateReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLeaveToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SLeaveToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoadPlayerToDataReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoadPlayerToDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoadPlayerToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoadPlayerToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToGateAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToGateAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToLoginAck* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToLoginAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToLoginReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToLoginReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLoginToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SLoginToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SLogoutToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SLogoutToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SNewPlayerMailReq* Arena::CreateMaybeMessage<::KFMsg::S2SNewPlayerMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SNoticeNewMailReq* Arena::CreateMaybeMessage<::KFMsg::S2SNoticeNewMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SNoticeRankWorkerReq* Arena::CreateMaybeMessage<::KFMsg::S2SNoticeRankWorkerReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerEnterToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerEnterToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SPlayerLeaveToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SPlayerLeaveToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryAttributeToBasicReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryAttributeToBasicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryAttributeToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryAttributeToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryFriendRankListReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryFriendRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryMailAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryMailAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryMailReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryMailReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryPlayerToDataReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryPlayerToDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryPlayerToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryPlayerToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRankListReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRankListReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRelationInviteToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRelationInviteToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRelationInviteToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRelationInviteToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRelationToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRelationToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SQueryRelationToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SQueryRelationToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SReLoginToGameReq* Arena::CreateMaybeMessage<::KFMsg::S2SReLoginToGameReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SReLoginToGateAck* Arena::CreateMaybeMessage<::KFMsg::S2SReLoginToGateAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRefuseRelationToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SRefuseRelationToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SRemoveGateToWorldReq* Arena::CreateMaybeMessage<::KFMsg::S2SRemoveGateToWorldReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSavePlayerToDataReq* Arena::CreateMaybeMessage<::KFMsg::S2SSavePlayerToDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSavePlayerToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SSavePlayerToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSetPlayerNameToBasicReq* Arena::CreateMaybeMessage<::KFMsg::S2SSetPlayerNameToBasicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSetPlayerNameToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SSetPlayerNameToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSyncAddDataFromServer* Arena::CreateMaybeMessage<::KFMsg::S2SSyncAddDataFromServer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSyncRefreshRank* Arena::CreateMaybeMessage<::KFMsg::S2SSyncRefreshRank>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSyncRemoveDataFromServer* Arena::CreateMaybeMessage<::KFMsg::S2SSyncRemoveDataFromServer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SSyncUpdateDataFromServer* Arena::CreateMaybeMessage<::KFMsg::S2SSyncUpdateDataFromServer>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamAgreeToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamAgreeToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamCreateToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamCreateToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamIntValueToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamIntValueToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamJoinFailedToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamJoinFailedToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamJoinToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2STeamJoinToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamKickToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamKickToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamLeaveToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2STeamLeaveToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamLeaveToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamLeaveToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamMemberIntValueToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamMemberIntValueToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamMemberStrValueToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamMemberStrValueToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamOnlineQueryToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2STeamOnlineQueryToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamOnlineQueryToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamOnlineQueryToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamStrValueToTeamReq* Arena::CreateMaybeMessage<::KFMsg::S2STeamStrValueToTeamReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamTellApplyToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2STeamTellApplyToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2STeamTellInviteToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2STeamTellInviteToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateFriendLinessToGameAck* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateFriendLinessToGameAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateFriendLinessToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateFriendLinessToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateIntValueToBasicReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateIntValueToBasicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateIntValueToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateIntValueToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateMailStatusAck* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateMailStatusAck>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateMailStatusReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateMailStatusReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateRankDataReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateRankDataReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateStrValueToBasicReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateStrValueToBasicReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateStrValueToRelationReq* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateStrValueToRelationReq>(Arena*);
template<> LIBPROTOC_EXPORT ::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse* Arena::CreateMaybeMessage<::KFMsg::S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace KFMsg {

enum FrameServerProtocol {
  S2S_FRAME_SERVER_PROTOCOL_BEGIN = 0,
  S2S_ADD_GATE_TO_WORLD_REQ = 20002,
  S2S_REMOVE_GATE_TO_WORLD_REQ = 20003,
  S2S_LOGIN_TO_LOGIN_REQ = 20101,
  S2S_LOGIN_TO_GATE_ACK = 20102,
  S2S_LOGIN_TO_WORLD_REQ = 20103,
  S2S_LOGIN_TO_LOGIN_ACK = 20104,
  S2S_LOGIN_TO_GAME_REQ = 20105,
  S2S_LOGOUT_TO_GAME_REQ = 20106,
  S2S_DISCONNECT_TO_GAME_REQ = 20107,
  S2S_LEAVE_TO_GAME_REQ = 20108,
  S2S_ENTER_TO_GATE_ACK = 20109,
  S2S_RELOGIN_TO_GAME_REQ = 20110,
  S2S_RELOGIN_TO_GATE_ACK = 20111,
  S2S_CONNECT_TO_GAME_REQ = 20112,
  S2S_PLAYER_ENTER_TO_WORLD_REQ = 20202,
  S2S_PLAYER_LEAVE_TO_WORLD_REQ = 20203,
  S2S_KICK_PLAYER_TO_GAME_REQ = 20204,
  S2S_KICK_PLAYER_TO_GATE_REQ = 20205,
  S2S_BROADCAST_TO_GAME_REQ = 20301,
  S2S_BROADCAST_TO_GAME_ACK = 20302,
  S2S_BROADCAST_TO_WORLD_REQ = 20303,
  S2S_BROADCAST_TO_WORLD_ACK = 20304,
  S2S_BROADCAST_TO_GATE_REQ = 20305,
  S2S_BROADCAST_TO_SERVER_REQ = 20306,
  S2S_LOAD_PLAYER_TO_DATA_REQ = 20401,
  S2S_LOAD_PLAYER_TO_GAME_ACK = 20402,
  S2S_SAVE_PLAYER_TO_DATA_REQ = 20403,
  S2S_SAVE_PLAYER_TO_GAME_ACK = 20404,
  S2S_QUERY_PLAYER_TO_DATA_REQ = 20405,
  S2S_QUERY_PLAYER_TO_GAME_ACK = 20406,
  S2S_SYNC_UPDATE_DATA_FROM_SERVER = 20407,
  S2S_SYNC_ADD_DATA_FROM_SERVER = 20408,
  S2S_SYNC_REMOVE_DATA_FROM_SERVER = 20409,
  S2S_NEW_PLAYER_MAIL_REQ = 20501,
  S2S_QUERY_MAIL_REQ = 20502,
  S2S_QUERY_MAIL_ACK = 20503,
  S2S_ADD_MAIL_REQ = 20504,
  S2S_NOTICE_NEW_MAIL_REQ = 20505,
  S2S_UPDATE_MAIL_STATUS_REQ = 20506,
  S2S_UPDATE_MAIL_STATUS_ACK = 20507,
  S2S_NOTICE_RANK_WORKER_REQ = 20601,
  S2S_SYNC_REFRESH_RANK = 20602,
  S2S_UPDATE_RANK_DATA_REQ = 20603,
  S2S_QUERY_RANK_LIST_REQ = 20604,
  S2S_QUERY_FRIEND_RANK_LIST_REQ = 20605,
  S2S_UPDATE_INT_VALUE_TO_BASIC_REQ = 20701,
  S2S_UPDATE_STR_VALUE_TO_BASIC_REQ = 20702,
  S2S_QUERY_ATTRIBUTE_TO_BASIC_REQ = 20703,
  S2S_QUERY_ATTRIBUTE_TO_GAME_ACK = 20704,
  S2S_CLEAR_ONLINE_TO_BASIC_REQ = 20705,
  S2S_SET_PLAYER_NAME_TO_BASIC_REQ = 20706,
  S2S_SET_PLAYER_NAME_TO_GAME_ACK = 20707,
  S2S_QUERY_RELATION_TO_RELATION_REQ = 20801,
  S2S_QUERY_RELATION_TO_GAME_ACK = 20802,
  S2S_QUERY_RELATION_INVITE_TO_RELATION_REQ = 20803,
  S2S_QUERY_RELATION_INVITE_TO_GAME_ACK = 20804,
  S2S_UPDATE_INT_VALUE_TO_RELATION_REQ = 20805,
  S2S_UPDATE_STR_VALUE_TO_RELATION_REQ = 20806,
  S2S_APPLY_ADD_RELATION_TO_RELATION_REQ = 20807,
  S2S_APPLY_ADD_RELATION_TO_GAME_ACK = 20808,
  S2S_DEL_RELATION_INVITE_TO_RELATION_REQ = 20809,
  S2S_ADD_RELATION_TO_RELATION_REQ = 20810,
  S2S_ADD_RELATION_TO_GAME_ACK = 20811,
  S2S_DEL_RELATION_TO_RELATION_REQ = 20812,
  S2S_DEL_RELATION_TO_GAME_ACK = 20813,
  S2S_UPDATE_FRIENDLINESS_TO_RELATION_REQ = 20814,
  S2S_UPDATE_FRIENDLINESS_TO_GAME_ACK = 20815,
  S2S_REFUSE_RELATION_TO_RELATION_REQ = 20816,
  S2S_TEAM_CREATE_TO_TEAM_REQ = 20901,
  S2S_TEAM_JON_TO_GAME_ACK = 20902,
  S2S_TEAM_JION_FAILED_TO_TEAM_REQ = 20903,
  S2S_TEAM_ONLINE_QUERY_TO_TEAM_REQ = 20904,
  S2S_TEAM_ONLINE_QUERY_TO_GAME_ACK = 20905,
  S2S_TEAM_INT_VALUE_TO_TEAM_REQ = 20906,
  S2S_TEAM_STR_VALUE_TO_TEAM_REQ = 20907,
  S2S_TEAM_MEMBER_INT_VALUE_TO_TEAM_REQ = 20908,
  S2S_TEAM_MEMBER_STR_VALUE_TO_TEAM_REQ = 20909,
  S2S_TEAM_LEAVE_TO_TEAM_REQ = 20910,
  S2S_TEAM_KICK_TO_TEAM_REQ = 20911,
  S2S_TEAM_LEAVE_TO_GAME_ACK = 20912,
  S2S_TEAM_TELL_INVITE_TO_GAME_ACK = 20913,
  S2S_TEAM_TELL_APPLY_TO_GAME_ACK = 20914,
  S2S_TEAM_AGREE_TO_TEAM_REQ = 20915,
  FrameServerProtocol_INT_MIN_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32min,
  FrameServerProtocol_INT_MAX_SENTINEL_DO_NOT_USE_ = ::google::protobuf::kint32max
};
LIBPROTOC_EXPORT bool FrameServerProtocol_IsValid(int value);
const FrameServerProtocol FrameServerProtocol_MIN = S2S_FRAME_SERVER_PROTOCOL_BEGIN;
const FrameServerProtocol FrameServerProtocol_MAX = S2S_TEAM_AGREE_TO_TEAM_REQ;
const int FrameServerProtocol_ARRAYSIZE = FrameServerProtocol_MAX + 1;

LIBPROTOC_EXPORT const ::google::protobuf::EnumDescriptor* FrameServerProtocol_descriptor();
inline const ::std::string& FrameServerProtocol_Name(FrameServerProtocol value) {
  return ::google::protobuf::internal::NameOfEnum(
    FrameServerProtocol_descriptor(), value);
}
inline bool FrameServerProtocol_Parse(
    const ::std::string& name, FrameServerProtocol* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FrameServerProtocol>(
    FrameServerProtocol_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOC_EXPORT S2SAddGateToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddGateToWorldReq) */ {
 public:
  S2SAddGateToWorldReq();
  virtual ~S2SAddGateToWorldReq();

  S2SAddGateToWorldReq(const S2SAddGateToWorldReq& from);

  inline S2SAddGateToWorldReq& operator=(const S2SAddGateToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddGateToWorldReq(S2SAddGateToWorldReq&& from) noexcept
    : S2SAddGateToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SAddGateToWorldReq& operator=(S2SAddGateToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddGateToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddGateToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddGateToWorldReq*>(
               &_S2SAddGateToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(S2SAddGateToWorldReq* other);
  friend void swap(S2SAddGateToWorldReq& a, S2SAddGateToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddGateToWorldReq* New() const final {
    return CreateMaybeMessage<S2SAddGateToWorldReq>(NULL);
  }

  S2SAddGateToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddGateToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddGateToWorldReq& from);
  void MergeFrom(const S2SAddGateToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddGateToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 gateid = 2;
  int gateid_size() const;
  void clear_gateid();
  static const int kGateidFieldNumber = 2;
  ::google::protobuf::uint64 gateid(int index) const;
  void set_gateid(int index, ::google::protobuf::uint64 value);
  void add_gateid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      gateid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_gateid();

  // uint64 gameid = 1;
  void clear_gameid();
  static const int kGameidFieldNumber = 1;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddGateToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > gateid_;
  mutable int _gateid_cached_byte_size_;
  ::google::protobuf::uint64 gameid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRemoveGateToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRemoveGateToWorldReq) */ {
 public:
  S2SRemoveGateToWorldReq();
  virtual ~S2SRemoveGateToWorldReq();

  S2SRemoveGateToWorldReq(const S2SRemoveGateToWorldReq& from);

  inline S2SRemoveGateToWorldReq& operator=(const S2SRemoveGateToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRemoveGateToWorldReq(S2SRemoveGateToWorldReq&& from) noexcept
    : S2SRemoveGateToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SRemoveGateToWorldReq& operator=(S2SRemoveGateToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRemoveGateToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRemoveGateToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SRemoveGateToWorldReq*>(
               &_S2SRemoveGateToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(S2SRemoveGateToWorldReq* other);
  friend void swap(S2SRemoveGateToWorldReq& a, S2SRemoveGateToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRemoveGateToWorldReq* New() const final {
    return CreateMaybeMessage<S2SRemoveGateToWorldReq>(NULL);
  }

  S2SRemoveGateToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRemoveGateToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRemoveGateToWorldReq& from);
  void MergeFrom(const S2SRemoveGateToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRemoveGateToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gameid = 1;
  void clear_gameid();
  static const int kGameidFieldNumber = 1;
  ::google::protobuf::uint64 gameid() const;
  void set_gameid(::google::protobuf::uint64 value);

  // uint64 gateid = 2;
  void clear_gateid();
  static const int kGateidFieldNumber = 2;
  ::google::protobuf::uint64 gateid() const;
  void set_gateid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRemoveGateToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gameid_;
  ::google::protobuf::uint64 gateid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToLoginReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToLoginReq) */ {
 public:
  S2SLoginToLoginReq();
  virtual ~S2SLoginToLoginReq();

  S2SLoginToLoginReq(const S2SLoginToLoginReq& from);

  inline S2SLoginToLoginReq& operator=(const S2SLoginToLoginReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToLoginReq(S2SLoginToLoginReq&& from) noexcept
    : S2SLoginToLoginReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginToLoginReq& operator=(S2SLoginToLoginReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToLoginReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToLoginReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToLoginReq*>(
               &_S2SLoginToLoginReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(S2SLoginToLoginReq* other);
  friend void swap(S2SLoginToLoginReq& a, S2SLoginToLoginReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToLoginReq* New() const final {
    return CreateMaybeMessage<S2SLoginToLoginReq>(NULL);
  }

  S2SLoginToLoginReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToLoginReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToLoginReq& from);
  void MergeFrom(const S2SLoginToLoginReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToLoginReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes ip = 1;
  void clear_ip();
  static const int kIpFieldNumber = 1;
  const ::std::string& ip() const;
  void set_ip(const ::std::string& value);
  #if LANG_CXX11
  void set_ip(::std::string&& value);
  #endif
  void set_ip(const char* value);
  void set_ip(const void* value, size_t size);
  ::std::string* mutable_ip();
  ::std::string* release_ip();
  void set_allocated_ip(::std::string* ip);

  // bytes token = 2;
  void clear_token();
  static const int kTokenFieldNumber = 2;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 accountid = 3;
  void clear_accountid();
  static const int kAccountidFieldNumber = 3;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 sessionid = 4;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 4;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToLoginReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ip_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToGateAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToGateAck) */ {
 public:
  S2SLoginToGateAck();
  virtual ~S2SLoginToGateAck();

  S2SLoginToGateAck(const S2SLoginToGateAck& from);

  inline S2SLoginToGateAck& operator=(const S2SLoginToGateAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToGateAck(S2SLoginToGateAck&& from) noexcept
    : S2SLoginToGateAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginToGateAck& operator=(S2SLoginToGateAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToGateAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToGateAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToGateAck*>(
               &_S2SLoginToGateAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(S2SLoginToGateAck* other);
  friend void swap(S2SLoginToGateAck& a, S2SLoginToGateAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToGateAck* New() const final {
    return CreateMaybeMessage<S2SLoginToGateAck>(NULL);
  }

  S2SLoginToGateAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToGateAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToGateAck& from);
  void MergeFrom(const S2SLoginToGateAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToGateAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 sessionid = 3;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint64 bantime = 4;
  void clear_bantime();
  static const int kBantimeFieldNumber = 4;
  ::google::protobuf::uint64 bantime() const;
  void set_bantime(::google::protobuf::uint64 value);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToGateAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint64 bantime_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToWorldReq) */ {
 public:
  S2SLoginToWorldReq();
  virtual ~S2SLoginToWorldReq();

  S2SLoginToWorldReq(const S2SLoginToWorldReq& from);

  inline S2SLoginToWorldReq& operator=(const S2SLoginToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToWorldReq(S2SLoginToWorldReq&& from) noexcept
    : S2SLoginToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginToWorldReq& operator=(S2SLoginToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToWorldReq*>(
               &_S2SLoginToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(S2SLoginToWorldReq* other);
  friend void swap(S2SLoginToWorldReq& a, S2SLoginToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToWorldReq* New() const final {
    return CreateMaybeMessage<S2SLoginToWorldReq>(NULL);
  }

  S2SLoginToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToWorldReq& from);
  void MergeFrom(const S2SLoginToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToLoginAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToLoginAck) */ {
 public:
  S2SLoginToLoginAck();
  virtual ~S2SLoginToLoginAck();

  S2SLoginToLoginAck(const S2SLoginToLoginAck& from);

  inline S2SLoginToLoginAck& operator=(const S2SLoginToLoginAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToLoginAck(S2SLoginToLoginAck&& from) noexcept
    : S2SLoginToLoginAck() {
    *this = ::std::move(from);
  }

  inline S2SLoginToLoginAck& operator=(S2SLoginToLoginAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToLoginAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToLoginAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToLoginAck*>(
               &_S2SLoginToLoginAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(S2SLoginToLoginAck* other);
  friend void swap(S2SLoginToLoginAck& a, S2SLoginToLoginAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToLoginAck* New() const final {
    return CreateMaybeMessage<S2SLoginToLoginAck>(NULL);
  }

  S2SLoginToLoginAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToLoginAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToLoginAck& from);
  void MergeFrom(const S2SLoginToLoginAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToLoginAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 gateid = 2;
  void clear_gateid();
  static const int kGateidFieldNumber = 2;
  ::google::protobuf::uint64 gateid() const;
  void set_gateid(::google::protobuf::uint64 value);

  // uint64 accountid = 3;
  void clear_accountid();
  static const int kAccountidFieldNumber = 3;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // uint64 sessionid = 4;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 4;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToLoginAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 gateid_;
  ::google::protobuf::uint64 accountid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoginToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoginToGameReq) */ {
 public:
  S2SLoginToGameReq();
  virtual ~S2SLoginToGameReq();

  S2SLoginToGameReq(const S2SLoginToGameReq& from);

  inline S2SLoginToGameReq& operator=(const S2SLoginToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoginToGameReq(S2SLoginToGameReq&& from) noexcept
    : S2SLoginToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SLoginToGameReq& operator=(S2SLoginToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoginToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoginToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoginToGameReq*>(
               &_S2SLoginToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  void Swap(S2SLoginToGameReq* other);
  friend void swap(S2SLoginToGameReq& a, S2SLoginToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoginToGameReq* New() const final {
    return CreateMaybeMessage<S2SLoginToGameReq>(NULL);
  }

  S2SLoginToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoginToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoginToGameReq& from);
  void MergeFrom(const S2SLoginToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoginToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoginToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SEnterToGateAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SEnterToGateAck) */ {
 public:
  S2SEnterToGateAck();
  virtual ~S2SEnterToGateAck();

  S2SEnterToGateAck(const S2SEnterToGateAck& from);

  inline S2SEnterToGateAck& operator=(const S2SEnterToGateAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SEnterToGateAck(S2SEnterToGateAck&& from) noexcept
    : S2SEnterToGateAck() {
    *this = ::std::move(from);
  }

  inline S2SEnterToGateAck& operator=(S2SEnterToGateAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SEnterToGateAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SEnterToGateAck* internal_default_instance() {
    return reinterpret_cast<const S2SEnterToGateAck*>(
               &_S2SEnterToGateAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  void Swap(S2SEnterToGateAck* other);
  friend void swap(S2SEnterToGateAck& a, S2SEnterToGateAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SEnterToGateAck* New() const final {
    return CreateMaybeMessage<S2SEnterToGateAck>(NULL);
  }

  S2SEnterToGateAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SEnterToGateAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SEnterToGateAck& from);
  void MergeFrom(const S2SEnterToGateAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SEnterToGateAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // .KFMsg.PBObject playerdata = 2;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint64 servertime = 3;
  void clear_servertime();
  static const int kServertimeFieldNumber = 3;
  ::google::protobuf::uint64 servertime() const;
  void set_servertime(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SEnterToGateAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint64 servertime_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLogoutToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLogoutToGameReq) */ {
 public:
  S2SLogoutToGameReq();
  virtual ~S2SLogoutToGameReq();

  S2SLogoutToGameReq(const S2SLogoutToGameReq& from);

  inline S2SLogoutToGameReq& operator=(const S2SLogoutToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLogoutToGameReq(S2SLogoutToGameReq&& from) noexcept
    : S2SLogoutToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SLogoutToGameReq& operator=(S2SLogoutToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLogoutToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLogoutToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SLogoutToGameReq*>(
               &_S2SLogoutToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  void Swap(S2SLogoutToGameReq* other);
  friend void swap(S2SLogoutToGameReq& a, S2SLogoutToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLogoutToGameReq* New() const final {
    return CreateMaybeMessage<S2SLogoutToGameReq>(NULL);
  }

  S2SLogoutToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLogoutToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLogoutToGameReq& from);
  void MergeFrom(const S2SLogoutToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLogoutToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLogoutToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDisconnectToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDisconnectToGameReq) */ {
 public:
  S2SDisconnectToGameReq();
  virtual ~S2SDisconnectToGameReq();

  S2SDisconnectToGameReq(const S2SDisconnectToGameReq& from);

  inline S2SDisconnectToGameReq& operator=(const S2SDisconnectToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDisconnectToGameReq(S2SDisconnectToGameReq&& from) noexcept
    : S2SDisconnectToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SDisconnectToGameReq& operator=(S2SDisconnectToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDisconnectToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDisconnectToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SDisconnectToGameReq*>(
               &_S2SDisconnectToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  void Swap(S2SDisconnectToGameReq* other);
  friend void swap(S2SDisconnectToGameReq& a, S2SDisconnectToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDisconnectToGameReq* New() const final {
    return CreateMaybeMessage<S2SDisconnectToGameReq>(NULL);
  }

  S2SDisconnectToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDisconnectToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDisconnectToGameReq& from);
  void MergeFrom(const S2SDisconnectToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDisconnectToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDisconnectToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLeaveToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLeaveToGameReq) */ {
 public:
  S2SLeaveToGameReq();
  virtual ~S2SLeaveToGameReq();

  S2SLeaveToGameReq(const S2SLeaveToGameReq& from);

  inline S2SLeaveToGameReq& operator=(const S2SLeaveToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLeaveToGameReq(S2SLeaveToGameReq&& from) noexcept
    : S2SLeaveToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SLeaveToGameReq& operator=(S2SLeaveToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLeaveToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLeaveToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SLeaveToGameReq*>(
               &_S2SLeaveToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  void Swap(S2SLeaveToGameReq* other);
  friend void swap(S2SLeaveToGameReq& a, S2SLeaveToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLeaveToGameReq* New() const final {
    return CreateMaybeMessage<S2SLeaveToGameReq>(NULL);
  }

  S2SLeaveToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLeaveToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLeaveToGameReq& from);
  void MergeFrom(const S2SLeaveToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLeaveToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLeaveToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SConnectToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SConnectToGameReq) */ {
 public:
  S2SConnectToGameReq();
  virtual ~S2SConnectToGameReq();

  S2SConnectToGameReq(const S2SConnectToGameReq& from);

  inline S2SConnectToGameReq& operator=(const S2SConnectToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SConnectToGameReq(S2SConnectToGameReq&& from) noexcept
    : S2SConnectToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SConnectToGameReq& operator=(S2SConnectToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SConnectToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SConnectToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SConnectToGameReq*>(
               &_S2SConnectToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  void Swap(S2SConnectToGameReq* other);
  friend void swap(S2SConnectToGameReq& a, S2SConnectToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SConnectToGameReq* New() const final {
    return CreateMaybeMessage<S2SConnectToGameReq>(NULL);
  }

  S2SConnectToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SConnectToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SConnectToGameReq& from);
  void MergeFrom(const S2SConnectToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SConnectToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBLoginData pblogin = 1;
  int pblogin_size() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  ::KFMsg::PBLoginData* mutable_pblogin(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBLoginData >*
      mutable_pblogin();
  const ::KFMsg::PBLoginData& pblogin(int index) const;
  ::KFMsg::PBLoginData* add_pblogin();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBLoginData >&
      pblogin() const;

  // @@protoc_insertion_point(class_scope:KFMsg.S2SConnectToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBLoginData > pblogin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SReLoginToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SReLoginToGameReq) */ {
 public:
  S2SReLoginToGameReq();
  virtual ~S2SReLoginToGameReq();

  S2SReLoginToGameReq(const S2SReLoginToGameReq& from);

  inline S2SReLoginToGameReq& operator=(const S2SReLoginToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SReLoginToGameReq(S2SReLoginToGameReq&& from) noexcept
    : S2SReLoginToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SReLoginToGameReq& operator=(S2SReLoginToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SReLoginToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SReLoginToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SReLoginToGameReq*>(
               &_S2SReLoginToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  void Swap(S2SReLoginToGameReq* other);
  friend void swap(S2SReLoginToGameReq& a, S2SReLoginToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SReLoginToGameReq* New() const final {
    return CreateMaybeMessage<S2SReLoginToGameReq>(NULL);
  }

  S2SReLoginToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SReLoginToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SReLoginToGameReq& from);
  void MergeFrom(const S2SReLoginToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SReLoginToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 sessionid = 3;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint64 accountid = 4;
  void clear_accountid();
  static const int kAccountidFieldNumber = 4;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SReLoginToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SReLoginToGateAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SReLoginToGateAck) */ {
 public:
  S2SReLoginToGateAck();
  virtual ~S2SReLoginToGateAck();

  S2SReLoginToGateAck(const S2SReLoginToGateAck& from);

  inline S2SReLoginToGateAck& operator=(const S2SReLoginToGateAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SReLoginToGateAck(S2SReLoginToGateAck&& from) noexcept
    : S2SReLoginToGateAck() {
    *this = ::std::move(from);
  }

  inline S2SReLoginToGateAck& operator=(S2SReLoginToGateAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SReLoginToGateAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SReLoginToGateAck* internal_default_instance() {
    return reinterpret_cast<const S2SReLoginToGateAck*>(
               &_S2SReLoginToGateAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    13;

  void Swap(S2SReLoginToGateAck* other);
  friend void swap(S2SReLoginToGateAck& a, S2SReLoginToGateAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SReLoginToGateAck* New() const final {
    return CreateMaybeMessage<S2SReLoginToGateAck>(NULL);
  }

  S2SReLoginToGateAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SReLoginToGateAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SReLoginToGateAck& from);
  void MergeFrom(const S2SReLoginToGateAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SReLoginToGateAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes token = 1;
  void clear_token();
  static const int kTokenFieldNumber = 1;
  const ::std::string& token() const;
  void set_token(const ::std::string& value);
  #if LANG_CXX11
  void set_token(::std::string&& value);
  #endif
  void set_token(const char* value);
  void set_token(const void* value, size_t size);
  ::std::string* mutable_token();
  ::std::string* release_token();
  void set_allocated_token(::std::string* token);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 sessionid = 3;
  void clear_sessionid();
  static const int kSessionidFieldNumber = 3;
  ::google::protobuf::uint64 sessionid() const;
  void set_sessionid(::google::protobuf::uint64 value);

  // uint64 accountid = 4;
  void clear_accountid();
  static const int kAccountidFieldNumber = 4;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SReLoginToGateAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr token_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 sessionid_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoadPlayerToDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoadPlayerToDataReq) */ {
 public:
  S2SLoadPlayerToDataReq();
  virtual ~S2SLoadPlayerToDataReq();

  S2SLoadPlayerToDataReq(const S2SLoadPlayerToDataReq& from);

  inline S2SLoadPlayerToDataReq& operator=(const S2SLoadPlayerToDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoadPlayerToDataReq(S2SLoadPlayerToDataReq&& from) noexcept
    : S2SLoadPlayerToDataReq() {
    *this = ::std::move(from);
  }

  inline S2SLoadPlayerToDataReq& operator=(S2SLoadPlayerToDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoadPlayerToDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoadPlayerToDataReq* internal_default_instance() {
    return reinterpret_cast<const S2SLoadPlayerToDataReq*>(
               &_S2SLoadPlayerToDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    14;

  void Swap(S2SLoadPlayerToDataReq* other);
  friend void swap(S2SLoadPlayerToDataReq& a, S2SLoadPlayerToDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoadPlayerToDataReq* New() const final {
    return CreateMaybeMessage<S2SLoadPlayerToDataReq>(NULL);
  }

  S2SLoadPlayerToDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoadPlayerToDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoadPlayerToDataReq& from);
  void MergeFrom(const S2SLoadPlayerToDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoadPlayerToDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 1;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 1;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoadPlayerToDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SLoadPlayerToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SLoadPlayerToGameAck) */ {
 public:
  S2SLoadPlayerToGameAck();
  virtual ~S2SLoadPlayerToGameAck();

  S2SLoadPlayerToGameAck(const S2SLoadPlayerToGameAck& from);

  inline S2SLoadPlayerToGameAck& operator=(const S2SLoadPlayerToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SLoadPlayerToGameAck(S2SLoadPlayerToGameAck&& from) noexcept
    : S2SLoadPlayerToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SLoadPlayerToGameAck& operator=(S2SLoadPlayerToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SLoadPlayerToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SLoadPlayerToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SLoadPlayerToGameAck*>(
               &_S2SLoadPlayerToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    15;

  void Swap(S2SLoadPlayerToGameAck* other);
  friend void swap(S2SLoadPlayerToGameAck& a, S2SLoadPlayerToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SLoadPlayerToGameAck* New() const final {
    return CreateMaybeMessage<S2SLoadPlayerToGameAck>(NULL);
  }

  S2SLoadPlayerToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SLoadPlayerToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SLoadPlayerToGameAck& from);
  void MergeFrom(const S2SLoadPlayerToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SLoadPlayerToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBLoginData pblogin = 2;
  bool has_pblogin() const;
  void clear_pblogin();
  static const int kPbloginFieldNumber = 2;
  private:
  const ::KFMsg::PBLoginData& _internal_pblogin() const;
  public:
  const ::KFMsg::PBLoginData& pblogin() const;
  ::KFMsg::PBLoginData* release_pblogin();
  ::KFMsg::PBLoginData* mutable_pblogin();
  void set_allocated_pblogin(::KFMsg::PBLoginData* pblogin);

  // .KFMsg.PBObject playerdata = 3;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 3;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SLoadPlayerToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBLoginData* pblogin_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSavePlayerToDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSavePlayerToDataReq) */ {
 public:
  S2SSavePlayerToDataReq();
  virtual ~S2SSavePlayerToDataReq();

  S2SSavePlayerToDataReq(const S2SSavePlayerToDataReq& from);

  inline S2SSavePlayerToDataReq& operator=(const S2SSavePlayerToDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSavePlayerToDataReq(S2SSavePlayerToDataReq&& from) noexcept
    : S2SSavePlayerToDataReq() {
    *this = ::std::move(from);
  }

  inline S2SSavePlayerToDataReq& operator=(S2SSavePlayerToDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSavePlayerToDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSavePlayerToDataReq* internal_default_instance() {
    return reinterpret_cast<const S2SSavePlayerToDataReq*>(
               &_S2SSavePlayerToDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    16;

  void Swap(S2SSavePlayerToDataReq* other);
  friend void swap(S2SSavePlayerToDataReq& a, S2SSavePlayerToDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSavePlayerToDataReq* New() const final {
    return CreateMaybeMessage<S2SSavePlayerToDataReq>(NULL);
  }

  S2SSavePlayerToDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSavePlayerToDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSavePlayerToDataReq& from);
  void MergeFrom(const S2SSavePlayerToDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSavePlayerToDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject data = 4;
  bool has_data() const;
  void clear_data();
  static const int kDataFieldNumber = 4;
  private:
  const ::KFMsg::PBObject& _internal_data() const;
  public:
  const ::KFMsg::PBObject& data() const;
  ::KFMsg::PBObject* release_data();
  ::KFMsg::PBObject* mutable_data();
  void set_allocated_data(::KFMsg::PBObject* data);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 zoneid = 2;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // uint32 flag = 3;
  void clear_flag();
  static const int kFlagFieldNumber = 3;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSavePlayerToDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* data_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSavePlayerToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSavePlayerToGameAck) */ {
 public:
  S2SSavePlayerToGameAck();
  virtual ~S2SSavePlayerToGameAck();

  S2SSavePlayerToGameAck(const S2SSavePlayerToGameAck& from);

  inline S2SSavePlayerToGameAck& operator=(const S2SSavePlayerToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSavePlayerToGameAck(S2SSavePlayerToGameAck&& from) noexcept
    : S2SSavePlayerToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SSavePlayerToGameAck& operator=(S2SSavePlayerToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSavePlayerToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSavePlayerToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SSavePlayerToGameAck*>(
               &_S2SSavePlayerToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    17;

  void Swap(S2SSavePlayerToGameAck* other);
  friend void swap(S2SSavePlayerToGameAck& a, S2SSavePlayerToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSavePlayerToGameAck* New() const final {
    return CreateMaybeMessage<S2SSavePlayerToGameAck>(NULL);
  }

  S2SSavePlayerToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSavePlayerToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSavePlayerToGameAck& from);
  void MergeFrom(const S2SSavePlayerToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSavePlayerToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSavePlayerToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryPlayerToDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryPlayerToDataReq) */ {
 public:
  S2SQueryPlayerToDataReq();
  virtual ~S2SQueryPlayerToDataReq();

  S2SQueryPlayerToDataReq(const S2SQueryPlayerToDataReq& from);

  inline S2SQueryPlayerToDataReq& operator=(const S2SQueryPlayerToDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryPlayerToDataReq(S2SQueryPlayerToDataReq&& from) noexcept
    : S2SQueryPlayerToDataReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryPlayerToDataReq& operator=(S2SQueryPlayerToDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryPlayerToDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryPlayerToDataReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryPlayerToDataReq*>(
               &_S2SQueryPlayerToDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    18;

  void Swap(S2SQueryPlayerToDataReq* other);
  friend void swap(S2SQueryPlayerToDataReq& a, S2SQueryPlayerToDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryPlayerToDataReq* New() const final {
    return CreateMaybeMessage<S2SQueryPlayerToDataReq>(NULL);
  }

  S2SQueryPlayerToDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryPlayerToDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryPlayerToDataReq& from);
  void MergeFrom(const S2SQueryPlayerToDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryPlayerToDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 zoneid = 2;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryPlayerToDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryPlayerToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryPlayerToGameAck) */ {
 public:
  S2SQueryPlayerToGameAck();
  virtual ~S2SQueryPlayerToGameAck();

  S2SQueryPlayerToGameAck(const S2SQueryPlayerToGameAck& from);

  inline S2SQueryPlayerToGameAck& operator=(const S2SQueryPlayerToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryPlayerToGameAck(S2SQueryPlayerToGameAck&& from) noexcept
    : S2SQueryPlayerToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryPlayerToGameAck& operator=(S2SQueryPlayerToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryPlayerToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryPlayerToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryPlayerToGameAck*>(
               &_S2SQueryPlayerToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    19;

  void Swap(S2SQueryPlayerToGameAck* other);
  friend void swap(S2SQueryPlayerToGameAck& a, S2SQueryPlayerToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryPlayerToGameAck* New() const final {
    return CreateMaybeMessage<S2SQueryPlayerToGameAck>(NULL);
  }

  S2SQueryPlayerToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryPlayerToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryPlayerToGameAck& from);
  void MergeFrom(const S2SQueryPlayerToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryPlayerToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject playerdata = 2;
  bool has_playerdata() const;
  void clear_playerdata();
  static const int kPlayerdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_playerdata() const;
  public:
  const ::KFMsg::PBObject& playerdata() const;
  ::KFMsg::PBObject* release_playerdata();
  ::KFMsg::PBObject* mutable_playerdata();
  void set_allocated_playerdata(::KFMsg::PBObject* playerdata);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryPlayerToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* playerdata_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSyncUpdateDataFromServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSyncUpdateDataFromServer) */ {
 public:
  S2SSyncUpdateDataFromServer();
  virtual ~S2SSyncUpdateDataFromServer();

  S2SSyncUpdateDataFromServer(const S2SSyncUpdateDataFromServer& from);

  inline S2SSyncUpdateDataFromServer& operator=(const S2SSyncUpdateDataFromServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSyncUpdateDataFromServer(S2SSyncUpdateDataFromServer&& from) noexcept
    : S2SSyncUpdateDataFromServer() {
    *this = ::std::move(from);
  }

  inline S2SSyncUpdateDataFromServer& operator=(S2SSyncUpdateDataFromServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSyncUpdateDataFromServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSyncUpdateDataFromServer* internal_default_instance() {
    return reinterpret_cast<const S2SSyncUpdateDataFromServer*>(
               &_S2SSyncUpdateDataFromServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    20;

  void Swap(S2SSyncUpdateDataFromServer* other);
  friend void swap(S2SSyncUpdateDataFromServer& a, S2SSyncUpdateDataFromServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSyncUpdateDataFromServer* New() const final {
    return CreateMaybeMessage<S2SSyncUpdateDataFromServer>(NULL);
  }

  S2SSyncUpdateDataFromServer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSyncUpdateDataFromServer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSyncUpdateDataFromServer& from);
  void MergeFrom(const S2SSyncUpdateDataFromServer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSyncUpdateDataFromServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data_name = 1;
  void clear_data_name();
  static const int kDataNameFieldNumber = 1;
  const ::std::string& data_name() const;
  void set_data_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_name(::std::string&& value);
  #endif
  void set_data_name(const char* value);
  void set_data_name(const void* value, size_t size);
  ::std::string* mutable_data_name();
  ::std::string* release_data_name();
  void set_allocated_data_name(::std::string* data_name);

  // .KFMsg.PBObject pbdata = 2;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSyncUpdateDataFromServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_name_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSyncAddDataFromServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSyncAddDataFromServer) */ {
 public:
  S2SSyncAddDataFromServer();
  virtual ~S2SSyncAddDataFromServer();

  S2SSyncAddDataFromServer(const S2SSyncAddDataFromServer& from);

  inline S2SSyncAddDataFromServer& operator=(const S2SSyncAddDataFromServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSyncAddDataFromServer(S2SSyncAddDataFromServer&& from) noexcept
    : S2SSyncAddDataFromServer() {
    *this = ::std::move(from);
  }

  inline S2SSyncAddDataFromServer& operator=(S2SSyncAddDataFromServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSyncAddDataFromServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSyncAddDataFromServer* internal_default_instance() {
    return reinterpret_cast<const S2SSyncAddDataFromServer*>(
               &_S2SSyncAddDataFromServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    21;

  void Swap(S2SSyncAddDataFromServer* other);
  friend void swap(S2SSyncAddDataFromServer& a, S2SSyncAddDataFromServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSyncAddDataFromServer* New() const final {
    return CreateMaybeMessage<S2SSyncAddDataFromServer>(NULL);
  }

  S2SSyncAddDataFromServer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSyncAddDataFromServer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSyncAddDataFromServer& from);
  void MergeFrom(const S2SSyncAddDataFromServer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSyncAddDataFromServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data_name = 1;
  void clear_data_name();
  static const int kDataNameFieldNumber = 1;
  const ::std::string& data_name() const;
  void set_data_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_name(::std::string&& value);
  #endif
  void set_data_name(const char* value);
  void set_data_name(const void* value, size_t size);
  ::std::string* mutable_data_name();
  ::std::string* release_data_name();
  void set_allocated_data_name(::std::string* data_name);

  // .KFMsg.PBObject pbdata = 2;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSyncAddDataFromServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_name_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSyncRemoveDataFromServer : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSyncRemoveDataFromServer) */ {
 public:
  S2SSyncRemoveDataFromServer();
  virtual ~S2SSyncRemoveDataFromServer();

  S2SSyncRemoveDataFromServer(const S2SSyncRemoveDataFromServer& from);

  inline S2SSyncRemoveDataFromServer& operator=(const S2SSyncRemoveDataFromServer& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSyncRemoveDataFromServer(S2SSyncRemoveDataFromServer&& from) noexcept
    : S2SSyncRemoveDataFromServer() {
    *this = ::std::move(from);
  }

  inline S2SSyncRemoveDataFromServer& operator=(S2SSyncRemoveDataFromServer&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSyncRemoveDataFromServer& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSyncRemoveDataFromServer* internal_default_instance() {
    return reinterpret_cast<const S2SSyncRemoveDataFromServer*>(
               &_S2SSyncRemoveDataFromServer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    22;

  void Swap(S2SSyncRemoveDataFromServer* other);
  friend void swap(S2SSyncRemoveDataFromServer& a, S2SSyncRemoveDataFromServer& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSyncRemoveDataFromServer* New() const final {
    return CreateMaybeMessage<S2SSyncRemoveDataFromServer>(NULL);
  }

  S2SSyncRemoveDataFromServer* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSyncRemoveDataFromServer>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSyncRemoveDataFromServer& from);
  void MergeFrom(const S2SSyncRemoveDataFromServer& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSyncRemoveDataFromServer* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes data_name = 1;
  void clear_data_name();
  static const int kDataNameFieldNumber = 1;
  const ::std::string& data_name() const;
  void set_data_name(const ::std::string& value);
  #if LANG_CXX11
  void set_data_name(::std::string&& value);
  #endif
  void set_data_name(const char* value);
  void set_data_name(const void* value, size_t size);
  ::std::string* mutable_data_name();
  ::std::string* release_data_name();
  void set_allocated_data_name(::std::string* data_name);

  // .KFMsg.PBObject pbdata = 2;
  bool has_pbdata() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbdata() const;
  public:
  const ::KFMsg::PBObject& pbdata() const;
  ::KFMsg::PBObject* release_pbdata();
  ::KFMsg::PBObject* mutable_pbdata();
  void set_allocated_pbdata(::KFMsg::PBObject* pbdata);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSyncRemoveDataFromServer)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr data_name_;
  ::KFMsg::PBObject* pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerEnterToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerEnterToWorldReq) */ {
 public:
  S2SPlayerEnterToWorldReq();
  virtual ~S2SPlayerEnterToWorldReq();

  S2SPlayerEnterToWorldReq(const S2SPlayerEnterToWorldReq& from);

  inline S2SPlayerEnterToWorldReq& operator=(const S2SPlayerEnterToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerEnterToWorldReq(S2SPlayerEnterToWorldReq&& from) noexcept
    : S2SPlayerEnterToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerEnterToWorldReq& operator=(S2SPlayerEnterToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerEnterToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerEnterToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerEnterToWorldReq*>(
               &_S2SPlayerEnterToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    23;

  void Swap(S2SPlayerEnterToWorldReq* other);
  friend void swap(S2SPlayerEnterToWorldReq& a, S2SPlayerEnterToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerEnterToWorldReq* New() const final {
    return CreateMaybeMessage<S2SPlayerEnterToWorldReq>(NULL);
  }

  S2SPlayerEnterToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerEnterToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerEnterToWorldReq& from);
  void MergeFrom(const S2SPlayerEnterToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerEnterToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerEnterToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SPlayerLeaveToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SPlayerLeaveToWorldReq) */ {
 public:
  S2SPlayerLeaveToWorldReq();
  virtual ~S2SPlayerLeaveToWorldReq();

  S2SPlayerLeaveToWorldReq(const S2SPlayerLeaveToWorldReq& from);

  inline S2SPlayerLeaveToWorldReq& operator=(const S2SPlayerLeaveToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SPlayerLeaveToWorldReq(S2SPlayerLeaveToWorldReq&& from) noexcept
    : S2SPlayerLeaveToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SPlayerLeaveToWorldReq& operator=(S2SPlayerLeaveToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SPlayerLeaveToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SPlayerLeaveToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SPlayerLeaveToWorldReq*>(
               &_S2SPlayerLeaveToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    24;

  void Swap(S2SPlayerLeaveToWorldReq* other);
  friend void swap(S2SPlayerLeaveToWorldReq& a, S2SPlayerLeaveToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SPlayerLeaveToWorldReq* New() const final {
    return CreateMaybeMessage<S2SPlayerLeaveToWorldReq>(NULL);
  }

  S2SPlayerLeaveToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SPlayerLeaveToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SPlayerLeaveToWorldReq& from);
  void MergeFrom(const S2SPlayerLeaveToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SPlayerLeaveToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 accountid = 2;
  void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  ::google::protobuf::uint64 accountid() const;
  void set_accountid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SPlayerLeaveToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 accountid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SKickPlayerToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SKickPlayerToGameReq) */ {
 public:
  S2SKickPlayerToGameReq();
  virtual ~S2SKickPlayerToGameReq();

  S2SKickPlayerToGameReq(const S2SKickPlayerToGameReq& from);

  inline S2SKickPlayerToGameReq& operator=(const S2SKickPlayerToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SKickPlayerToGameReq(S2SKickPlayerToGameReq&& from) noexcept
    : S2SKickPlayerToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SKickPlayerToGameReq& operator=(S2SKickPlayerToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SKickPlayerToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SKickPlayerToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SKickPlayerToGameReq*>(
               &_S2SKickPlayerToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    25;

  void Swap(S2SKickPlayerToGameReq* other);
  friend void swap(S2SKickPlayerToGameReq& a, S2SKickPlayerToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SKickPlayerToGameReq* New() const final {
    return CreateMaybeMessage<S2SKickPlayerToGameReq>(NULL);
  }

  S2SKickPlayerToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SKickPlayerToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SKickPlayerToGameReq& from);
  void MergeFrom(const S2SKickPlayerToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SKickPlayerToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SKickPlayerToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SKickPlayerToGateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SKickPlayerToGateReq) */ {
 public:
  S2SKickPlayerToGateReq();
  virtual ~S2SKickPlayerToGateReq();

  S2SKickPlayerToGateReq(const S2SKickPlayerToGateReq& from);

  inline S2SKickPlayerToGateReq& operator=(const S2SKickPlayerToGateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SKickPlayerToGateReq(S2SKickPlayerToGateReq&& from) noexcept
    : S2SKickPlayerToGateReq() {
    *this = ::std::move(from);
  }

  inline S2SKickPlayerToGateReq& operator=(S2SKickPlayerToGateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SKickPlayerToGateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SKickPlayerToGateReq* internal_default_instance() {
    return reinterpret_cast<const S2SKickPlayerToGateReq*>(
               &_S2SKickPlayerToGateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    26;

  void Swap(S2SKickPlayerToGateReq* other);
  friend void swap(S2SKickPlayerToGateReq& a, S2SKickPlayerToGateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SKickPlayerToGateReq* New() const final {
    return CreateMaybeMessage<S2SKickPlayerToGateReq>(NULL);
  }

  S2SKickPlayerToGateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SKickPlayerToGateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SKickPlayerToGateReq& from);
  void MergeFrom(const S2SKickPlayerToGateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SKickPlayerToGateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SKickPlayerToGateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToGameReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToGameReq) */ {
 public:
  S2SBroadcastToGameReq();
  virtual ~S2SBroadcastToGameReq();

  S2SBroadcastToGameReq(const S2SBroadcastToGameReq& from);

  inline S2SBroadcastToGameReq& operator=(const S2SBroadcastToGameReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToGameReq(S2SBroadcastToGameReq&& from) noexcept
    : S2SBroadcastToGameReq() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToGameReq& operator=(S2SBroadcastToGameReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToGameReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToGameReq* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToGameReq*>(
               &_S2SBroadcastToGameReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    27;

  void Swap(S2SBroadcastToGameReq* other);
  friend void swap(S2SBroadcastToGameReq& a, S2SBroadcastToGameReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToGameReq* New() const final {
    return CreateMaybeMessage<S2SBroadcastToGameReq>(NULL);
  }

  S2SBroadcastToGameReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToGameReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToGameReq& from);
  void MergeFrom(const S2SBroadcastToGameReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToGameReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToGameReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToGameAck) */ {
 public:
  S2SBroadcastToGameAck();
  virtual ~S2SBroadcastToGameAck();

  S2SBroadcastToGameAck(const S2SBroadcastToGameAck& from);

  inline S2SBroadcastToGameAck& operator=(const S2SBroadcastToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToGameAck(S2SBroadcastToGameAck&& from) noexcept
    : S2SBroadcastToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToGameAck& operator=(S2SBroadcastToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToGameAck*>(
               &_S2SBroadcastToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    28;

  void Swap(S2SBroadcastToGameAck* other);
  friend void swap(S2SBroadcastToGameAck& a, S2SBroadcastToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToGameAck* New() const final {
    return CreateMaybeMessage<S2SBroadcastToGameAck>(NULL);
  }

  S2SBroadcastToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToGameAck& from);
  void MergeFrom(const S2SBroadcastToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // uint32 serial = 3;
  void clear_serial();
  static const int kSerialFieldNumber = 3;
  ::google::protobuf::uint32 serial() const;
  void set_serial(::google::protobuf::uint32 value);

  // uint64 worldid = 4;
  void clear_worldid();
  static const int kWorldidFieldNumber = 4;
  ::google::protobuf::uint64 worldid() const;
  void set_worldid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 serial_;
  ::google::protobuf::uint64 worldid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToGateReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToGateReq) */ {
 public:
  S2SBroadcastToGateReq();
  virtual ~S2SBroadcastToGateReq();

  S2SBroadcastToGateReq(const S2SBroadcastToGateReq& from);

  inline S2SBroadcastToGateReq& operator=(const S2SBroadcastToGateReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToGateReq(S2SBroadcastToGateReq&& from) noexcept
    : S2SBroadcastToGateReq() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToGateReq& operator=(S2SBroadcastToGateReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToGateReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToGateReq* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToGateReq*>(
               &_S2SBroadcastToGateReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    29;

  void Swap(S2SBroadcastToGateReq* other);
  friend void swap(S2SBroadcastToGateReq& a, S2SBroadcastToGateReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToGateReq* New() const final {
    return CreateMaybeMessage<S2SBroadcastToGateReq>(NULL);
  }

  S2SBroadcastToGateReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToGateReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToGateReq& from);
  void MergeFrom(const S2SBroadcastToGateReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToGateReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // uint32 serial = 3;
  void clear_serial();
  static const int kSerialFieldNumber = 3;
  ::google::protobuf::uint32 serial() const;
  void set_serial(::google::protobuf::uint32 value);

  // uint64 worldid = 4;
  void clear_worldid();
  static const int kWorldidFieldNumber = 4;
  ::google::protobuf::uint64 worldid() const;
  void set_worldid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToGateReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 serial_;
  ::google::protobuf::uint64 worldid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToServerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToServerReq) */ {
 public:
  S2SBroadcastToServerReq();
  virtual ~S2SBroadcastToServerReq();

  S2SBroadcastToServerReq(const S2SBroadcastToServerReq& from);

  inline S2SBroadcastToServerReq& operator=(const S2SBroadcastToServerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToServerReq(S2SBroadcastToServerReq&& from) noexcept
    : S2SBroadcastToServerReq() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToServerReq& operator=(S2SBroadcastToServerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToServerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToServerReq* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToServerReq*>(
               &_S2SBroadcastToServerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    30;

  void Swap(S2SBroadcastToServerReq* other);
  friend void swap(S2SBroadcastToServerReq& a, S2SBroadcastToServerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToServerReq* New() const final {
    return CreateMaybeMessage<S2SBroadcastToServerReq>(NULL);
  }

  S2SBroadcastToServerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToServerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToServerReq& from);
  void MergeFrom(const S2SBroadcastToServerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToServerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToServerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToWorldReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToWorldReq) */ {
 public:
  S2SBroadcastToWorldReq();
  virtual ~S2SBroadcastToWorldReq();

  S2SBroadcastToWorldReq(const S2SBroadcastToWorldReq& from);

  inline S2SBroadcastToWorldReq& operator=(const S2SBroadcastToWorldReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToWorldReq(S2SBroadcastToWorldReq&& from) noexcept
    : S2SBroadcastToWorldReq() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToWorldReq& operator=(S2SBroadcastToWorldReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToWorldReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToWorldReq* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToWorldReq*>(
               &_S2SBroadcastToWorldReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    31;

  void Swap(S2SBroadcastToWorldReq* other);
  friend void swap(S2SBroadcastToWorldReq& a, S2SBroadcastToWorldReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToWorldReq* New() const final {
    return CreateMaybeMessage<S2SBroadcastToWorldReq>(NULL);
  }

  S2SBroadcastToWorldReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToWorldReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToWorldReq& from);
  void MergeFrom(const S2SBroadcastToWorldReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToWorldReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToWorldReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SBroadcastToWorldAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SBroadcastToWorldAck) */ {
 public:
  S2SBroadcastToWorldAck();
  virtual ~S2SBroadcastToWorldAck();

  S2SBroadcastToWorldAck(const S2SBroadcastToWorldAck& from);

  inline S2SBroadcastToWorldAck& operator=(const S2SBroadcastToWorldAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SBroadcastToWorldAck(S2SBroadcastToWorldAck&& from) noexcept
    : S2SBroadcastToWorldAck() {
    *this = ::std::move(from);
  }

  inline S2SBroadcastToWorldAck& operator=(S2SBroadcastToWorldAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SBroadcastToWorldAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SBroadcastToWorldAck* internal_default_instance() {
    return reinterpret_cast<const S2SBroadcastToWorldAck*>(
               &_S2SBroadcastToWorldAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    32;

  void Swap(S2SBroadcastToWorldAck* other);
  friend void swap(S2SBroadcastToWorldAck& a, S2SBroadcastToWorldAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SBroadcastToWorldAck* New() const final {
    return CreateMaybeMessage<S2SBroadcastToWorldAck>(NULL);
  }

  S2SBroadcastToWorldAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SBroadcastToWorldAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SBroadcastToWorldAck& from);
  void MergeFrom(const S2SBroadcastToWorldAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SBroadcastToWorldAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes msgdata = 2;
  void clear_msgdata();
  static const int kMsgdataFieldNumber = 2;
  const ::std::string& msgdata() const;
  void set_msgdata(const ::std::string& value);
  #if LANG_CXX11
  void set_msgdata(::std::string&& value);
  #endif
  void set_msgdata(const char* value);
  void set_msgdata(const void* value, size_t size);
  ::std::string* mutable_msgdata();
  ::std::string* release_msgdata();
  void set_allocated_msgdata(::std::string* msgdata);

  // uint32 msgid = 1;
  void clear_msgid();
  static const int kMsgidFieldNumber = 1;
  ::google::protobuf::uint32 msgid() const;
  void set_msgid(::google::protobuf::uint32 value);

  // uint32 serial = 3;
  void clear_serial();
  static const int kSerialFieldNumber = 3;
  ::google::protobuf::uint32 serial() const;
  void set_serial(::google::protobuf::uint32 value);

  // uint64 worldid = 4;
  void clear_worldid();
  static const int kWorldidFieldNumber = 4;
  ::google::protobuf::uint64 worldid() const;
  void set_worldid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SBroadcastToWorldAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr msgdata_;
  ::google::protobuf::uint32 msgid_;
  ::google::protobuf::uint32 serial_;
  ::google::protobuf::uint64 worldid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBMail_DataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBMail_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBMail_DataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBMail_DataEntry_DoNotUse();
  PBMail_DataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBMail_DataEntry_DoNotUse& other);
  static const PBMail_DataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBMail_DataEntry_DoNotUse*>(&_PBMail_DataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBMail : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBMail) */ {
 public:
  PBMail();
  virtual ~PBMail();

  PBMail(const PBMail& from);

  inline PBMail& operator=(const PBMail& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBMail(PBMail&& from) noexcept
    : PBMail() {
    *this = ::std::move(from);
  }

  inline PBMail& operator=(PBMail&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBMail& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBMail* internal_default_instance() {
    return reinterpret_cast<const PBMail*>(
               &_PBMail_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    34;

  void Swap(PBMail* other);
  friend void swap(PBMail& a, PBMail& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBMail* New() const final {
    return CreateMaybeMessage<PBMail>(NULL);
  }

  PBMail* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBMail>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBMail& from);
  void MergeFrom(const PBMail& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBMail* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> data = 1;
  int data_size() const;
  void clear_data();
  static const int kDataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      data() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_data();

  // @@protoc_insertion_point(class_scope:KFMsg.PBMail)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PBMail_DataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > data_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryMailReq) */ {
 public:
  S2SQueryMailReq();
  virtual ~S2SQueryMailReq();

  S2SQueryMailReq(const S2SQueryMailReq& from);

  inline S2SQueryMailReq& operator=(const S2SQueryMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryMailReq(S2SQueryMailReq&& from) noexcept
    : S2SQueryMailReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryMailReq& operator=(S2SQueryMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryMailReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryMailReq*>(
               &_S2SQueryMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    35;

  void Swap(S2SQueryMailReq* other);
  friend void swap(S2SQueryMailReq& a, S2SQueryMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryMailReq* New() const final {
    return CreateMaybeMessage<S2SQueryMailReq>(NULL);
  }

  S2SQueryMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryMailReq& from);
  void MergeFrom(const S2SQueryMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 maxid = 3;
  void clear_maxid();
  static const int kMaxidFieldNumber = 3;
  ::google::protobuf::uint64 maxid() const;
  void set_maxid(::google::protobuf::uint64 value);

  // uint32 zoneid = 2;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 maxid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryMailAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryMailAck) */ {
 public:
  S2SQueryMailAck();
  virtual ~S2SQueryMailAck();

  S2SQueryMailAck(const S2SQueryMailAck& from);

  inline S2SQueryMailAck& operator=(const S2SQueryMailAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryMailAck(S2SQueryMailAck&& from) noexcept
    : S2SQueryMailAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryMailAck& operator=(S2SQueryMailAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryMailAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryMailAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryMailAck*>(
               &_S2SQueryMailAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    36;

  void Swap(S2SQueryMailAck* other);
  friend void swap(S2SQueryMailAck& a, S2SQueryMailAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryMailAck* New() const final {
    return CreateMaybeMessage<S2SQueryMailAck>(NULL);
  }

  S2SQueryMailAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryMailAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryMailAck& from);
  void MergeFrom(const S2SQueryMailAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryMailAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBMail mail = 2;
  int mail_size() const;
  void clear_mail();
  static const int kMailFieldNumber = 2;
  ::KFMsg::PBMail* mutable_mail(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail >*
      mutable_mail();
  const ::KFMsg::PBMail& mail(int index) const;
  ::KFMsg::PBMail* add_mail();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail >&
      mail() const;

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryMailAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail > mail_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddMailReq) */ {
 public:
  S2SAddMailReq();
  virtual ~S2SAddMailReq();

  S2SAddMailReq(const S2SAddMailReq& from);

  inline S2SAddMailReq& operator=(const S2SAddMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddMailReq(S2SAddMailReq&& from) noexcept
    : S2SAddMailReq() {
    *this = ::std::move(from);
  }

  inline S2SAddMailReq& operator=(S2SAddMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddMailReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddMailReq*>(
               &_S2SAddMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    37;

  void Swap(S2SAddMailReq* other);
  friend void swap(S2SAddMailReq& a, S2SAddMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddMailReq* New() const final {
    return CreateMaybeMessage<S2SAddMailReq>(NULL);
  }

  S2SAddMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddMailReq& from);
  void MergeFrom(const S2SAddMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBMail pbmail = 3;
  bool has_pbmail() const;
  void clear_pbmail();
  static const int kPbmailFieldNumber = 3;
  private:
  const ::KFMsg::PBMail& _internal_pbmail() const;
  public:
  const ::KFMsg::PBMail& pbmail() const;
  ::KFMsg::PBMail* release_pbmail();
  ::KFMsg::PBMail* mutable_pbmail();
  void set_allocated_pbmail(::KFMsg::PBMail* pbmail);

  // uint64 objectid = 2;
  void clear_objectid();
  static const int kObjectidFieldNumber = 2;
  ::google::protobuf::uint64 objectid() const;
  void set_objectid(::google::protobuf::uint64 value);

  // uint32 flag = 1;
  void clear_flag();
  static const int kFlagFieldNumber = 1;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBMail* pbmail_;
  ::google::protobuf::uint64 objectid_;
  ::google::protobuf::uint32 flag_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SNoticeNewMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SNoticeNewMailReq) */ {
 public:
  S2SNoticeNewMailReq();
  virtual ~S2SNoticeNewMailReq();

  S2SNoticeNewMailReq(const S2SNoticeNewMailReq& from);

  inline S2SNoticeNewMailReq& operator=(const S2SNoticeNewMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SNoticeNewMailReq(S2SNoticeNewMailReq&& from) noexcept
    : S2SNoticeNewMailReq() {
    *this = ::std::move(from);
  }

  inline S2SNoticeNewMailReq& operator=(S2SNoticeNewMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SNoticeNewMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SNoticeNewMailReq* internal_default_instance() {
    return reinterpret_cast<const S2SNoticeNewMailReq*>(
               &_S2SNoticeNewMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    38;

  void Swap(S2SNoticeNewMailReq* other);
  friend void swap(S2SNoticeNewMailReq& a, S2SNoticeNewMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SNoticeNewMailReq* New() const final {
    return CreateMaybeMessage<S2SNoticeNewMailReq>(NULL);
  }

  S2SNoticeNewMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SNoticeNewMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SNoticeNewMailReq& from);
  void MergeFrom(const S2SNoticeNewMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SNoticeNewMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SNoticeNewMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SNewPlayerMailReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SNewPlayerMailReq) */ {
 public:
  S2SNewPlayerMailReq();
  virtual ~S2SNewPlayerMailReq();

  S2SNewPlayerMailReq(const S2SNewPlayerMailReq& from);

  inline S2SNewPlayerMailReq& operator=(const S2SNewPlayerMailReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SNewPlayerMailReq(S2SNewPlayerMailReq&& from) noexcept
    : S2SNewPlayerMailReq() {
    *this = ::std::move(from);
  }

  inline S2SNewPlayerMailReq& operator=(S2SNewPlayerMailReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SNewPlayerMailReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SNewPlayerMailReq* internal_default_instance() {
    return reinterpret_cast<const S2SNewPlayerMailReq*>(
               &_S2SNewPlayerMailReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    39;

  void Swap(S2SNewPlayerMailReq* other);
  friend void swap(S2SNewPlayerMailReq& a, S2SNewPlayerMailReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SNewPlayerMailReq* New() const final {
    return CreateMaybeMessage<S2SNewPlayerMailReq>(NULL);
  }

  S2SNewPlayerMailReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SNewPlayerMailReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SNewPlayerMailReq& from);
  void MergeFrom(const S2SNewPlayerMailReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SNewPlayerMailReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 zoneid = 2;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SNewPlayerMailReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateMailStatusReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateMailStatusReq) */ {
 public:
  S2SUpdateMailStatusReq();
  virtual ~S2SUpdateMailStatusReq();

  S2SUpdateMailStatusReq(const S2SUpdateMailStatusReq& from);

  inline S2SUpdateMailStatusReq& operator=(const S2SUpdateMailStatusReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateMailStatusReq(S2SUpdateMailStatusReq&& from) noexcept
    : S2SUpdateMailStatusReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateMailStatusReq& operator=(S2SUpdateMailStatusReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateMailStatusReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateMailStatusReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateMailStatusReq*>(
               &_S2SUpdateMailStatusReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    40;

  void Swap(S2SUpdateMailStatusReq* other);
  friend void swap(S2SUpdateMailStatusReq& a, S2SUpdateMailStatusReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateMailStatusReq* New() const final {
    return CreateMaybeMessage<S2SUpdateMailStatusReq>(NULL);
  }

  S2SUpdateMailStatusReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateMailStatusReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateMailStatusReq& from);
  void MergeFrom(const S2SUpdateMailStatusReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateMailStatusReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 flag = 3;
  void clear_flag();
  static const int kFlagFieldNumber = 3;
  ::google::protobuf::uint32 flag() const;
  void set_flag(::google::protobuf::uint32 value);

  // uint32 status = 4;
  void clear_status();
  static const int kStatusFieldNumber = 4;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateMailStatusReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 flag_;
  ::google::protobuf::uint32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateMailStatusAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateMailStatusAck) */ {
 public:
  S2SUpdateMailStatusAck();
  virtual ~S2SUpdateMailStatusAck();

  S2SUpdateMailStatusAck(const S2SUpdateMailStatusAck& from);

  inline S2SUpdateMailStatusAck& operator=(const S2SUpdateMailStatusAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateMailStatusAck(S2SUpdateMailStatusAck&& from) noexcept
    : S2SUpdateMailStatusAck() {
    *this = ::std::move(from);
  }

  inline S2SUpdateMailStatusAck& operator=(S2SUpdateMailStatusAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateMailStatusAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateMailStatusAck* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateMailStatusAck*>(
               &_S2SUpdateMailStatusAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    41;

  void Swap(S2SUpdateMailStatusAck* other);
  friend void swap(S2SUpdateMailStatusAck& a, S2SUpdateMailStatusAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateMailStatusAck* New() const final {
    return CreateMaybeMessage<S2SUpdateMailStatusAck>(NULL);
  }

  S2SUpdateMailStatusAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateMailStatusAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateMailStatusAck& from);
  void MergeFrom(const S2SUpdateMailStatusAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateMailStatusAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // uint32 status = 3;
  void clear_status();
  static const int kStatusFieldNumber = 3;
  ::google::protobuf::uint32 status() const;
  void set_status(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateMailStatusAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 id_;
  ::google::protobuf::uint32 status_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SNoticeRankWorkerReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SNoticeRankWorkerReq) */ {
 public:
  S2SNoticeRankWorkerReq();
  virtual ~S2SNoticeRankWorkerReq();

  S2SNoticeRankWorkerReq(const S2SNoticeRankWorkerReq& from);

  inline S2SNoticeRankWorkerReq& operator=(const S2SNoticeRankWorkerReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SNoticeRankWorkerReq(S2SNoticeRankWorkerReq&& from) noexcept
    : S2SNoticeRankWorkerReq() {
    *this = ::std::move(from);
  }

  inline S2SNoticeRankWorkerReq& operator=(S2SNoticeRankWorkerReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SNoticeRankWorkerReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SNoticeRankWorkerReq* internal_default_instance() {
    return reinterpret_cast<const S2SNoticeRankWorkerReq*>(
               &_S2SNoticeRankWorkerReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    42;

  void Swap(S2SNoticeRankWorkerReq* other);
  friend void swap(S2SNoticeRankWorkerReq& a, S2SNoticeRankWorkerReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SNoticeRankWorkerReq* New() const final {
    return CreateMaybeMessage<S2SNoticeRankWorkerReq>(NULL);
  }

  S2SNoticeRankWorkerReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SNoticeRankWorkerReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SNoticeRankWorkerReq& from);
  void MergeFrom(const S2SNoticeRankWorkerReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SNoticeRankWorkerReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 workerid = 1;
  void clear_workerid();
  static const int kWorkeridFieldNumber = 1;
  ::google::protobuf::uint32 workerid() const;
  void set_workerid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SNoticeRankWorkerReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 workerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSyncRefreshRank : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSyncRefreshRank) */ {
 public:
  S2SSyncRefreshRank();
  virtual ~S2SSyncRefreshRank();

  S2SSyncRefreshRank(const S2SSyncRefreshRank& from);

  inline S2SSyncRefreshRank& operator=(const S2SSyncRefreshRank& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSyncRefreshRank(S2SSyncRefreshRank&& from) noexcept
    : S2SSyncRefreshRank() {
    *this = ::std::move(from);
  }

  inline S2SSyncRefreshRank& operator=(S2SSyncRefreshRank&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSyncRefreshRank& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSyncRefreshRank* internal_default_instance() {
    return reinterpret_cast<const S2SSyncRefreshRank*>(
               &_S2SSyncRefreshRank_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    43;

  void Swap(S2SSyncRefreshRank* other);
  friend void swap(S2SSyncRefreshRank& a, S2SSyncRefreshRank& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSyncRefreshRank* New() const final {
    return CreateMaybeMessage<S2SSyncRefreshRank>(NULL);
  }

  S2SSyncRefreshRank* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSyncRefreshRank>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSyncRefreshRank& from);
  void MergeFrom(const S2SSyncRefreshRank& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSyncRefreshRank* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSyncRefreshRank)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateRankDataReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateRankDataReq) */ {
 public:
  S2SUpdateRankDataReq();
  virtual ~S2SUpdateRankDataReq();

  S2SUpdateRankDataReq(const S2SUpdateRankDataReq& from);

  inline S2SUpdateRankDataReq& operator=(const S2SUpdateRankDataReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateRankDataReq(S2SUpdateRankDataReq&& from) noexcept
    : S2SUpdateRankDataReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateRankDataReq& operator=(S2SUpdateRankDataReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateRankDataReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateRankDataReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateRankDataReq*>(
               &_S2SUpdateRankDataReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    44;

  void Swap(S2SUpdateRankDataReq* other);
  friend void swap(S2SUpdateRankDataReq& a, S2SUpdateRankDataReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateRankDataReq* New() const final {
    return CreateMaybeMessage<S2SUpdateRankDataReq>(NULL);
  }

  S2SUpdateRankDataReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateRankDataReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateRankDataReq& from);
  void MergeFrom(const S2SUpdateRankDataReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateRankDataReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBRankData pbrankdata = 4;
  bool has_pbrankdata() const;
  void clear_pbrankdata();
  static const int kPbrankdataFieldNumber = 4;
  private:
  const ::KFMsg::PBRankData& _internal_pbrankdata() const;
  public:
  const ::KFMsg::PBRankData& pbrankdata() const;
  ::KFMsg::PBRankData* release_pbrankdata();
  ::KFMsg::PBRankData* mutable_pbrankdata();
  void set_allocated_pbrankdata(::KFMsg::PBRankData* pbrankdata);

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 rankid = 2;
  void clear_rankid();
  static const int kRankidFieldNumber = 2;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // uint32 zoneid = 3;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 3;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateRankDataReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBRankData* pbrankdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRankListReq) */ {
 public:
  S2SQueryRankListReq();
  virtual ~S2SQueryRankListReq();

  S2SQueryRankListReq(const S2SQueryRankListReq& from);

  inline S2SQueryRankListReq& operator=(const S2SQueryRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRankListReq(S2SQueryRankListReq&& from) noexcept
    : S2SQueryRankListReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryRankListReq& operator=(S2SQueryRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRankListReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRankListReq*>(
               &_S2SQueryRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    45;

  void Swap(S2SQueryRankListReq* other);
  friend void swap(S2SQueryRankListReq& a, S2SQueryRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRankListReq* New() const final {
    return CreateMaybeMessage<S2SQueryRankListReq>(NULL);
  }

  S2SQueryRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRankListReq& from);
  void MergeFrom(const S2SQueryRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // uint32 zoneid = 2;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // uint32 start = 3;
  void clear_start();
  static const int kStartFieldNumber = 3;
  ::google::protobuf::uint32 start() const;
  void set_start(::google::protobuf::uint32 value);

  // uint32 count = 4;
  void clear_count();
  static const int kCountFieldNumber = 4;
  ::google::protobuf::uint32 count() const;
  void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 rankid_;
  ::google::protobuf::uint32 zoneid_;
  ::google::protobuf::uint32 start_;
  ::google::protobuf::uint32 count_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryFriendRankListReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryFriendRankListReq) */ {
 public:
  S2SQueryFriendRankListReq();
  virtual ~S2SQueryFriendRankListReq();

  S2SQueryFriendRankListReq(const S2SQueryFriendRankListReq& from);

  inline S2SQueryFriendRankListReq& operator=(const S2SQueryFriendRankListReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryFriendRankListReq(S2SQueryFriendRankListReq&& from) noexcept
    : S2SQueryFriendRankListReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryFriendRankListReq& operator=(S2SQueryFriendRankListReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryFriendRankListReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryFriendRankListReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryFriendRankListReq*>(
               &_S2SQueryFriendRankListReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    46;

  void Swap(S2SQueryFriendRankListReq* other);
  friend void swap(S2SQueryFriendRankListReq& a, S2SQueryFriendRankListReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryFriendRankListReq* New() const final {
    return CreateMaybeMessage<S2SQueryFriendRankListReq>(NULL);
  }

  S2SQueryFriendRankListReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryFriendRankListReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryFriendRankListReq& from);
  void MergeFrom(const S2SQueryFriendRankListReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryFriendRankListReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated uint64 friendid = 2;
  int friendid_size() const;
  void clear_friendid();
  static const int kFriendidFieldNumber = 2;
  ::google::protobuf::uint64 friendid(int index) const;
  void set_friendid(int index, ::google::protobuf::uint64 value);
  void add_friendid(::google::protobuf::uint64 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
      friendid() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
      mutable_friendid();

  // uint32 rankid = 1;
  void clear_rankid();
  static const int kRankidFieldNumber = 1;
  ::google::protobuf::uint32 rankid() const;
  void set_rankid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryFriendRankListReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint64 > friendid_;
  mutable int _friendid_cached_byte_size_;
  ::google::protobuf::uint32 rankid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > SuperType;
  S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse();
  S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse& other);
  static const S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse*>(&_S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateIntValueToBasicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateIntValueToBasicReq) */ {
 public:
  S2SUpdateIntValueToBasicReq();
  virtual ~S2SUpdateIntValueToBasicReq();

  S2SUpdateIntValueToBasicReq(const S2SUpdateIntValueToBasicReq& from);

  inline S2SUpdateIntValueToBasicReq& operator=(const S2SUpdateIntValueToBasicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateIntValueToBasicReq(S2SUpdateIntValueToBasicReq&& from) noexcept
    : S2SUpdateIntValueToBasicReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateIntValueToBasicReq& operator=(S2SUpdateIntValueToBasicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateIntValueToBasicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateIntValueToBasicReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateIntValueToBasicReq*>(
               &_S2SUpdateIntValueToBasicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    48;

  void Swap(S2SUpdateIntValueToBasicReq* other);
  friend void swap(S2SUpdateIntValueToBasicReq& a, S2SUpdateIntValueToBasicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateIntValueToBasicReq* New() const final {
    return CreateMaybeMessage<S2SUpdateIntValueToBasicReq>(NULL);
  }

  S2SUpdateIntValueToBasicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateIntValueToBasicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateIntValueToBasicReq& from);
  void MergeFrom(const S2SUpdateIntValueToBasicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateIntValueToBasicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, uint64> pbdata = 1;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
      mutable_pbdata();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateIntValueToBasicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateIntValueToBasicReq_PbdataEntry_DoNotUse,
      ::std::string, ::google::protobuf::uint64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      0 > pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse();
  S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse& other);
  static const S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse*>(&_S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateStrValueToBasicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateStrValueToBasicReq) */ {
 public:
  S2SUpdateStrValueToBasicReq();
  virtual ~S2SUpdateStrValueToBasicReq();

  S2SUpdateStrValueToBasicReq(const S2SUpdateStrValueToBasicReq& from);

  inline S2SUpdateStrValueToBasicReq& operator=(const S2SUpdateStrValueToBasicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateStrValueToBasicReq(S2SUpdateStrValueToBasicReq&& from) noexcept
    : S2SUpdateStrValueToBasicReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateStrValueToBasicReq& operator=(S2SUpdateStrValueToBasicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateStrValueToBasicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateStrValueToBasicReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateStrValueToBasicReq*>(
               &_S2SUpdateStrValueToBasicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    50;

  void Swap(S2SUpdateStrValueToBasicReq* other);
  friend void swap(S2SUpdateStrValueToBasicReq& a, S2SUpdateStrValueToBasicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateStrValueToBasicReq* New() const final {
    return CreateMaybeMessage<S2SUpdateStrValueToBasicReq>(NULL);
  }

  S2SUpdateStrValueToBasicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateStrValueToBasicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateStrValueToBasicReq& from);
  void MergeFrom(const S2SUpdateStrValueToBasicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateStrValueToBasicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 1;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateStrValueToBasicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateStrValueToBasicReq_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SClearOnlineToBasicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SClearOnlineToBasicReq) */ {
 public:
  S2SClearOnlineToBasicReq();
  virtual ~S2SClearOnlineToBasicReq();

  S2SClearOnlineToBasicReq(const S2SClearOnlineToBasicReq& from);

  inline S2SClearOnlineToBasicReq& operator=(const S2SClearOnlineToBasicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SClearOnlineToBasicReq(S2SClearOnlineToBasicReq&& from) noexcept
    : S2SClearOnlineToBasicReq() {
    *this = ::std::move(from);
  }

  inline S2SClearOnlineToBasicReq& operator=(S2SClearOnlineToBasicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SClearOnlineToBasicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SClearOnlineToBasicReq* internal_default_instance() {
    return reinterpret_cast<const S2SClearOnlineToBasicReq*>(
               &_S2SClearOnlineToBasicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    51;

  void Swap(S2SClearOnlineToBasicReq* other);
  friend void swap(S2SClearOnlineToBasicReq& a, S2SClearOnlineToBasicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SClearOnlineToBasicReq* New() const final {
    return CreateMaybeMessage<S2SClearOnlineToBasicReq>(NULL);
  }

  S2SClearOnlineToBasicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SClearOnlineToBasicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SClearOnlineToBasicReq& from);
  void MergeFrom(const S2SClearOnlineToBasicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SClearOnlineToBasicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 serverid = 1;
  void clear_serverid();
  static const int kServeridFieldNumber = 1;
  ::google::protobuf::uint64 serverid() const;
  void set_serverid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SClearOnlineToBasicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 serverid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryAttributeToBasicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryAttributeToBasicReq) */ {
 public:
  S2SQueryAttributeToBasicReq();
  virtual ~S2SQueryAttributeToBasicReq();

  S2SQueryAttributeToBasicReq(const S2SQueryAttributeToBasicReq& from);

  inline S2SQueryAttributeToBasicReq& operator=(const S2SQueryAttributeToBasicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryAttributeToBasicReq(S2SQueryAttributeToBasicReq&& from) noexcept
    : S2SQueryAttributeToBasicReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryAttributeToBasicReq& operator=(S2SQueryAttributeToBasicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryAttributeToBasicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryAttributeToBasicReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryAttributeToBasicReq*>(
               &_S2SQueryAttributeToBasicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    52;

  void Swap(S2SQueryAttributeToBasicReq* other);
  friend void swap(S2SQueryAttributeToBasicReq& a, S2SQueryAttributeToBasicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryAttributeToBasicReq* New() const final {
    return CreateMaybeMessage<S2SQueryAttributeToBasicReq>(NULL);
  }

  S2SQueryAttributeToBasicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryAttributeToBasicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryAttributeToBasicReq& from);
  void MergeFrom(const S2SQueryAttributeToBasicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryAttributeToBasicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 zoneid = 2;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 2;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryAttributeToBasicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse();
  S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse& other);
  static const S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse*>(&_S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryAttributeToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryAttributeToGameAck) */ {
 public:
  S2SQueryAttributeToGameAck();
  virtual ~S2SQueryAttributeToGameAck();

  S2SQueryAttributeToGameAck(const S2SQueryAttributeToGameAck& from);

  inline S2SQueryAttributeToGameAck& operator=(const S2SQueryAttributeToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryAttributeToGameAck(S2SQueryAttributeToGameAck&& from) noexcept
    : S2SQueryAttributeToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryAttributeToGameAck& operator=(S2SQueryAttributeToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryAttributeToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryAttributeToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryAttributeToGameAck*>(
               &_S2SQueryAttributeToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    54;

  void Swap(S2SQueryAttributeToGameAck* other);
  friend void swap(S2SQueryAttributeToGameAck& a, S2SQueryAttributeToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryAttributeToGameAck* New() const final {
    return CreateMaybeMessage<S2SQueryAttributeToGameAck>(NULL);
  }

  S2SQueryAttributeToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryAttributeToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryAttributeToGameAck& from);
  void MergeFrom(const S2SQueryAttributeToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryAttributeToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // bytes name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // uint32 result = 2;
  void clear_result();
  static const int kResultFieldNumber = 2;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryAttributeToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SQueryAttributeToGameAck_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSetPlayerNameToBasicReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSetPlayerNameToBasicReq) */ {
 public:
  S2SSetPlayerNameToBasicReq();
  virtual ~S2SSetPlayerNameToBasicReq();

  S2SSetPlayerNameToBasicReq(const S2SSetPlayerNameToBasicReq& from);

  inline S2SSetPlayerNameToBasicReq& operator=(const S2SSetPlayerNameToBasicReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSetPlayerNameToBasicReq(S2SSetPlayerNameToBasicReq&& from) noexcept
    : S2SSetPlayerNameToBasicReq() {
    *this = ::std::move(from);
  }

  inline S2SSetPlayerNameToBasicReq& operator=(S2SSetPlayerNameToBasicReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSetPlayerNameToBasicReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSetPlayerNameToBasicReq* internal_default_instance() {
    return reinterpret_cast<const S2SSetPlayerNameToBasicReq*>(
               &_S2SSetPlayerNameToBasicReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    55;

  void Swap(S2SSetPlayerNameToBasicReq* other);
  friend void swap(S2SSetPlayerNameToBasicReq& a, S2SSetPlayerNameToBasicReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSetPlayerNameToBasicReq* New() const final {
    return CreateMaybeMessage<S2SSetPlayerNameToBasicReq>(NULL);
  }

  S2SSetPlayerNameToBasicReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSetPlayerNameToBasicReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSetPlayerNameToBasicReq& from);
  void MergeFrom(const S2SSetPlayerNameToBasicReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSetPlayerNameToBasicReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes oldname = 3;
  void clear_oldname();
  static const int kOldnameFieldNumber = 3;
  const ::std::string& oldname() const;
  void set_oldname(const ::std::string& value);
  #if LANG_CXX11
  void set_oldname(::std::string&& value);
  #endif
  void set_oldname(const char* value);
  void set_oldname(const void* value, size_t size);
  ::std::string* mutable_oldname();
  ::std::string* release_oldname();
  void set_allocated_oldname(::std::string* oldname);

  // bytes newname = 4;
  void clear_newname();
  static const int kNewnameFieldNumber = 4;
  const ::std::string& newname() const;
  void set_newname(const ::std::string& value);
  #if LANG_CXX11
  void set_newname(::std::string&& value);
  #endif
  void set_newname(const char* value);
  void set_newname(const void* value, size_t size);
  ::std::string* mutable_newname();
  ::std::string* release_newname();
  void set_allocated_newname(::std::string* newname);

  // bytes costdata = 5;
  void clear_costdata();
  static const int kCostdataFieldNumber = 5;
  const ::std::string& costdata() const;
  void set_costdata(const ::std::string& value);
  #if LANG_CXX11
  void set_costdata(::std::string&& value);
  #endif
  void set_costdata(const char* value);
  void set_costdata(const void* value, size_t size);
  ::std::string* mutable_costdata();
  ::std::string* release_costdata();
  void set_allocated_costdata(::std::string* costdata);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 zoneid = 1;
  void clear_zoneid();
  static const int kZoneidFieldNumber = 1;
  ::google::protobuf::uint32 zoneid() const;
  void set_zoneid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSetPlayerNameToBasicReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr oldname_;
  ::google::protobuf::internal::ArenaStringPtr newname_;
  ::google::protobuf::internal::ArenaStringPtr costdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 zoneid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SSetPlayerNameToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SSetPlayerNameToGameAck) */ {
 public:
  S2SSetPlayerNameToGameAck();
  virtual ~S2SSetPlayerNameToGameAck();

  S2SSetPlayerNameToGameAck(const S2SSetPlayerNameToGameAck& from);

  inline S2SSetPlayerNameToGameAck& operator=(const S2SSetPlayerNameToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SSetPlayerNameToGameAck(S2SSetPlayerNameToGameAck&& from) noexcept
    : S2SSetPlayerNameToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SSetPlayerNameToGameAck& operator=(S2SSetPlayerNameToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SSetPlayerNameToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SSetPlayerNameToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SSetPlayerNameToGameAck*>(
               &_S2SSetPlayerNameToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    56;

  void Swap(S2SSetPlayerNameToGameAck* other);
  friend void swap(S2SSetPlayerNameToGameAck& a, S2SSetPlayerNameToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SSetPlayerNameToGameAck* New() const final {
    return CreateMaybeMessage<S2SSetPlayerNameToGameAck>(NULL);
  }

  S2SSetPlayerNameToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SSetPlayerNameToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SSetPlayerNameToGameAck& from);
  void MergeFrom(const S2SSetPlayerNameToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SSetPlayerNameToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 3;
  void clear_name();
  static const int kNameFieldNumber = 3;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes costdata = 4;
  void clear_costdata();
  static const int kCostdataFieldNumber = 4;
  const ::std::string& costdata() const;
  void set_costdata(const ::std::string& value);
  #if LANG_CXX11
  void set_costdata(::std::string&& value);
  #endif
  void set_costdata(const char* value);
  void set_costdata(const void* value, size_t size);
  ::std::string* mutable_costdata();
  ::std::string* release_costdata();
  void set_allocated_costdata(::std::string* costdata);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint32 result = 1;
  void clear_result();
  static const int kResultFieldNumber = 1;
  ::google::protobuf::uint32 result() const;
  void set_result(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SSetPlayerNameToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr costdata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint32 result_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class PBRelation_BasicdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBRelation_BasicdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBRelation_BasicdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBRelation_BasicdataEntry_DoNotUse();
  PBRelation_BasicdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBRelation_BasicdataEntry_DoNotUse& other);
  static const PBRelation_BasicdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBRelation_BasicdataEntry_DoNotUse*>(&_PBRelation_BasicdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class PBRelation_RelationdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<PBRelation_RelationdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<PBRelation_RelationdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  PBRelation_RelationdataEntry_DoNotUse();
  PBRelation_RelationdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const PBRelation_RelationdataEntry_DoNotUse& other);
  static const PBRelation_RelationdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const PBRelation_RelationdataEntry_DoNotUse*>(&_PBRelation_RelationdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT PBRelation : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.PBRelation) */ {
 public:
  PBRelation();
  virtual ~PBRelation();

  PBRelation(const PBRelation& from);

  inline PBRelation& operator=(const PBRelation& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  PBRelation(PBRelation&& from) noexcept
    : PBRelation() {
    *this = ::std::move(from);
  }

  inline PBRelation& operator=(PBRelation&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const PBRelation& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PBRelation* internal_default_instance() {
    return reinterpret_cast<const PBRelation*>(
               &_PBRelation_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    59;

  void Swap(PBRelation* other);
  friend void swap(PBRelation& a, PBRelation& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline PBRelation* New() const final {
    return CreateMaybeMessage<PBRelation>(NULL);
  }

  PBRelation* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<PBRelation>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const PBRelation& from);
  void MergeFrom(const PBRelation& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PBRelation* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> basicdata = 2;
  int basicdata_size() const;
  void clear_basicdata();
  static const int kBasicdataFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      basicdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_basicdata();

  // map<string, bytes> relationdata = 3;
  int relationdata_size() const;
  void clear_relationdata();
  static const int kRelationdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      relationdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_relationdata();

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.PBRelation)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      PBRelation_BasicdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > basicdata_;
  ::google::protobuf::internal::MapField<
      PBRelation_RelationdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > relationdata_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRelationToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRelationToRelationReq) */ {
 public:
  S2SQueryRelationToRelationReq();
  virtual ~S2SQueryRelationToRelationReq();

  S2SQueryRelationToRelationReq(const S2SQueryRelationToRelationReq& from);

  inline S2SQueryRelationToRelationReq& operator=(const S2SQueryRelationToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRelationToRelationReq(S2SQueryRelationToRelationReq&& from) noexcept
    : S2SQueryRelationToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryRelationToRelationReq& operator=(S2SQueryRelationToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRelationToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRelationToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRelationToRelationReq*>(
               &_S2SQueryRelationToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    60;

  void Swap(S2SQueryRelationToRelationReq* other);
  friend void swap(S2SQueryRelationToRelationReq& a, S2SQueryRelationToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRelationToRelationReq* New() const final {
    return CreateMaybeMessage<S2SQueryRelationToRelationReq>(NULL);
  }

  S2SQueryRelationToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRelationToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRelationToRelationReq& from);
  void MergeFrom(const S2SQueryRelationToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRelationToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRelationToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRelationToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRelationToGameAck) */ {
 public:
  S2SQueryRelationToGameAck();
  virtual ~S2SQueryRelationToGameAck();

  S2SQueryRelationToGameAck(const S2SQueryRelationToGameAck& from);

  inline S2SQueryRelationToGameAck& operator=(const S2SQueryRelationToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRelationToGameAck(S2SQueryRelationToGameAck&& from) noexcept
    : S2SQueryRelationToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryRelationToGameAck& operator=(S2SQueryRelationToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRelationToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRelationToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRelationToGameAck*>(
               &_S2SQueryRelationToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    61;

  void Swap(S2SQueryRelationToGameAck* other);
  friend void swap(S2SQueryRelationToGameAck& a, S2SQueryRelationToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRelationToGameAck* New() const final {
    return CreateMaybeMessage<S2SQueryRelationToGameAck>(NULL);
  }

  S2SQueryRelationToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRelationToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRelationToGameAck& from);
  void MergeFrom(const S2SQueryRelationToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRelationToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBRelation pbrelation = 3;
  int pbrelation_size() const;
  void clear_pbrelation();
  static const int kPbrelationFieldNumber = 3;
  ::KFMsg::PBRelation* mutable_pbrelation(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
      mutable_pbrelation();
  const ::KFMsg::PBRelation& pbrelation(int index) const;
  ::KFMsg::PBRelation* add_pbrelation();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
      pbrelation() const;

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRelationToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation > pbrelation_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRelationInviteToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRelationInviteToRelationReq) */ {
 public:
  S2SQueryRelationInviteToRelationReq();
  virtual ~S2SQueryRelationInviteToRelationReq();

  S2SQueryRelationInviteToRelationReq(const S2SQueryRelationInviteToRelationReq& from);

  inline S2SQueryRelationInviteToRelationReq& operator=(const S2SQueryRelationInviteToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRelationInviteToRelationReq(S2SQueryRelationInviteToRelationReq&& from) noexcept
    : S2SQueryRelationInviteToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SQueryRelationInviteToRelationReq& operator=(S2SQueryRelationInviteToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRelationInviteToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRelationInviteToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRelationInviteToRelationReq*>(
               &_S2SQueryRelationInviteToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    62;

  void Swap(S2SQueryRelationInviteToRelationReq* other);
  friend void swap(S2SQueryRelationInviteToRelationReq& a, S2SQueryRelationInviteToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRelationInviteToRelationReq* New() const final {
    return CreateMaybeMessage<S2SQueryRelationInviteToRelationReq>(NULL);
  }

  S2SQueryRelationInviteToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRelationInviteToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRelationInviteToRelationReq& from);
  void MergeFrom(const S2SQueryRelationInviteToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRelationInviteToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRelationInviteToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SQueryRelationInviteToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SQueryRelationInviteToGameAck) */ {
 public:
  S2SQueryRelationInviteToGameAck();
  virtual ~S2SQueryRelationInviteToGameAck();

  S2SQueryRelationInviteToGameAck(const S2SQueryRelationInviteToGameAck& from);

  inline S2SQueryRelationInviteToGameAck& operator=(const S2SQueryRelationInviteToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SQueryRelationInviteToGameAck(S2SQueryRelationInviteToGameAck&& from) noexcept
    : S2SQueryRelationInviteToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SQueryRelationInviteToGameAck& operator=(S2SQueryRelationInviteToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SQueryRelationInviteToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SQueryRelationInviteToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SQueryRelationInviteToGameAck*>(
               &_S2SQueryRelationInviteToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    63;

  void Swap(S2SQueryRelationInviteToGameAck* other);
  friend void swap(S2SQueryRelationInviteToGameAck& a, S2SQueryRelationInviteToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SQueryRelationInviteToGameAck* New() const final {
    return CreateMaybeMessage<S2SQueryRelationInviteToGameAck>(NULL);
  }

  S2SQueryRelationInviteToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SQueryRelationInviteToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SQueryRelationInviteToGameAck& from);
  void MergeFrom(const S2SQueryRelationInviteToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SQueryRelationInviteToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .KFMsg.PBRelation pbinvite = 3;
  int pbinvite_size() const;
  void clear_pbinvite();
  static const int kPbinviteFieldNumber = 3;
  ::KFMsg::PBRelation* mutable_pbinvite(int index);
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
      mutable_pbinvite();
  const ::KFMsg::PBRelation& pbinvite(int index) const;
  ::KFMsg::PBRelation* add_pbinvite();
  const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
      pbinvite() const;

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SQueryRelationInviteToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation > pbinvite_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > SuperType;
  S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse();
  S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse& other);
  static const S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse*>(&_S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateIntValueToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateIntValueToRelationReq) */ {
 public:
  S2SUpdateIntValueToRelationReq();
  virtual ~S2SUpdateIntValueToRelationReq();

  S2SUpdateIntValueToRelationReq(const S2SUpdateIntValueToRelationReq& from);

  inline S2SUpdateIntValueToRelationReq& operator=(const S2SUpdateIntValueToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateIntValueToRelationReq(S2SUpdateIntValueToRelationReq&& from) noexcept
    : S2SUpdateIntValueToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateIntValueToRelationReq& operator=(S2SUpdateIntValueToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateIntValueToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateIntValueToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateIntValueToRelationReq*>(
               &_S2SUpdateIntValueToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    65;

  void Swap(S2SUpdateIntValueToRelationReq* other);
  friend void swap(S2SUpdateIntValueToRelationReq& a, S2SUpdateIntValueToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateIntValueToRelationReq* New() const final {
    return CreateMaybeMessage<S2SUpdateIntValueToRelationReq>(NULL);
  }

  S2SUpdateIntValueToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateIntValueToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateIntValueToRelationReq& from);
  void MergeFrom(const S2SUpdateIntValueToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateIntValueToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, uint64> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
      mutable_pbdata();

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateIntValueToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateIntValueToRelationReq_PbdataEntry_DoNotUse,
      ::std::string, ::google::protobuf::uint64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      0 > pbdata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse();
  S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse& other);
  static const S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse*>(&_S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateStrValueToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateStrValueToRelationReq) */ {
 public:
  S2SUpdateStrValueToRelationReq();
  virtual ~S2SUpdateStrValueToRelationReq();

  S2SUpdateStrValueToRelationReq(const S2SUpdateStrValueToRelationReq& from);

  inline S2SUpdateStrValueToRelationReq& operator=(const S2SUpdateStrValueToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateStrValueToRelationReq(S2SUpdateStrValueToRelationReq&& from) noexcept
    : S2SUpdateStrValueToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateStrValueToRelationReq& operator=(S2SUpdateStrValueToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateStrValueToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateStrValueToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateStrValueToRelationReq*>(
               &_S2SUpdateStrValueToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    67;

  void Swap(S2SUpdateStrValueToRelationReq* other);
  friend void swap(S2SUpdateStrValueToRelationReq& a, S2SUpdateStrValueToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateStrValueToRelationReq* New() const final {
    return CreateMaybeMessage<S2SUpdateStrValueToRelationReq>(NULL);
  }

  S2SUpdateStrValueToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateStrValueToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateStrValueToRelationReq& from);
  void MergeFrom(const S2SUpdateStrValueToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateStrValueToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateStrValueToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2SUpdateStrValueToRelationReq_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SApplyAddRelationToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SApplyAddRelationToRelationReq) */ {
 public:
  S2SApplyAddRelationToRelationReq();
  virtual ~S2SApplyAddRelationToRelationReq();

  S2SApplyAddRelationToRelationReq(const S2SApplyAddRelationToRelationReq& from);

  inline S2SApplyAddRelationToRelationReq& operator=(const S2SApplyAddRelationToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SApplyAddRelationToRelationReq(S2SApplyAddRelationToRelationReq&& from) noexcept
    : S2SApplyAddRelationToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SApplyAddRelationToRelationReq& operator=(S2SApplyAddRelationToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SApplyAddRelationToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SApplyAddRelationToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SApplyAddRelationToRelationReq*>(
               &_S2SApplyAddRelationToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    68;

  void Swap(S2SApplyAddRelationToRelationReq* other);
  friend void swap(S2SApplyAddRelationToRelationReq& a, S2SApplyAddRelationToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SApplyAddRelationToRelationReq* New() const final {
    return CreateMaybeMessage<S2SApplyAddRelationToRelationReq>(NULL);
  }

  S2SApplyAddRelationToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SApplyAddRelationToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SApplyAddRelationToRelationReq& from);
  void MergeFrom(const S2SApplyAddRelationToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SApplyAddRelationToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // bytes playername = 2;
  void clear_playername();
  static const int kPlayernameFieldNumber = 2;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // bytes message = 4;
  void clear_message();
  static const int kMessageFieldNumber = 4;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  #if LANG_CXX11
  void set_message(::std::string&& value);
  #endif
  void set_message(const char* value);
  void set_message(const void* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // uint64 playerid = 3;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 3;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SApplyAddRelationToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SApplyAddRelationToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SApplyAddRelationToGameAck) */ {
 public:
  S2SApplyAddRelationToGameAck();
  virtual ~S2SApplyAddRelationToGameAck();

  S2SApplyAddRelationToGameAck(const S2SApplyAddRelationToGameAck& from);

  inline S2SApplyAddRelationToGameAck& operator=(const S2SApplyAddRelationToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SApplyAddRelationToGameAck(S2SApplyAddRelationToGameAck&& from) noexcept
    : S2SApplyAddRelationToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SApplyAddRelationToGameAck& operator=(S2SApplyAddRelationToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SApplyAddRelationToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SApplyAddRelationToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SApplyAddRelationToGameAck*>(
               &_S2SApplyAddRelationToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    69;

  void Swap(S2SApplyAddRelationToGameAck* other);
  friend void swap(S2SApplyAddRelationToGameAck& a, S2SApplyAddRelationToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SApplyAddRelationToGameAck* New() const final {
    return CreateMaybeMessage<S2SApplyAddRelationToGameAck>(NULL);
  }

  S2SApplyAddRelationToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SApplyAddRelationToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SApplyAddRelationToGameAck& from);
  void MergeFrom(const S2SApplyAddRelationToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SApplyAddRelationToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // .KFMsg.PBRelation pbinvite = 3;
  bool has_pbinvite() const;
  void clear_pbinvite();
  static const int kPbinviteFieldNumber = 3;
  private:
  const ::KFMsg::PBRelation& _internal_pbinvite() const;
  public:
  const ::KFMsg::PBRelation& pbinvite() const;
  ::KFMsg::PBRelation* release_pbinvite();
  ::KFMsg::PBRelation* mutable_pbinvite();
  void set_allocated_pbinvite(::KFMsg::PBRelation* pbinvite);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SApplyAddRelationToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::KFMsg::PBRelation* pbinvite_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDelRelationInviteToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDelRelationInviteToRelationReq) */ {
 public:
  S2SDelRelationInviteToRelationReq();
  virtual ~S2SDelRelationInviteToRelationReq();

  S2SDelRelationInviteToRelationReq(const S2SDelRelationInviteToRelationReq& from);

  inline S2SDelRelationInviteToRelationReq& operator=(const S2SDelRelationInviteToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDelRelationInviteToRelationReq(S2SDelRelationInviteToRelationReq&& from) noexcept
    : S2SDelRelationInviteToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SDelRelationInviteToRelationReq& operator=(S2SDelRelationInviteToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDelRelationInviteToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDelRelationInviteToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SDelRelationInviteToRelationReq*>(
               &_S2SDelRelationInviteToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    70;

  void Swap(S2SDelRelationInviteToRelationReq* other);
  friend void swap(S2SDelRelationInviteToRelationReq& a, S2SDelRelationInviteToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDelRelationInviteToRelationReq* New() const final {
    return CreateMaybeMessage<S2SDelRelationInviteToRelationReq>(NULL);
  }

  S2SDelRelationInviteToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDelRelationInviteToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDelRelationInviteToRelationReq& from);
  void MergeFrom(const S2SDelRelationInviteToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDelRelationInviteToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // bytes listname = 2;
  void clear_listname();
  static const int kListnameFieldNumber = 2;
  const ::std::string& listname() const;
  void set_listname(const ::std::string& value);
  #if LANG_CXX11
  void set_listname(::std::string&& value);
  #endif
  void set_listname(const char* value);
  void set_listname(const void* value, size_t size);
  ::std::string* mutable_listname();
  ::std::string* release_listname();
  void set_allocated_listname(::std::string* listname);

  // uint64 selfplayerid = 3;
  void clear_selfplayerid();
  static const int kSelfplayeridFieldNumber = 3;
  ::google::protobuf::uint64 selfplayerid() const;
  void set_selfplayerid(::google::protobuf::uint64 value);

  // uint64 targetplayerid = 4;
  void clear_targetplayerid();
  static const int kTargetplayeridFieldNumber = 4;
  ::google::protobuf::uint64 targetplayerid() const;
  void set_targetplayerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDelRelationInviteToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::internal::ArenaStringPtr listname_;
  ::google::protobuf::uint64 selfplayerid_;
  ::google::protobuf::uint64 targetplayerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddRelationToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddRelationToRelationReq) */ {
 public:
  S2SAddRelationToRelationReq();
  virtual ~S2SAddRelationToRelationReq();

  S2SAddRelationToRelationReq(const S2SAddRelationToRelationReq& from);

  inline S2SAddRelationToRelationReq& operator=(const S2SAddRelationToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddRelationToRelationReq(S2SAddRelationToRelationReq&& from) noexcept
    : S2SAddRelationToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SAddRelationToRelationReq& operator=(S2SAddRelationToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddRelationToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddRelationToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SAddRelationToRelationReq*>(
               &_S2SAddRelationToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    71;

  void Swap(S2SAddRelationToRelationReq* other);
  friend void swap(S2SAddRelationToRelationReq& a, S2SAddRelationToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddRelationToRelationReq* New() const final {
    return CreateMaybeMessage<S2SAddRelationToRelationReq>(NULL);
  }

  S2SAddRelationToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddRelationToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddRelationToRelationReq& from);
  void MergeFrom(const S2SAddRelationToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddRelationToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // bytes playername = 3;
  void clear_playername();
  static const int kPlayernameFieldNumber = 3;
  const ::std::string& playername() const;
  void set_playername(const ::std::string& value);
  #if LANG_CXX11
  void set_playername(::std::string&& value);
  #endif
  void set_playername(const char* value);
  void set_playername(const void* value, size_t size);
  ::std::string* mutable_playername();
  ::std::string* release_playername();
  void set_allocated_playername(::std::string* playername);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddRelationToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::internal::ArenaStringPtr playername_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SAddRelationToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SAddRelationToGameAck) */ {
 public:
  S2SAddRelationToGameAck();
  virtual ~S2SAddRelationToGameAck();

  S2SAddRelationToGameAck(const S2SAddRelationToGameAck& from);

  inline S2SAddRelationToGameAck& operator=(const S2SAddRelationToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SAddRelationToGameAck(S2SAddRelationToGameAck&& from) noexcept
    : S2SAddRelationToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SAddRelationToGameAck& operator=(S2SAddRelationToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SAddRelationToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SAddRelationToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SAddRelationToGameAck*>(
               &_S2SAddRelationToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    72;

  void Swap(S2SAddRelationToGameAck* other);
  friend void swap(S2SAddRelationToGameAck& a, S2SAddRelationToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SAddRelationToGameAck* New() const final {
    return CreateMaybeMessage<S2SAddRelationToGameAck>(NULL);
  }

  S2SAddRelationToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SAddRelationToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SAddRelationToGameAck& from);
  void MergeFrom(const S2SAddRelationToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SAddRelationToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // .KFMsg.PBRelation pbrelation = 4;
  bool has_pbrelation() const;
  void clear_pbrelation();
  static const int kPbrelationFieldNumber = 4;
  private:
  const ::KFMsg::PBRelation& _internal_pbrelation() const;
  public:
  const ::KFMsg::PBRelation& pbrelation() const;
  ::KFMsg::PBRelation* release_pbrelation();
  ::KFMsg::PBRelation* mutable_pbrelation();
  void set_allocated_pbrelation(::KFMsg::PBRelation* pbrelation);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SAddRelationToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::KFMsg::PBRelation* pbrelation_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDelRelationToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDelRelationToRelationReq) */ {
 public:
  S2SDelRelationToRelationReq();
  virtual ~S2SDelRelationToRelationReq();

  S2SDelRelationToRelationReq(const S2SDelRelationToRelationReq& from);

  inline S2SDelRelationToRelationReq& operator=(const S2SDelRelationToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDelRelationToRelationReq(S2SDelRelationToRelationReq&& from) noexcept
    : S2SDelRelationToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SDelRelationToRelationReq& operator=(S2SDelRelationToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDelRelationToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDelRelationToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SDelRelationToRelationReq*>(
               &_S2SDelRelationToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    73;

  void Swap(S2SDelRelationToRelationReq* other);
  friend void swap(S2SDelRelationToRelationReq& a, S2SDelRelationToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDelRelationToRelationReq* New() const final {
    return CreateMaybeMessage<S2SDelRelationToRelationReq>(NULL);
  }

  S2SDelRelationToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDelRelationToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDelRelationToRelationReq& from);
  void MergeFrom(const S2SDelRelationToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDelRelationToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDelRelationToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SDelRelationToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SDelRelationToGameAck) */ {
 public:
  S2SDelRelationToGameAck();
  virtual ~S2SDelRelationToGameAck();

  S2SDelRelationToGameAck(const S2SDelRelationToGameAck& from);

  inline S2SDelRelationToGameAck& operator=(const S2SDelRelationToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SDelRelationToGameAck(S2SDelRelationToGameAck&& from) noexcept
    : S2SDelRelationToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SDelRelationToGameAck& operator=(S2SDelRelationToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SDelRelationToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SDelRelationToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SDelRelationToGameAck*>(
               &_S2SDelRelationToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    74;

  void Swap(S2SDelRelationToGameAck* other);
  friend void swap(S2SDelRelationToGameAck& a, S2SDelRelationToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SDelRelationToGameAck* New() const final {
    return CreateMaybeMessage<S2SDelRelationToGameAck>(NULL);
  }

  S2SDelRelationToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SDelRelationToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SDelRelationToGameAck& from);
  void MergeFrom(const S2SDelRelationToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SDelRelationToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes relationname = 1;
  void clear_relationname();
  static const int kRelationnameFieldNumber = 1;
  const ::std::string& relationname() const;
  void set_relationname(const ::std::string& value);
  #if LANG_CXX11
  void set_relationname(::std::string&& value);
  #endif
  void set_relationname(const char* value);
  void set_relationname(const void* value, size_t size);
  ::std::string* mutable_relationname();
  ::std::string* release_relationname();
  void set_allocated_relationname(::std::string* relationname);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 relationid = 3;
  void clear_relationid();
  static const int kRelationidFieldNumber = 3;
  ::google::protobuf::uint64 relationid() const;
  void set_relationid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SDelRelationToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr relationname_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 relationid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateFriendLinessToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateFriendLinessToRelationReq) */ {
 public:
  S2SUpdateFriendLinessToRelationReq();
  virtual ~S2SUpdateFriendLinessToRelationReq();

  S2SUpdateFriendLinessToRelationReq(const S2SUpdateFriendLinessToRelationReq& from);

  inline S2SUpdateFriendLinessToRelationReq& operator=(const S2SUpdateFriendLinessToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateFriendLinessToRelationReq(S2SUpdateFriendLinessToRelationReq&& from) noexcept
    : S2SUpdateFriendLinessToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SUpdateFriendLinessToRelationReq& operator=(S2SUpdateFriendLinessToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateFriendLinessToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateFriendLinessToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateFriendLinessToRelationReq*>(
               &_S2SUpdateFriendLinessToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    75;

  void Swap(S2SUpdateFriendLinessToRelationReq* other);
  friend void swap(S2SUpdateFriendLinessToRelationReq& a, S2SUpdateFriendLinessToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateFriendLinessToRelationReq* New() const final {
    return CreateMaybeMessage<S2SUpdateFriendLinessToRelationReq>(NULL);
  }

  S2SUpdateFriendLinessToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateFriendLinessToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateFriendLinessToRelationReq& from);
  void MergeFrom(const S2SUpdateFriendLinessToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateFriendLinessToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 selfplayerid = 2;
  void clear_selfplayerid();
  static const int kSelfplayeridFieldNumber = 2;
  ::google::protobuf::uint64 selfplayerid() const;
  void set_selfplayerid(::google::protobuf::uint64 value);

  // uint32 type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // uint32 friendliness = 4;
  void clear_friendliness();
  static const int kFriendlinessFieldNumber = 4;
  ::google::protobuf::uint32 friendliness() const;
  void set_friendliness(::google::protobuf::uint32 value);

  // uint64 targetplayerid = 3;
  void clear_targetplayerid();
  static const int kTargetplayeridFieldNumber = 3;
  ::google::protobuf::uint64 targetplayerid() const;
  void set_targetplayerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateFriendLinessToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 selfplayerid_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 friendliness_;
  ::google::protobuf::uint64 targetplayerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SUpdateFriendLinessToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SUpdateFriendLinessToGameAck) */ {
 public:
  S2SUpdateFriendLinessToGameAck();
  virtual ~S2SUpdateFriendLinessToGameAck();

  S2SUpdateFriendLinessToGameAck(const S2SUpdateFriendLinessToGameAck& from);

  inline S2SUpdateFriendLinessToGameAck& operator=(const S2SUpdateFriendLinessToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SUpdateFriendLinessToGameAck(S2SUpdateFriendLinessToGameAck&& from) noexcept
    : S2SUpdateFriendLinessToGameAck() {
    *this = ::std::move(from);
  }

  inline S2SUpdateFriendLinessToGameAck& operator=(S2SUpdateFriendLinessToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SUpdateFriendLinessToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SUpdateFriendLinessToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2SUpdateFriendLinessToGameAck*>(
               &_S2SUpdateFriendLinessToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    76;

  void Swap(S2SUpdateFriendLinessToGameAck* other);
  friend void swap(S2SUpdateFriendLinessToGameAck& a, S2SUpdateFriendLinessToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SUpdateFriendLinessToGameAck* New() const final {
    return CreateMaybeMessage<S2SUpdateFriendLinessToGameAck>(NULL);
  }

  S2SUpdateFriendLinessToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SUpdateFriendLinessToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SUpdateFriendLinessToGameAck& from);
  void MergeFrom(const S2SUpdateFriendLinessToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SUpdateFriendLinessToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 playerid = 1;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 1;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 targetplayerid = 2;
  void clear_targetplayerid();
  static const int kTargetplayeridFieldNumber = 2;
  ::google::protobuf::uint64 targetplayerid() const;
  void set_targetplayerid(::google::protobuf::uint64 value);

  // uint32 friendliness = 3;
  void clear_friendliness();
  static const int kFriendlinessFieldNumber = 3;
  ::google::protobuf::uint32 friendliness() const;
  void set_friendliness(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SUpdateFriendLinessToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 targetplayerid_;
  ::google::protobuf::uint32 friendliness_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2SRefuseRelationToRelationReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2SRefuseRelationToRelationReq) */ {
 public:
  S2SRefuseRelationToRelationReq();
  virtual ~S2SRefuseRelationToRelationReq();

  S2SRefuseRelationToRelationReq(const S2SRefuseRelationToRelationReq& from);

  inline S2SRefuseRelationToRelationReq& operator=(const S2SRefuseRelationToRelationReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2SRefuseRelationToRelationReq(S2SRefuseRelationToRelationReq&& from) noexcept
    : S2SRefuseRelationToRelationReq() {
    *this = ::std::move(from);
  }

  inline S2SRefuseRelationToRelationReq& operator=(S2SRefuseRelationToRelationReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2SRefuseRelationToRelationReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2SRefuseRelationToRelationReq* internal_default_instance() {
    return reinterpret_cast<const S2SRefuseRelationToRelationReq*>(
               &_S2SRefuseRelationToRelationReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    77;

  void Swap(S2SRefuseRelationToRelationReq* other);
  friend void swap(S2SRefuseRelationToRelationReq& a, S2SRefuseRelationToRelationReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2SRefuseRelationToRelationReq* New() const final {
    return CreateMaybeMessage<S2SRefuseRelationToRelationReq>(NULL);
  }

  S2SRefuseRelationToRelationReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2SRefuseRelationToRelationReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2SRefuseRelationToRelationReq& from);
  void MergeFrom(const S2SRefuseRelationToRelationReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2SRefuseRelationToRelationReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes refusename = 1;
  void clear_refusename();
  static const int kRefusenameFieldNumber = 1;
  const ::std::string& refusename() const;
  void set_refusename(const ::std::string& value);
  #if LANG_CXX11
  void set_refusename(::std::string&& value);
  #endif
  void set_refusename(const char* value);
  void set_refusename(const void* value, size_t size);
  ::std::string* mutable_refusename();
  ::std::string* release_refusename();
  void set_allocated_refusename(::std::string* refusename);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // uint64 refusevalue = 3;
  void clear_refusevalue();
  static const int kRefusevalueFieldNumber = 3;
  ::google::protobuf::uint64 refusevalue() const;
  void set_refusevalue(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2SRefuseRelationToRelationReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr refusename_;
  ::google::protobuf::uint64 playerid_;
  ::google::protobuf::uint64 refusevalue_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamCreateToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamCreateToTeamReq) */ {
 public:
  S2STeamCreateToTeamReq();
  virtual ~S2STeamCreateToTeamReq();

  S2STeamCreateToTeamReq(const S2STeamCreateToTeamReq& from);

  inline S2STeamCreateToTeamReq& operator=(const S2STeamCreateToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamCreateToTeamReq(S2STeamCreateToTeamReq&& from) noexcept
    : S2STeamCreateToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamCreateToTeamReq& operator=(S2STeamCreateToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamCreateToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamCreateToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamCreateToTeamReq*>(
               &_S2STeamCreateToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    78;

  void Swap(S2STeamCreateToTeamReq* other);
  friend void swap(S2STeamCreateToTeamReq& a, S2STeamCreateToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamCreateToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamCreateToTeamReq>(NULL);
  }

  S2STeamCreateToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamCreateToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamCreateToTeamReq& from);
  void MergeFrom(const S2STeamCreateToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamCreateToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes name = 2;
  void clear_name();
  static const int kNameFieldNumber = 2;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const void* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // bytes info = 3;
  void clear_info();
  static const int kInfoFieldNumber = 3;
  const ::std::string& info() const;
  void set_info(const ::std::string& value);
  #if LANG_CXX11
  void set_info(::std::string&& value);
  #endif
  void set_info(const char* value);
  void set_info(const void* value, size_t size);
  ::std::string* mutable_info();
  ::std::string* release_info();
  void set_allocated_info(::std::string* info);

  // .KFMsg.PBObject pbcaptain = 4;
  bool has_pbcaptain() const;
  void clear_pbcaptain();
  static const int kPbcaptainFieldNumber = 4;
  private:
  const ::KFMsg::PBObject& _internal_pbcaptain() const;
  public:
  const ::KFMsg::PBObject& pbcaptain() const;
  ::KFMsg::PBObject* release_pbcaptain();
  ::KFMsg::PBObject* mutable_pbcaptain();
  void set_allocated_pbcaptain(::KFMsg::PBObject* pbcaptain);

  // uint32 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamCreateToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr info_;
  ::KFMsg::PBObject* pbcaptain_;
  ::google::protobuf::uint32 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamJoinToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamJoinToGameAck) */ {
 public:
  S2STeamJoinToGameAck();
  virtual ~S2STeamJoinToGameAck();

  S2STeamJoinToGameAck(const S2STeamJoinToGameAck& from);

  inline S2STeamJoinToGameAck& operator=(const S2STeamJoinToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamJoinToGameAck(S2STeamJoinToGameAck&& from) noexcept
    : S2STeamJoinToGameAck() {
    *this = ::std::move(from);
  }

  inline S2STeamJoinToGameAck& operator=(S2STeamJoinToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamJoinToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamJoinToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2STeamJoinToGameAck*>(
               &_S2STeamJoinToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    79;

  void Swap(S2STeamJoinToGameAck* other);
  friend void swap(S2STeamJoinToGameAck& a, S2STeamJoinToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamJoinToGameAck* New() const final {
    return CreateMaybeMessage<S2STeamJoinToGameAck>(NULL);
  }

  S2STeamJoinToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamJoinToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamJoinToGameAck& from);
  void MergeFrom(const S2STeamJoinToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamJoinToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbteam = 2;
  bool has_pbteam() const;
  void clear_pbteam();
  static const int kPbteamFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbteam() const;
  public:
  const ::KFMsg::PBObject& pbteam() const;
  ::KFMsg::PBObject* release_pbteam();
  ::KFMsg::PBObject* mutable_pbteam();
  void set_allocated_pbteam(::KFMsg::PBObject* pbteam);

  // uint64 id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::uint64 id() const;
  void set_id(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamJoinToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbteam_;
  ::google::protobuf::uint64 id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamJoinFailedToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamJoinFailedToTeamReq) */ {
 public:
  S2STeamJoinFailedToTeamReq();
  virtual ~S2STeamJoinFailedToTeamReq();

  S2STeamJoinFailedToTeamReq(const S2STeamJoinFailedToTeamReq& from);

  inline S2STeamJoinFailedToTeamReq& operator=(const S2STeamJoinFailedToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamJoinFailedToTeamReq(S2STeamJoinFailedToTeamReq&& from) noexcept
    : S2STeamJoinFailedToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamJoinFailedToTeamReq& operator=(S2STeamJoinFailedToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamJoinFailedToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamJoinFailedToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamJoinFailedToTeamReq*>(
               &_S2STeamJoinFailedToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    80;

  void Swap(S2STeamJoinFailedToTeamReq* other);
  friend void swap(S2STeamJoinFailedToTeamReq& a, S2STeamJoinFailedToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamJoinFailedToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamJoinFailedToTeamReq>(NULL);
  }

  S2STeamJoinFailedToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamJoinFailedToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamJoinFailedToTeamReq& from);
  void MergeFrom(const S2STeamJoinFailedToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamJoinFailedToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamJoinFailedToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamOnlineQueryToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamOnlineQueryToTeamReq) */ {
 public:
  S2STeamOnlineQueryToTeamReq();
  virtual ~S2STeamOnlineQueryToTeamReq();

  S2STeamOnlineQueryToTeamReq(const S2STeamOnlineQueryToTeamReq& from);

  inline S2STeamOnlineQueryToTeamReq& operator=(const S2STeamOnlineQueryToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamOnlineQueryToTeamReq(S2STeamOnlineQueryToTeamReq&& from) noexcept
    : S2STeamOnlineQueryToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamOnlineQueryToTeamReq& operator=(S2STeamOnlineQueryToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamOnlineQueryToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamOnlineQueryToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamOnlineQueryToTeamReq*>(
               &_S2STeamOnlineQueryToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    81;

  void Swap(S2STeamOnlineQueryToTeamReq* other);
  friend void swap(S2STeamOnlineQueryToTeamReq& a, S2STeamOnlineQueryToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamOnlineQueryToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamOnlineQueryToTeamReq>(NULL);
  }

  S2STeamOnlineQueryToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamOnlineQueryToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamOnlineQueryToTeamReq& from);
  void MergeFrom(const S2STeamOnlineQueryToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamOnlineQueryToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamOnlineQueryToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamOnlineQueryToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamOnlineQueryToGameAck) */ {
 public:
  S2STeamOnlineQueryToGameAck();
  virtual ~S2STeamOnlineQueryToGameAck();

  S2STeamOnlineQueryToGameAck(const S2STeamOnlineQueryToGameAck& from);

  inline S2STeamOnlineQueryToGameAck& operator=(const S2STeamOnlineQueryToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamOnlineQueryToGameAck(S2STeamOnlineQueryToGameAck&& from) noexcept
    : S2STeamOnlineQueryToGameAck() {
    *this = ::std::move(from);
  }

  inline S2STeamOnlineQueryToGameAck& operator=(S2STeamOnlineQueryToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamOnlineQueryToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamOnlineQueryToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2STeamOnlineQueryToGameAck*>(
               &_S2STeamOnlineQueryToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    82;

  void Swap(S2STeamOnlineQueryToGameAck* other);
  friend void swap(S2STeamOnlineQueryToGameAck& a, S2STeamOnlineQueryToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamOnlineQueryToGameAck* New() const final {
    return CreateMaybeMessage<S2STeamOnlineQueryToGameAck>(NULL);
  }

  S2STeamOnlineQueryToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamOnlineQueryToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamOnlineQueryToGameAck& from);
  void MergeFrom(const S2STeamOnlineQueryToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamOnlineQueryToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbteam = 1;
  bool has_pbteam() const;
  void clear_pbteam();
  static const int kPbteamFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbteam() const;
  public:
  const ::KFMsg::PBObject& pbteam() const;
  ::KFMsg::PBObject* release_pbteam();
  ::KFMsg::PBObject* mutable_pbteam();
  void set_allocated_pbteam(::KFMsg::PBObject* pbteam);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamOnlineQueryToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbteam_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > SuperType;
  S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse();
  S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse& other);
  static const S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse*>(&_S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamIntValueToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamIntValueToTeamReq) */ {
 public:
  S2STeamIntValueToTeamReq();
  virtual ~S2STeamIntValueToTeamReq();

  S2STeamIntValueToTeamReq(const S2STeamIntValueToTeamReq& from);

  inline S2STeamIntValueToTeamReq& operator=(const S2STeamIntValueToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamIntValueToTeamReq(S2STeamIntValueToTeamReq&& from) noexcept
    : S2STeamIntValueToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamIntValueToTeamReq& operator=(S2STeamIntValueToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamIntValueToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamIntValueToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamIntValueToTeamReq*>(
               &_S2STeamIntValueToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    84;

  void Swap(S2STeamIntValueToTeamReq* other);
  friend void swap(S2STeamIntValueToTeamReq& a, S2STeamIntValueToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamIntValueToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamIntValueToTeamReq>(NULL);
  }

  S2STeamIntValueToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamIntValueToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamIntValueToTeamReq& from);
  void MergeFrom(const S2STeamIntValueToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamIntValueToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, uint64> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
      mutable_pbdata();

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamIntValueToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2STeamIntValueToTeamReq_PbdataEntry_DoNotUse,
      ::std::string, ::google::protobuf::uint64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      0 > pbdata_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse();
  S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse& other);
  static const S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse*>(&_S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamStrValueToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamStrValueToTeamReq) */ {
 public:
  S2STeamStrValueToTeamReq();
  virtual ~S2STeamStrValueToTeamReq();

  S2STeamStrValueToTeamReq(const S2STeamStrValueToTeamReq& from);

  inline S2STeamStrValueToTeamReq& operator=(const S2STeamStrValueToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamStrValueToTeamReq(S2STeamStrValueToTeamReq&& from) noexcept
    : S2STeamStrValueToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamStrValueToTeamReq& operator=(S2STeamStrValueToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamStrValueToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamStrValueToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamStrValueToTeamReq*>(
               &_S2STeamStrValueToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    86;

  void Swap(S2STeamStrValueToTeamReq* other);
  friend void swap(S2STeamStrValueToTeamReq& a, S2STeamStrValueToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamStrValueToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamStrValueToTeamReq>(NULL);
  }

  S2STeamStrValueToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamStrValueToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamStrValueToTeamReq& from);
  void MergeFrom(const S2STeamStrValueToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamStrValueToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamStrValueToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2STeamStrValueToTeamReq_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse, 
    ::std::string, ::google::protobuf::uint64,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
    0 > SuperType;
  S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse();
  S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse& other);
  static const S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse*>(&_S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamMemberIntValueToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamMemberIntValueToTeamReq) */ {
 public:
  S2STeamMemberIntValueToTeamReq();
  virtual ~S2STeamMemberIntValueToTeamReq();

  S2STeamMemberIntValueToTeamReq(const S2STeamMemberIntValueToTeamReq& from);

  inline S2STeamMemberIntValueToTeamReq& operator=(const S2STeamMemberIntValueToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamMemberIntValueToTeamReq(S2STeamMemberIntValueToTeamReq&& from) noexcept
    : S2STeamMemberIntValueToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamMemberIntValueToTeamReq& operator=(S2STeamMemberIntValueToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamMemberIntValueToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamMemberIntValueToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamMemberIntValueToTeamReq*>(
               &_S2STeamMemberIntValueToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    88;

  void Swap(S2STeamMemberIntValueToTeamReq* other);
  friend void swap(S2STeamMemberIntValueToTeamReq& a, S2STeamMemberIntValueToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamMemberIntValueToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamMemberIntValueToTeamReq>(NULL);
  }

  S2STeamMemberIntValueToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamMemberIntValueToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamMemberIntValueToTeamReq& from);
  void MergeFrom(const S2STeamMemberIntValueToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamMemberIntValueToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, uint64> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
      mutable_pbdata();

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamMemberIntValueToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2STeamMemberIntValueToTeamReq_PbdataEntry_DoNotUse,
      ::std::string, ::google::protobuf::uint64,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
      0 > pbdata_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse : public ::google::protobuf::internal::MapEntry<S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > {
public:
  typedef ::google::protobuf::internal::MapEntry<S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse, 
    ::std::string, ::std::string,
    ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
    ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
    0 > SuperType;
  S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse();
  S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse(::google::protobuf::Arena* arena);
  void MergeFrom(const S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse& other);
  static const S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse* internal_default_instance() { return reinterpret_cast<const S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse*>(&_S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse_default_instance_); }
  void MergeFrom(const ::google::protobuf::Message& other) final;
  ::google::protobuf::Metadata GetMetadata() const;
};

// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamMemberStrValueToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamMemberStrValueToTeamReq) */ {
 public:
  S2STeamMemberStrValueToTeamReq();
  virtual ~S2STeamMemberStrValueToTeamReq();

  S2STeamMemberStrValueToTeamReq(const S2STeamMemberStrValueToTeamReq& from);

  inline S2STeamMemberStrValueToTeamReq& operator=(const S2STeamMemberStrValueToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamMemberStrValueToTeamReq(S2STeamMemberStrValueToTeamReq&& from) noexcept
    : S2STeamMemberStrValueToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamMemberStrValueToTeamReq& operator=(S2STeamMemberStrValueToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamMemberStrValueToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamMemberStrValueToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamMemberStrValueToTeamReq*>(
               &_S2STeamMemberStrValueToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    90;

  void Swap(S2STeamMemberStrValueToTeamReq* other);
  friend void swap(S2STeamMemberStrValueToTeamReq& a, S2STeamMemberStrValueToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamMemberStrValueToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamMemberStrValueToTeamReq>(NULL);
  }

  S2STeamMemberStrValueToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamMemberStrValueToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamMemberStrValueToTeamReq& from);
  void MergeFrom(const S2STeamMemberStrValueToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamMemberStrValueToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, bytes> pbdata = 3;
  int pbdata_size() const;
  void clear_pbdata();
  static const int kPbdataFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::std::string >&
      pbdata() const;
  ::google::protobuf::Map< ::std::string, ::std::string >*
      mutable_pbdata();

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamMemberStrValueToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::MapField<
      S2STeamMemberStrValueToTeamReq_PbdataEntry_DoNotUse,
      ::std::string, ::std::string,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_BYTES,
      0 > pbdata_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamLeaveToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamLeaveToTeamReq) */ {
 public:
  S2STeamLeaveToTeamReq();
  virtual ~S2STeamLeaveToTeamReq();

  S2STeamLeaveToTeamReq(const S2STeamLeaveToTeamReq& from);

  inline S2STeamLeaveToTeamReq& operator=(const S2STeamLeaveToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamLeaveToTeamReq(S2STeamLeaveToTeamReq&& from) noexcept
    : S2STeamLeaveToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamLeaveToTeamReq& operator=(S2STeamLeaveToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamLeaveToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamLeaveToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamLeaveToTeamReq*>(
               &_S2STeamLeaveToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    91;

  void Swap(S2STeamLeaveToTeamReq* other);
  friend void swap(S2STeamLeaveToTeamReq& a, S2STeamLeaveToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamLeaveToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamLeaveToTeamReq>(NULL);
  }

  S2STeamLeaveToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamLeaveToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamLeaveToTeamReq& from);
  void MergeFrom(const S2STeamLeaveToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamLeaveToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // uint64 playerid = 2;
  void clear_playerid();
  static const int kPlayeridFieldNumber = 2;
  ::google::protobuf::uint64 playerid() const;
  void set_playerid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamLeaveToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 playerid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamKickToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamKickToTeamReq) */ {
 public:
  S2STeamKickToTeamReq();
  virtual ~S2STeamKickToTeamReq();

  S2STeamKickToTeamReq(const S2STeamKickToTeamReq& from);

  inline S2STeamKickToTeamReq& operator=(const S2STeamKickToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamKickToTeamReq(S2STeamKickToTeamReq&& from) noexcept
    : S2STeamKickToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamKickToTeamReq& operator=(S2STeamKickToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamKickToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamKickToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamKickToTeamReq*>(
               &_S2STeamKickToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    92;

  void Swap(S2STeamKickToTeamReq* other);
  friend void swap(S2STeamKickToTeamReq& a, S2STeamKickToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamKickToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamKickToTeamReq>(NULL);
  }

  S2STeamKickToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamKickToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamKickToTeamReq& from);
  void MergeFrom(const S2STeamKickToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamKickToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // uint64 captainid = 2;
  void clear_captainid();
  static const int kCaptainidFieldNumber = 2;
  ::google::protobuf::uint64 captainid() const;
  void set_captainid(::google::protobuf::uint64 value);

  // uint64 memberid = 3;
  void clear_memberid();
  static const int kMemberidFieldNumber = 3;
  ::google::protobuf::uint64 memberid() const;
  void set_memberid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamKickToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint64 captainid_;
  ::google::protobuf::uint64 memberid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamLeaveToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamLeaveToGameAck) */ {
 public:
  S2STeamLeaveToGameAck();
  virtual ~S2STeamLeaveToGameAck();

  S2STeamLeaveToGameAck(const S2STeamLeaveToGameAck& from);

  inline S2STeamLeaveToGameAck& operator=(const S2STeamLeaveToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamLeaveToGameAck(S2STeamLeaveToGameAck&& from) noexcept
    : S2STeamLeaveToGameAck() {
    *this = ::std::move(from);
  }

  inline S2STeamLeaveToGameAck& operator=(S2STeamLeaveToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamLeaveToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamLeaveToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2STeamLeaveToGameAck*>(
               &_S2STeamLeaveToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    93;

  void Swap(S2STeamLeaveToGameAck* other);
  friend void swap(S2STeamLeaveToGameAck& a, S2STeamLeaveToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamLeaveToGameAck* New() const final {
    return CreateMaybeMessage<S2STeamLeaveToGameAck>(NULL);
  }

  S2STeamLeaveToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamLeaveToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamLeaveToGameAck& from);
  void MergeFrom(const S2STeamLeaveToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamLeaveToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // uint32 type = 2;
  void clear_type();
  static const int kTypeFieldNumber = 2;
  ::google::protobuf::uint32 type() const;
  void set_type(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamLeaveToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint64 teamid_;
  ::google::protobuf::uint32 type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamTellInviteToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamTellInviteToGameAck) */ {
 public:
  S2STeamTellInviteToGameAck();
  virtual ~S2STeamTellInviteToGameAck();

  S2STeamTellInviteToGameAck(const S2STeamTellInviteToGameAck& from);

  inline S2STeamTellInviteToGameAck& operator=(const S2STeamTellInviteToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamTellInviteToGameAck(S2STeamTellInviteToGameAck&& from) noexcept
    : S2STeamTellInviteToGameAck() {
    *this = ::std::move(from);
  }

  inline S2STeamTellInviteToGameAck& operator=(S2STeamTellInviteToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamTellInviteToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamTellInviteToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2STeamTellInviteToGameAck*>(
               &_S2STeamTellInviteToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    94;

  void Swap(S2STeamTellInviteToGameAck* other);
  friend void swap(S2STeamTellInviteToGameAck& a, S2STeamTellInviteToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamTellInviteToGameAck* New() const final {
    return CreateMaybeMessage<S2STeamTellInviteToGameAck>(NULL);
  }

  S2STeamTellInviteToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamTellInviteToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamTellInviteToGameAck& from);
  void MergeFrom(const S2STeamTellInviteToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamTellInviteToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbplayer = 1;
  bool has_pbplayer() const;
  void clear_pbplayer();
  static const int kPbplayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbplayer() const;
  public:
  const ::KFMsg::PBObject& pbplayer() const;
  ::KFMsg::PBObject* release_pbplayer();
  ::KFMsg::PBObject* mutable_pbplayer();
  void set_allocated_pbplayer(::KFMsg::PBObject* pbplayer);

  // .KFMsg.PBObject pbteam = 2;
  bool has_pbteam() const;
  void clear_pbteam();
  static const int kPbteamFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbteam() const;
  public:
  const ::KFMsg::PBObject& pbteam() const;
  ::KFMsg::PBObject* release_pbteam();
  ::KFMsg::PBObject* mutable_pbteam();
  void set_allocated_pbteam(::KFMsg::PBObject* pbteam);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamTellInviteToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbplayer_;
  ::KFMsg::PBObject* pbteam_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamTellApplyToGameAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamTellApplyToGameAck) */ {
 public:
  S2STeamTellApplyToGameAck();
  virtual ~S2STeamTellApplyToGameAck();

  S2STeamTellApplyToGameAck(const S2STeamTellApplyToGameAck& from);

  inline S2STeamTellApplyToGameAck& operator=(const S2STeamTellApplyToGameAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamTellApplyToGameAck(S2STeamTellApplyToGameAck&& from) noexcept
    : S2STeamTellApplyToGameAck() {
    *this = ::std::move(from);
  }

  inline S2STeamTellApplyToGameAck& operator=(S2STeamTellApplyToGameAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamTellApplyToGameAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamTellApplyToGameAck* internal_default_instance() {
    return reinterpret_cast<const S2STeamTellApplyToGameAck*>(
               &_S2STeamTellApplyToGameAck_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    95;

  void Swap(S2STeamTellApplyToGameAck* other);
  friend void swap(S2STeamTellApplyToGameAck& a, S2STeamTellApplyToGameAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamTellApplyToGameAck* New() const final {
    return CreateMaybeMessage<S2STeamTellApplyToGameAck>(NULL);
  }

  S2STeamTellApplyToGameAck* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamTellApplyToGameAck>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamTellApplyToGameAck& from);
  void MergeFrom(const S2STeamTellApplyToGameAck& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamTellApplyToGameAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbplayer = 1;
  bool has_pbplayer() const;
  void clear_pbplayer();
  static const int kPbplayerFieldNumber = 1;
  private:
  const ::KFMsg::PBObject& _internal_pbplayer() const;
  public:
  const ::KFMsg::PBObject& pbplayer() const;
  ::KFMsg::PBObject* release_pbplayer();
  ::KFMsg::PBObject* mutable_pbplayer();
  void set_allocated_pbplayer(::KFMsg::PBObject* pbplayer);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamTellApplyToGameAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbplayer_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LIBPROTOC_EXPORT S2STeamAgreeToTeamReq : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:KFMsg.S2STeamAgreeToTeamReq) */ {
 public:
  S2STeamAgreeToTeamReq();
  virtual ~S2STeamAgreeToTeamReq();

  S2STeamAgreeToTeamReq(const S2STeamAgreeToTeamReq& from);

  inline S2STeamAgreeToTeamReq& operator=(const S2STeamAgreeToTeamReq& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  S2STeamAgreeToTeamReq(S2STeamAgreeToTeamReq&& from) noexcept
    : S2STeamAgreeToTeamReq() {
    *this = ::std::move(from);
  }

  inline S2STeamAgreeToTeamReq& operator=(S2STeamAgreeToTeamReq&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const S2STeamAgreeToTeamReq& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const S2STeamAgreeToTeamReq* internal_default_instance() {
    return reinterpret_cast<const S2STeamAgreeToTeamReq*>(
               &_S2STeamAgreeToTeamReq_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    96;

  void Swap(S2STeamAgreeToTeamReq* other);
  friend void swap(S2STeamAgreeToTeamReq& a, S2STeamAgreeToTeamReq& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline S2STeamAgreeToTeamReq* New() const final {
    return CreateMaybeMessage<S2STeamAgreeToTeamReq>(NULL);
  }

  S2STeamAgreeToTeamReq* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<S2STeamAgreeToTeamReq>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const S2STeamAgreeToTeamReq& from);
  void MergeFrom(const S2STeamAgreeToTeamReq& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(S2STeamAgreeToTeamReq* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // .KFMsg.PBObject pbplayer = 2;
  bool has_pbplayer() const;
  void clear_pbplayer();
  static const int kPbplayerFieldNumber = 2;
  private:
  const ::KFMsg::PBObject& _internal_pbplayer() const;
  public:
  const ::KFMsg::PBObject& pbplayer() const;
  ::KFMsg::PBObject* release_pbplayer();
  ::KFMsg::PBObject* mutable_pbplayer();
  void set_allocated_pbplayer(::KFMsg::PBObject* pbplayer);

  // uint64 teamid = 1;
  void clear_teamid();
  static const int kTeamidFieldNumber = 1;
  ::google::protobuf::uint64 teamid() const;
  void set_teamid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:KFMsg.S2STeamAgreeToTeamReq)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::KFMsg::PBObject* pbplayer_;
  ::google::protobuf::uint64 teamid_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_FrameServerMessage_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// S2SAddGateToWorldReq

// uint64 gameid = 1;
inline void S2SAddGateToWorldReq::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddGateToWorldReq::gameid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddGateToWorldReq.gameid)
  return gameid_;
}
inline void S2SAddGateToWorldReq::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddGateToWorldReq.gameid)
}

// repeated uint64 gateid = 2;
inline int S2SAddGateToWorldReq::gateid_size() const {
  return gateid_.size();
}
inline void S2SAddGateToWorldReq::clear_gateid() {
  gateid_.Clear();
}
inline ::google::protobuf::uint64 S2SAddGateToWorldReq::gateid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddGateToWorldReq.gateid)
  return gateid_.Get(index);
}
inline void S2SAddGateToWorldReq::set_gateid(int index, ::google::protobuf::uint64 value) {
  gateid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddGateToWorldReq.gateid)
}
inline void S2SAddGateToWorldReq::add_gateid(::google::protobuf::uint64 value) {
  gateid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SAddGateToWorldReq.gateid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SAddGateToWorldReq::gateid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SAddGateToWorldReq.gateid)
  return gateid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SAddGateToWorldReq::mutable_gateid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SAddGateToWorldReq.gateid)
  return &gateid_;
}

// -------------------------------------------------------------------

// S2SRemoveGateToWorldReq

// uint64 gameid = 1;
inline void S2SRemoveGateToWorldReq::clear_gameid() {
  gameid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRemoveGateToWorldReq::gameid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRemoveGateToWorldReq.gameid)
  return gameid_;
}
inline void S2SRemoveGateToWorldReq::set_gameid(::google::protobuf::uint64 value) {
  
  gameid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRemoveGateToWorldReq.gameid)
}

// uint64 gateid = 2;
inline void S2SRemoveGateToWorldReq::clear_gateid() {
  gateid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRemoveGateToWorldReq::gateid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRemoveGateToWorldReq.gateid)
  return gateid_;
}
inline void S2SRemoveGateToWorldReq::set_gateid(::google::protobuf::uint64 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRemoveGateToWorldReq.gateid)
}

// -------------------------------------------------------------------

// S2SLoginToLoginReq

// bytes ip = 1;
inline void S2SLoginToLoginReq::clear_ip() {
  ip_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLoginToLoginReq::ip() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginReq.ip)
  return ip_.GetNoArena();
}
inline void S2SLoginToLoginReq::set_ip(const ::std::string& value) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginReq.ip)
}
#if LANG_CXX11
inline void S2SLoginToLoginReq::set_ip(::std::string&& value) {
  
  ip_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLoginToLoginReq.ip)
}
#endif
inline void S2SLoginToLoginReq::set_ip(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLoginToLoginReq.ip)
}
inline void S2SLoginToLoginReq::set_ip(const void* value, size_t size) {
  
  ip_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLoginToLoginReq.ip)
}
inline ::std::string* S2SLoginToLoginReq::mutable_ip() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginToLoginReq.ip)
  return ip_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLoginToLoginReq::release_ip() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginToLoginReq.ip)
  
  return ip_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLoginToLoginReq::set_allocated_ip(::std::string* ip) {
  if (ip != NULL) {
    
  } else {
    
  }
  ip_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ip);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginToLoginReq.ip)
}

// bytes token = 2;
inline void S2SLoginToLoginReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SLoginToLoginReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginReq.token)
  return token_.GetNoArena();
}
inline void S2SLoginToLoginReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginReq.token)
}
#if LANG_CXX11
inline void S2SLoginToLoginReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SLoginToLoginReq.token)
}
#endif
inline void S2SLoginToLoginReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SLoginToLoginReq.token)
}
inline void S2SLoginToLoginReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SLoginToLoginReq.token)
}
inline ::std::string* S2SLoginToLoginReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginToLoginReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SLoginToLoginReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginToLoginReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SLoginToLoginReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginToLoginReq.token)
}

// uint64 accountid = 3;
inline void S2SLoginToLoginReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginReq.accountid)
  return accountid_;
}
inline void S2SLoginToLoginReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginReq.accountid)
}

// uint64 sessionid = 4;
inline void S2SLoginToLoginReq::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginReq::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginReq.sessionid)
  return sessionid_;
}
inline void S2SLoginToLoginReq::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginReq.sessionid)
}

// -------------------------------------------------------------------

// S2SLoginToGateAck

// uint32 result = 1;
inline void S2SLoginToGateAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginToGateAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGateAck.result)
  return result_;
}
inline void S2SLoginToGateAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToGateAck.result)
}

// uint64 accountid = 2;
inline void S2SLoginToGateAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToGateAck::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGateAck.accountid)
  return accountid_;
}
inline void S2SLoginToGateAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToGateAck.accountid)
}

// uint64 sessionid = 3;
inline void S2SLoginToGateAck::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToGateAck::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGateAck.sessionid)
  return sessionid_;
}
inline void S2SLoginToGateAck::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToGateAck.sessionid)
}

// uint64 bantime = 4;
inline void S2SLoginToGateAck::clear_bantime() {
  bantime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToGateAck::bantime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGateAck.bantime)
  return bantime_;
}
inline void S2SLoginToGateAck::set_bantime(::google::protobuf::uint64 value) {
  
  bantime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToGateAck.bantime)
}

// -------------------------------------------------------------------

// S2SLoginToWorldReq

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SLoginToWorldReq::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoginToWorldReq::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoginToWorldReq::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToWorldReq.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoginToWorldReq::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginToWorldReq.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoginToWorldReq::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginToWorldReq.pblogin)
  return pblogin_;
}
inline void S2SLoginToWorldReq::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pblogin_);
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginToWorldReq.pblogin)
}

// -------------------------------------------------------------------

// S2SLoginToLoginAck

// uint32 result = 1;
inline void S2SLoginToLoginAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoginToLoginAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginAck.result)
  return result_;
}
inline void S2SLoginToLoginAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginAck.result)
}

// uint64 gateid = 2;
inline void S2SLoginToLoginAck::clear_gateid() {
  gateid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginAck::gateid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginAck.gateid)
  return gateid_;
}
inline void S2SLoginToLoginAck::set_gateid(::google::protobuf::uint64 value) {
  
  gateid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginAck.gateid)
}

// uint64 accountid = 3;
inline void S2SLoginToLoginAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginAck::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginAck.accountid)
  return accountid_;
}
inline void S2SLoginToLoginAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginAck.accountid)
}

// uint64 sessionid = 4;
inline void S2SLoginToLoginAck::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLoginToLoginAck::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToLoginAck.sessionid)
  return sessionid_;
}
inline void S2SLoginToLoginAck::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoginToLoginAck.sessionid)
}

// -------------------------------------------------------------------

// S2SLoginToGameReq

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SLoginToGameReq::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoginToGameReq::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoginToGameReq::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoginToGameReq.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoginToGameReq::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoginToGameReq.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoginToGameReq::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoginToGameReq.pblogin)
  return pblogin_;
}
inline void S2SLoginToGameReq::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pblogin_);
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoginToGameReq.pblogin)
}

// -------------------------------------------------------------------

// S2SEnterToGateAck

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SEnterToGateAck::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline const ::KFMsg::PBLoginData& S2SEnterToGateAck::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SEnterToGateAck::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SEnterToGateAck.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SEnterToGateAck::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SEnterToGateAck.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SEnterToGateAck::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SEnterToGateAck.pblogin)
  return pblogin_;
}
inline void S2SEnterToGateAck::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pblogin_);
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SEnterToGateAck.pblogin)
}

// .KFMsg.PBObject playerdata = 2;
inline bool S2SEnterToGateAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SEnterToGateAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& S2SEnterToGateAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SEnterToGateAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SEnterToGateAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SEnterToGateAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SEnterToGateAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SEnterToGateAck.playerdata)
  return playerdata_;
}
inline void S2SEnterToGateAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SEnterToGateAck.playerdata)
}

// uint64 servertime = 3;
inline void S2SEnterToGateAck::clear_servertime() {
  servertime_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SEnterToGateAck::servertime() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SEnterToGateAck.servertime)
  return servertime_;
}
inline void S2SEnterToGateAck::set_servertime(::google::protobuf::uint64 value) {
  
  servertime_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SEnterToGateAck.servertime)
}

// -------------------------------------------------------------------

// S2SLogoutToGameReq

// uint64 playerid = 1;
inline void S2SLogoutToGameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLogoutToGameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLogoutToGameReq.playerid)
  return playerid_;
}
inline void S2SLogoutToGameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLogoutToGameReq.playerid)
}

// -------------------------------------------------------------------

// S2SDisconnectToGameReq

// uint64 playerid = 1;
inline void S2SDisconnectToGameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDisconnectToGameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDisconnectToGameReq.playerid)
  return playerid_;
}
inline void S2SDisconnectToGameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDisconnectToGameReq.playerid)
}

// -------------------------------------------------------------------

// S2SLeaveToGameReq

// uint64 playerid = 1;
inline void S2SLeaveToGameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SLeaveToGameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLeaveToGameReq.playerid)
  return playerid_;
}
inline void S2SLeaveToGameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLeaveToGameReq.playerid)
}

// -------------------------------------------------------------------

// S2SConnectToGameReq

// repeated .KFMsg.PBLoginData pblogin = 1;
inline int S2SConnectToGameReq::pblogin_size() const {
  return pblogin_.size();
}
inline ::KFMsg::PBLoginData* S2SConnectToGameReq::mutable_pblogin(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SConnectToGameReq.pblogin)
  return pblogin_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBLoginData >*
S2SConnectToGameReq::mutable_pblogin() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SConnectToGameReq.pblogin)
  return &pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SConnectToGameReq::pblogin(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SConnectToGameReq.pblogin)
  return pblogin_.Get(index);
}
inline ::KFMsg::PBLoginData* S2SConnectToGameReq::add_pblogin() {
  // @@protoc_insertion_point(field_add:KFMsg.S2SConnectToGameReq.pblogin)
  return pblogin_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBLoginData >&
S2SConnectToGameReq::pblogin() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SConnectToGameReq.pblogin)
  return pblogin_;
}

// -------------------------------------------------------------------

// S2SReLoginToGameReq

// bytes token = 1;
inline void S2SReLoginToGameReq::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SReLoginToGameReq::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReLoginToGameReq.token)
  return token_.GetNoArena();
}
inline void S2SReLoginToGameReq::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SReLoginToGameReq.token)
}
#if LANG_CXX11
inline void S2SReLoginToGameReq::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SReLoginToGameReq.token)
}
#endif
inline void S2SReLoginToGameReq::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SReLoginToGameReq.token)
}
inline void S2SReLoginToGameReq::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SReLoginToGameReq.token)
}
inline ::std::string* S2SReLoginToGameReq::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SReLoginToGameReq.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SReLoginToGameReq::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SReLoginToGameReq.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SReLoginToGameReq::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SReLoginToGameReq.token)
}

// uint64 playerid = 2;
inline void S2SReLoginToGameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReLoginToGameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReLoginToGameReq.playerid)
  return playerid_;
}
inline void S2SReLoginToGameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReLoginToGameReq.playerid)
}

// uint64 sessionid = 3;
inline void S2SReLoginToGameReq::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReLoginToGameReq::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReLoginToGameReq.sessionid)
  return sessionid_;
}
inline void S2SReLoginToGameReq::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReLoginToGameReq.sessionid)
}

// uint64 accountid = 4;
inline void S2SReLoginToGameReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReLoginToGameReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReLoginToGameReq.accountid)
  return accountid_;
}
inline void S2SReLoginToGameReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReLoginToGameReq.accountid)
}

// -------------------------------------------------------------------

// S2SReLoginToGateAck

// bytes token = 1;
inline void S2SReLoginToGateAck::clear_token() {
  token_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SReLoginToGateAck::token() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReLoginToGateAck.token)
  return token_.GetNoArena();
}
inline void S2SReLoginToGateAck::set_token(const ::std::string& value) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SReLoginToGateAck.token)
}
#if LANG_CXX11
inline void S2SReLoginToGateAck::set_token(::std::string&& value) {
  
  token_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SReLoginToGateAck.token)
}
#endif
inline void S2SReLoginToGateAck::set_token(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SReLoginToGateAck.token)
}
inline void S2SReLoginToGateAck::set_token(const void* value, size_t size) {
  
  token_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SReLoginToGateAck.token)
}
inline ::std::string* S2SReLoginToGateAck::mutable_token() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SReLoginToGateAck.token)
  return token_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SReLoginToGateAck::release_token() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SReLoginToGateAck.token)
  
  return token_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SReLoginToGateAck::set_allocated_token(::std::string* token) {
  if (token != NULL) {
    
  } else {
    
  }
  token_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), token);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SReLoginToGateAck.token)
}

// uint64 playerid = 2;
inline void S2SReLoginToGateAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReLoginToGateAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReLoginToGateAck.playerid)
  return playerid_;
}
inline void S2SReLoginToGateAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReLoginToGateAck.playerid)
}

// uint64 sessionid = 3;
inline void S2SReLoginToGateAck::clear_sessionid() {
  sessionid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReLoginToGateAck::sessionid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReLoginToGateAck.sessionid)
  return sessionid_;
}
inline void S2SReLoginToGateAck::set_sessionid(::google::protobuf::uint64 value) {
  
  sessionid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReLoginToGateAck.sessionid)
}

// uint64 accountid = 4;
inline void S2SReLoginToGateAck::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SReLoginToGateAck::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SReLoginToGateAck.accountid)
  return accountid_;
}
inline void S2SReLoginToGateAck::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SReLoginToGateAck.accountid)
}

// -------------------------------------------------------------------

// S2SLoadPlayerToDataReq

// .KFMsg.PBLoginData pblogin = 1;
inline bool S2SLoadPlayerToDataReq::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoadPlayerToDataReq::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoadPlayerToDataReq::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoadPlayerToDataReq.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoadPlayerToDataReq::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoadPlayerToDataReq.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoadPlayerToDataReq::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoadPlayerToDataReq.pblogin)
  return pblogin_;
}
inline void S2SLoadPlayerToDataReq::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pblogin_);
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoadPlayerToDataReq.pblogin)
}

// -------------------------------------------------------------------

// S2SLoadPlayerToGameAck

// uint32 result = 1;
inline void S2SLoadPlayerToGameAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SLoadPlayerToGameAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoadPlayerToGameAck.result)
  return result_;
}
inline void S2SLoadPlayerToGameAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SLoadPlayerToGameAck.result)
}

// .KFMsg.PBLoginData pblogin = 2;
inline bool S2SLoadPlayerToGameAck::has_pblogin() const {
  return this != internal_default_instance() && pblogin_ != NULL;
}
inline const ::KFMsg::PBLoginData& S2SLoadPlayerToGameAck::_internal_pblogin() const {
  return *pblogin_;
}
inline const ::KFMsg::PBLoginData& S2SLoadPlayerToGameAck::pblogin() const {
  const ::KFMsg::PBLoginData* p = pblogin_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoadPlayerToGameAck.pblogin)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBLoginData*>(
      &::KFMsg::_PBLoginData_default_instance_);
}
inline ::KFMsg::PBLoginData* S2SLoadPlayerToGameAck::release_pblogin() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoadPlayerToGameAck.pblogin)
  
  ::KFMsg::PBLoginData* temp = pblogin_;
  pblogin_ = NULL;
  return temp;
}
inline ::KFMsg::PBLoginData* S2SLoadPlayerToGameAck::mutable_pblogin() {
  
  if (pblogin_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBLoginData>(GetArenaNoVirtual());
    pblogin_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoadPlayerToGameAck.pblogin)
  return pblogin_;
}
inline void S2SLoadPlayerToGameAck::set_allocated_pblogin(::KFMsg::PBLoginData* pblogin) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pblogin_);
  }
  if (pblogin) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pblogin = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pblogin, submessage_arena);
    }
    
  } else {
    
  }
  pblogin_ = pblogin;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoadPlayerToGameAck.pblogin)
}

// .KFMsg.PBObject playerdata = 3;
inline bool S2SLoadPlayerToGameAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SLoadPlayerToGameAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& S2SLoadPlayerToGameAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SLoadPlayerToGameAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SLoadPlayerToGameAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SLoadPlayerToGameAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SLoadPlayerToGameAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SLoadPlayerToGameAck.playerdata)
  return playerdata_;
}
inline void S2SLoadPlayerToGameAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SLoadPlayerToGameAck.playerdata)
}

// -------------------------------------------------------------------

// S2SSavePlayerToDataReq

// uint64 id = 1;
inline void S2SSavePlayerToDataReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSavePlayerToDataReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSavePlayerToDataReq.id)
  return id_;
}
inline void S2SSavePlayerToDataReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSavePlayerToDataReq.id)
}

// uint32 zoneid = 2;
inline void S2SSavePlayerToDataReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SSavePlayerToDataReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSavePlayerToDataReq.zoneid)
  return zoneid_;
}
inline void S2SSavePlayerToDataReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSavePlayerToDataReq.zoneid)
}

// uint32 flag = 3;
inline void S2SSavePlayerToDataReq::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 S2SSavePlayerToDataReq::flag() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSavePlayerToDataReq.flag)
  return flag_;
}
inline void S2SSavePlayerToDataReq::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSavePlayerToDataReq.flag)
}

// .KFMsg.PBObject data = 4;
inline bool S2SSavePlayerToDataReq::has_data() const {
  return this != internal_default_instance() && data_ != NULL;
}
inline const ::KFMsg::PBObject& S2SSavePlayerToDataReq::_internal_data() const {
  return *data_;
}
inline const ::KFMsg::PBObject& S2SSavePlayerToDataReq::data() const {
  const ::KFMsg::PBObject* p = data_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SSavePlayerToDataReq.data)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SSavePlayerToDataReq::release_data() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSavePlayerToDataReq.data)
  
  ::KFMsg::PBObject* temp = data_;
  data_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SSavePlayerToDataReq::mutable_data() {
  
  if (data_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    data_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSavePlayerToDataReq.data)
  return data_;
}
inline void S2SSavePlayerToDataReq::set_allocated_data(::KFMsg::PBObject* data) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(data_);
  }
  if (data) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      data = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, data, submessage_arena);
    }
    
  } else {
    
  }
  data_ = data;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSavePlayerToDataReq.data)
}

// -------------------------------------------------------------------

// S2SSavePlayerToGameAck

// uint64 id = 1;
inline void S2SSavePlayerToGameAck::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSavePlayerToGameAck::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSavePlayerToGameAck.id)
  return id_;
}
inline void S2SSavePlayerToGameAck::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSavePlayerToGameAck.id)
}

// -------------------------------------------------------------------

// S2SQueryPlayerToDataReq

// uint64 playerid = 1;
inline void S2SQueryPlayerToDataReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryPlayerToDataReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryPlayerToDataReq.playerid)
  return playerid_;
}
inline void S2SQueryPlayerToDataReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryPlayerToDataReq.playerid)
}

// uint32 zoneid = 2;
inline void S2SQueryPlayerToDataReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryPlayerToDataReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryPlayerToDataReq.zoneid)
  return zoneid_;
}
inline void S2SQueryPlayerToDataReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryPlayerToDataReq.zoneid)
}

// -------------------------------------------------------------------

// S2SQueryPlayerToGameAck

// uint32 result = 1;
inline void S2SQueryPlayerToGameAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryPlayerToGameAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryPlayerToGameAck.result)
  return result_;
}
inline void S2SQueryPlayerToGameAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryPlayerToGameAck.result)
}

// .KFMsg.PBObject playerdata = 2;
inline bool S2SQueryPlayerToGameAck::has_playerdata() const {
  return this != internal_default_instance() && playerdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SQueryPlayerToGameAck::_internal_playerdata() const {
  return *playerdata_;
}
inline const ::KFMsg::PBObject& S2SQueryPlayerToGameAck::playerdata() const {
  const ::KFMsg::PBObject* p = playerdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryPlayerToGameAck.playerdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SQueryPlayerToGameAck::release_playerdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryPlayerToGameAck.playerdata)
  
  ::KFMsg::PBObject* temp = playerdata_;
  playerdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SQueryPlayerToGameAck::mutable_playerdata() {
  
  if (playerdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    playerdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryPlayerToGameAck.playerdata)
  return playerdata_;
}
inline void S2SQueryPlayerToGameAck::set_allocated_playerdata(::KFMsg::PBObject* playerdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(playerdata_);
  }
  if (playerdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      playerdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, playerdata, submessage_arena);
    }
    
  } else {
    
  }
  playerdata_ = playerdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryPlayerToGameAck.playerdata)
}

// -------------------------------------------------------------------

// S2SSyncUpdateDataFromServer

// bytes data_name = 1;
inline void S2SSyncUpdateDataFromServer::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSyncUpdateDataFromServer::data_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSyncUpdateDataFromServer.data_name)
  return data_name_.GetNoArena();
}
inline void S2SSyncUpdateDataFromServer::set_data_name(const ::std::string& value) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSyncUpdateDataFromServer.data_name)
}
#if LANG_CXX11
inline void S2SSyncUpdateDataFromServer::set_data_name(::std::string&& value) {
  
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSyncUpdateDataFromServer.data_name)
}
#endif
inline void S2SSyncUpdateDataFromServer::set_data_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSyncUpdateDataFromServer.data_name)
}
inline void S2SSyncUpdateDataFromServer::set_data_name(const void* value, size_t size) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSyncUpdateDataFromServer.data_name)
}
inline ::std::string* S2SSyncUpdateDataFromServer::mutable_data_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSyncUpdateDataFromServer.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSyncUpdateDataFromServer::release_data_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSyncUpdateDataFromServer.data_name)
  
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSyncUpdateDataFromServer::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    
  } else {
    
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSyncUpdateDataFromServer.data_name)
}

// .KFMsg.PBObject pbdata = 2;
inline bool S2SSyncUpdateDataFromServer::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SSyncUpdateDataFromServer::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& S2SSyncUpdateDataFromServer::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SSyncUpdateDataFromServer.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SSyncUpdateDataFromServer::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSyncUpdateDataFromServer.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SSyncUpdateDataFromServer::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSyncUpdateDataFromServer.pbdata)
  return pbdata_;
}
inline void S2SSyncUpdateDataFromServer::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSyncUpdateDataFromServer.pbdata)
}

// -------------------------------------------------------------------

// S2SSyncAddDataFromServer

// bytes data_name = 1;
inline void S2SSyncAddDataFromServer::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSyncAddDataFromServer::data_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSyncAddDataFromServer.data_name)
  return data_name_.GetNoArena();
}
inline void S2SSyncAddDataFromServer::set_data_name(const ::std::string& value) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSyncAddDataFromServer.data_name)
}
#if LANG_CXX11
inline void S2SSyncAddDataFromServer::set_data_name(::std::string&& value) {
  
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSyncAddDataFromServer.data_name)
}
#endif
inline void S2SSyncAddDataFromServer::set_data_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSyncAddDataFromServer.data_name)
}
inline void S2SSyncAddDataFromServer::set_data_name(const void* value, size_t size) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSyncAddDataFromServer.data_name)
}
inline ::std::string* S2SSyncAddDataFromServer::mutable_data_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSyncAddDataFromServer.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSyncAddDataFromServer::release_data_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSyncAddDataFromServer.data_name)
  
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSyncAddDataFromServer::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    
  } else {
    
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSyncAddDataFromServer.data_name)
}

// .KFMsg.PBObject pbdata = 2;
inline bool S2SSyncAddDataFromServer::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SSyncAddDataFromServer::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& S2SSyncAddDataFromServer::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SSyncAddDataFromServer.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SSyncAddDataFromServer::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSyncAddDataFromServer.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SSyncAddDataFromServer::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSyncAddDataFromServer.pbdata)
  return pbdata_;
}
inline void S2SSyncAddDataFromServer::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSyncAddDataFromServer.pbdata)
}

// -------------------------------------------------------------------

// S2SSyncRemoveDataFromServer

// bytes data_name = 1;
inline void S2SSyncRemoveDataFromServer::clear_data_name() {
  data_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSyncRemoveDataFromServer::data_name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSyncRemoveDataFromServer.data_name)
  return data_name_.GetNoArena();
}
inline void S2SSyncRemoveDataFromServer::set_data_name(const ::std::string& value) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSyncRemoveDataFromServer.data_name)
}
#if LANG_CXX11
inline void S2SSyncRemoveDataFromServer::set_data_name(::std::string&& value) {
  
  data_name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSyncRemoveDataFromServer.data_name)
}
#endif
inline void S2SSyncRemoveDataFromServer::set_data_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSyncRemoveDataFromServer.data_name)
}
inline void S2SSyncRemoveDataFromServer::set_data_name(const void* value, size_t size) {
  
  data_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSyncRemoveDataFromServer.data_name)
}
inline ::std::string* S2SSyncRemoveDataFromServer::mutable_data_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSyncRemoveDataFromServer.data_name)
  return data_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSyncRemoveDataFromServer::release_data_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSyncRemoveDataFromServer.data_name)
  
  return data_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSyncRemoveDataFromServer::set_allocated_data_name(::std::string* data_name) {
  if (data_name != NULL) {
    
  } else {
    
  }
  data_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data_name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSyncRemoveDataFromServer.data_name)
}

// .KFMsg.PBObject pbdata = 2;
inline bool S2SSyncRemoveDataFromServer::has_pbdata() const {
  return this != internal_default_instance() && pbdata_ != NULL;
}
inline const ::KFMsg::PBObject& S2SSyncRemoveDataFromServer::_internal_pbdata() const {
  return *pbdata_;
}
inline const ::KFMsg::PBObject& S2SSyncRemoveDataFromServer::pbdata() const {
  const ::KFMsg::PBObject* p = pbdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SSyncRemoveDataFromServer.pbdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2SSyncRemoveDataFromServer::release_pbdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSyncRemoveDataFromServer.pbdata)
  
  ::KFMsg::PBObject* temp = pbdata_;
  pbdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2SSyncRemoveDataFromServer::mutable_pbdata() {
  
  if (pbdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSyncRemoveDataFromServer.pbdata)
  return pbdata_;
}
inline void S2SSyncRemoveDataFromServer::set_allocated_pbdata(::KFMsg::PBObject* pbdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbdata_);
  }
  if (pbdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbdata, submessage_arena);
    }
    
  } else {
    
  }
  pbdata_ = pbdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSyncRemoveDataFromServer.pbdata)
}

// -------------------------------------------------------------------

// S2SPlayerEnterToWorldReq

// uint64 playerid = 1;
inline void S2SPlayerEnterToWorldReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterToWorldReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterToWorldReq.playerid)
  return playerid_;
}
inline void S2SPlayerEnterToWorldReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterToWorldReq.playerid)
}

// uint64 accountid = 2;
inline void S2SPlayerEnterToWorldReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerEnterToWorldReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerEnterToWorldReq.accountid)
  return accountid_;
}
inline void S2SPlayerEnterToWorldReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerEnterToWorldReq.accountid)
}

// -------------------------------------------------------------------

// S2SPlayerLeaveToWorldReq

// uint64 playerid = 1;
inline void S2SPlayerLeaveToWorldReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveToWorldReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveToWorldReq.playerid)
  return playerid_;
}
inline void S2SPlayerLeaveToWorldReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveToWorldReq.playerid)
}

// uint64 accountid = 2;
inline void S2SPlayerLeaveToWorldReq::clear_accountid() {
  accountid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SPlayerLeaveToWorldReq::accountid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SPlayerLeaveToWorldReq.accountid)
  return accountid_;
}
inline void S2SPlayerLeaveToWorldReq::set_accountid(::google::protobuf::uint64 value) {
  
  accountid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SPlayerLeaveToWorldReq.accountid)
}

// -------------------------------------------------------------------

// S2SKickPlayerToGameReq

// uint32 type = 1;
inline void S2SKickPlayerToGameReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 S2SKickPlayerToGameReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickPlayerToGameReq.type)
  return type_;
}
inline void S2SKickPlayerToGameReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickPlayerToGameReq.type)
}

// uint64 playerid = 2;
inline void S2SKickPlayerToGameReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickPlayerToGameReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickPlayerToGameReq.playerid)
  return playerid_;
}
inline void S2SKickPlayerToGameReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickPlayerToGameReq.playerid)
}

// -------------------------------------------------------------------

// S2SKickPlayerToGateReq

// uint32 type = 1;
inline void S2SKickPlayerToGateReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 S2SKickPlayerToGateReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickPlayerToGateReq.type)
  return type_;
}
inline void S2SKickPlayerToGateReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickPlayerToGateReq.type)
}

// uint64 playerid = 2;
inline void S2SKickPlayerToGateReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SKickPlayerToGateReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SKickPlayerToGateReq.playerid)
  return playerid_;
}
inline void S2SKickPlayerToGateReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SKickPlayerToGateReq.playerid)
}

// -------------------------------------------------------------------

// S2SBroadcastToGameReq

// uint32 msgid = 1;
inline void S2SBroadcastToGameReq::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToGameReq::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGameReq.msgid)
  return msgid_;
}
inline void S2SBroadcastToGameReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGameReq.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToGameReq::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToGameReq::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGameReq.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToGameReq::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGameReq.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToGameReq::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToGameReq.msgdata)
}
#endif
inline void S2SBroadcastToGameReq::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToGameReq.msgdata)
}
inline void S2SBroadcastToGameReq::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToGameReq.msgdata)
}
inline ::std::string* S2SBroadcastToGameReq::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToGameReq.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToGameReq::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToGameReq.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToGameReq::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToGameReq.msgdata)
}

// -------------------------------------------------------------------

// S2SBroadcastToGameAck

// uint32 msgid = 1;
inline void S2SBroadcastToGameAck::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToGameAck::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGameAck.msgid)
  return msgid_;
}
inline void S2SBroadcastToGameAck::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGameAck.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToGameAck::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToGameAck::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGameAck.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToGameAck::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGameAck.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToGameAck::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToGameAck.msgdata)
}
#endif
inline void S2SBroadcastToGameAck::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToGameAck.msgdata)
}
inline void S2SBroadcastToGameAck::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToGameAck.msgdata)
}
inline ::std::string* S2SBroadcastToGameAck::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToGameAck.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToGameAck::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToGameAck.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToGameAck::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToGameAck.msgdata)
}

// uint32 serial = 3;
inline void S2SBroadcastToGameAck::clear_serial() {
  serial_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToGameAck::serial() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGameAck.serial)
  return serial_;
}
inline void S2SBroadcastToGameAck::set_serial(::google::protobuf::uint32 value) {
  
  serial_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGameAck.serial)
}

// uint64 worldid = 4;
inline void S2SBroadcastToGameAck::clear_worldid() {
  worldid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SBroadcastToGameAck::worldid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGameAck.worldid)
  return worldid_;
}
inline void S2SBroadcastToGameAck::set_worldid(::google::protobuf::uint64 value) {
  
  worldid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGameAck.worldid)
}

// -------------------------------------------------------------------

// S2SBroadcastToGateReq

// uint32 msgid = 1;
inline void S2SBroadcastToGateReq::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToGateReq::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGateReq.msgid)
  return msgid_;
}
inline void S2SBroadcastToGateReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGateReq.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToGateReq::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToGateReq::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGateReq.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToGateReq::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGateReq.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToGateReq::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToGateReq.msgdata)
}
#endif
inline void S2SBroadcastToGateReq::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToGateReq.msgdata)
}
inline void S2SBroadcastToGateReq::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToGateReq.msgdata)
}
inline ::std::string* S2SBroadcastToGateReq::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToGateReq.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToGateReq::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToGateReq.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToGateReq::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToGateReq.msgdata)
}

// uint32 serial = 3;
inline void S2SBroadcastToGateReq::clear_serial() {
  serial_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToGateReq::serial() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGateReq.serial)
  return serial_;
}
inline void S2SBroadcastToGateReq::set_serial(::google::protobuf::uint32 value) {
  
  serial_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGateReq.serial)
}

// uint64 worldid = 4;
inline void S2SBroadcastToGateReq::clear_worldid() {
  worldid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SBroadcastToGateReq::worldid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToGateReq.worldid)
  return worldid_;
}
inline void S2SBroadcastToGateReq::set_worldid(::google::protobuf::uint64 value) {
  
  worldid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToGateReq.worldid)
}

// -------------------------------------------------------------------

// S2SBroadcastToServerReq

// uint32 msgid = 1;
inline void S2SBroadcastToServerReq::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToServerReq::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToServerReq.msgid)
  return msgid_;
}
inline void S2SBroadcastToServerReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToServerReq.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToServerReq::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToServerReq::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToServerReq.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToServerReq::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToServerReq.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToServerReq::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToServerReq.msgdata)
}
#endif
inline void S2SBroadcastToServerReq::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToServerReq.msgdata)
}
inline void S2SBroadcastToServerReq::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToServerReq.msgdata)
}
inline ::std::string* S2SBroadcastToServerReq::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToServerReq.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToServerReq::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToServerReq.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToServerReq::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToServerReq.msgdata)
}

// -------------------------------------------------------------------

// S2SBroadcastToWorldReq

// uint32 msgid = 1;
inline void S2SBroadcastToWorldReq::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToWorldReq::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToWorldReq.msgid)
  return msgid_;
}
inline void S2SBroadcastToWorldReq::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToWorldReq.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToWorldReq::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToWorldReq::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToWorldReq.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToWorldReq::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToWorldReq.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToWorldReq::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToWorldReq.msgdata)
}
#endif
inline void S2SBroadcastToWorldReq::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToWorldReq.msgdata)
}
inline void S2SBroadcastToWorldReq::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToWorldReq.msgdata)
}
inline ::std::string* S2SBroadcastToWorldReq::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToWorldReq.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToWorldReq::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToWorldReq.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToWorldReq::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToWorldReq.msgdata)
}

// -------------------------------------------------------------------

// S2SBroadcastToWorldAck

// uint32 msgid = 1;
inline void S2SBroadcastToWorldAck::clear_msgid() {
  msgid_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToWorldAck::msgid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToWorldAck.msgid)
  return msgid_;
}
inline void S2SBroadcastToWorldAck::set_msgid(::google::protobuf::uint32 value) {
  
  msgid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToWorldAck.msgid)
}

// bytes msgdata = 2;
inline void S2SBroadcastToWorldAck::clear_msgdata() {
  msgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SBroadcastToWorldAck::msgdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToWorldAck.msgdata)
  return msgdata_.GetNoArena();
}
inline void S2SBroadcastToWorldAck::set_msgdata(const ::std::string& value) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToWorldAck.msgdata)
}
#if LANG_CXX11
inline void S2SBroadcastToWorldAck::set_msgdata(::std::string&& value) {
  
  msgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SBroadcastToWorldAck.msgdata)
}
#endif
inline void S2SBroadcastToWorldAck::set_msgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SBroadcastToWorldAck.msgdata)
}
inline void S2SBroadcastToWorldAck::set_msgdata(const void* value, size_t size) {
  
  msgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SBroadcastToWorldAck.msgdata)
}
inline ::std::string* S2SBroadcastToWorldAck::mutable_msgdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SBroadcastToWorldAck.msgdata)
  return msgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SBroadcastToWorldAck::release_msgdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SBroadcastToWorldAck.msgdata)
  
  return msgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SBroadcastToWorldAck::set_allocated_msgdata(::std::string* msgdata) {
  if (msgdata != NULL) {
    
  } else {
    
  }
  msgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), msgdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SBroadcastToWorldAck.msgdata)
}

// uint32 serial = 3;
inline void S2SBroadcastToWorldAck::clear_serial() {
  serial_ = 0u;
}
inline ::google::protobuf::uint32 S2SBroadcastToWorldAck::serial() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToWorldAck.serial)
  return serial_;
}
inline void S2SBroadcastToWorldAck::set_serial(::google::protobuf::uint32 value) {
  
  serial_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToWorldAck.serial)
}

// uint64 worldid = 4;
inline void S2SBroadcastToWorldAck::clear_worldid() {
  worldid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SBroadcastToWorldAck::worldid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SBroadcastToWorldAck.worldid)
  return worldid_;
}
inline void S2SBroadcastToWorldAck::set_worldid(::google::protobuf::uint64 value) {
  
  worldid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SBroadcastToWorldAck.worldid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PBMail

// map<string, bytes> data = 1;
inline int PBMail::data_size() const {
  return data_.size();
}
inline void PBMail::clear_data() {
  data_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBMail::data() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBMail.data)
  return data_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBMail::mutable_data() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBMail.data)
  return data_.MutableMap();
}

// -------------------------------------------------------------------

// S2SQueryMailReq

// uint64 playerid = 1;
inline void S2SQueryMailReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryMailReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailReq.playerid)
  return playerid_;
}
inline void S2SQueryMailReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMailReq.playerid)
}

// uint32 zoneid = 2;
inline void S2SQueryMailReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryMailReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailReq.zoneid)
  return zoneid_;
}
inline void S2SQueryMailReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMailReq.zoneid)
}

// uint64 maxid = 3;
inline void S2SQueryMailReq::clear_maxid() {
  maxid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryMailReq::maxid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailReq.maxid)
  return maxid_;
}
inline void S2SQueryMailReq::set_maxid(::google::protobuf::uint64 value) {
  
  maxid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMailReq.maxid)
}

// -------------------------------------------------------------------

// S2SQueryMailAck

// uint64 playerid = 1;
inline void S2SQueryMailAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryMailAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailAck.playerid)
  return playerid_;
}
inline void S2SQueryMailAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryMailAck.playerid)
}

// repeated .KFMsg.PBMail mail = 2;
inline int S2SQueryMailAck::mail_size() const {
  return mail_.size();
}
inline void S2SQueryMailAck::clear_mail() {
  mail_.Clear();
}
inline ::KFMsg::PBMail* S2SQueryMailAck::mutable_mail(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryMailAck.mail)
  return mail_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail >*
S2SQueryMailAck::mutable_mail() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryMailAck.mail)
  return &mail_;
}
inline const ::KFMsg::PBMail& S2SQueryMailAck::mail(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryMailAck.mail)
  return mail_.Get(index);
}
inline ::KFMsg::PBMail* S2SQueryMailAck::add_mail() {
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryMailAck.mail)
  return mail_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBMail >&
S2SQueryMailAck::mail() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryMailAck.mail)
  return mail_;
}

// -------------------------------------------------------------------

// S2SAddMailReq

// uint32 flag = 1;
inline void S2SAddMailReq::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 S2SAddMailReq::flag() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMailReq.flag)
  return flag_;
}
inline void S2SAddMailReq::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddMailReq.flag)
}

// uint64 objectid = 2;
inline void S2SAddMailReq::clear_objectid() {
  objectid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddMailReq::objectid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMailReq.objectid)
  return objectid_;
}
inline void S2SAddMailReq::set_objectid(::google::protobuf::uint64 value) {
  
  objectid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddMailReq.objectid)
}

// .KFMsg.PBMail pbmail = 3;
inline bool S2SAddMailReq::has_pbmail() const {
  return this != internal_default_instance() && pbmail_ != NULL;
}
inline void S2SAddMailReq::clear_pbmail() {
  if (GetArenaNoVirtual() == NULL && pbmail_ != NULL) {
    delete pbmail_;
  }
  pbmail_ = NULL;
}
inline const ::KFMsg::PBMail& S2SAddMailReq::_internal_pbmail() const {
  return *pbmail_;
}
inline const ::KFMsg::PBMail& S2SAddMailReq::pbmail() const {
  const ::KFMsg::PBMail* p = pbmail_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddMailReq.pbmail)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBMail*>(
      &::KFMsg::_PBMail_default_instance_);
}
inline ::KFMsg::PBMail* S2SAddMailReq::release_pbmail() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddMailReq.pbmail)
  
  ::KFMsg::PBMail* temp = pbmail_;
  pbmail_ = NULL;
  return temp;
}
inline ::KFMsg::PBMail* S2SAddMailReq::mutable_pbmail() {
  
  if (pbmail_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBMail>(GetArenaNoVirtual());
    pbmail_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddMailReq.pbmail)
  return pbmail_;
}
inline void S2SAddMailReq::set_allocated_pbmail(::KFMsg::PBMail* pbmail) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pbmail_;
  }
  if (pbmail) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbmail = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbmail, submessage_arena);
    }
    
  } else {
    
  }
  pbmail_ = pbmail;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddMailReq.pbmail)
}

// -------------------------------------------------------------------

// S2SNoticeNewMailReq

// uint64 playerid = 1;
inline void S2SNoticeNewMailReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNoticeNewMailReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeNewMailReq.playerid)
  return playerid_;
}
inline void S2SNoticeNewMailReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeNewMailReq.playerid)
}

// -------------------------------------------------------------------

// S2SNewPlayerMailReq

// uint64 playerid = 1;
inline void S2SNewPlayerMailReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SNewPlayerMailReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNewPlayerMailReq.playerid)
  return playerid_;
}
inline void S2SNewPlayerMailReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNewPlayerMailReq.playerid)
}

// uint32 zoneid = 2;
inline void S2SNewPlayerMailReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SNewPlayerMailReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNewPlayerMailReq.zoneid)
  return zoneid_;
}
inline void S2SNewPlayerMailReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNewPlayerMailReq.zoneid)
}

// -------------------------------------------------------------------

// S2SUpdateMailStatusReq

// uint64 playerid = 1;
inline void S2SUpdateMailStatusReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMailStatusReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusReq.playerid)
  return playerid_;
}
inline void S2SUpdateMailStatusReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusReq.playerid)
}

// uint64 id = 2;
inline void S2SUpdateMailStatusReq::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMailStatusReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusReq.id)
  return id_;
}
inline void S2SUpdateMailStatusReq::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusReq.id)
}

// uint32 flag = 3;
inline void S2SUpdateMailStatusReq::clear_flag() {
  flag_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateMailStatusReq::flag() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusReq.flag)
  return flag_;
}
inline void S2SUpdateMailStatusReq::set_flag(::google::protobuf::uint32 value) {
  
  flag_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusReq.flag)
}

// uint32 status = 4;
inline void S2SUpdateMailStatusReq::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateMailStatusReq::status() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusReq.status)
  return status_;
}
inline void S2SUpdateMailStatusReq::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusReq.status)
}

// -------------------------------------------------------------------

// S2SUpdateMailStatusAck

// uint64 playerid = 1;
inline void S2SUpdateMailStatusAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMailStatusAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusAck.playerid)
  return playerid_;
}
inline void S2SUpdateMailStatusAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusAck.playerid)
}

// uint64 id = 2;
inline void S2SUpdateMailStatusAck::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateMailStatusAck::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusAck.id)
  return id_;
}
inline void S2SUpdateMailStatusAck::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusAck.id)
}

// uint32 status = 3;
inline void S2SUpdateMailStatusAck::clear_status() {
  status_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateMailStatusAck::status() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateMailStatusAck.status)
  return status_;
}
inline void S2SUpdateMailStatusAck::set_status(::google::protobuf::uint32 value) {
  
  status_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateMailStatusAck.status)
}

// -------------------------------------------------------------------

// S2SNoticeRankWorkerReq

// uint32 workerid = 1;
inline void S2SNoticeRankWorkerReq::clear_workerid() {
  workerid_ = 0u;
}
inline ::google::protobuf::uint32 S2SNoticeRankWorkerReq::workerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SNoticeRankWorkerReq.workerid)
  return workerid_;
}
inline void S2SNoticeRankWorkerReq::set_workerid(::google::protobuf::uint32 value) {
  
  workerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SNoticeRankWorkerReq.workerid)
}

// -------------------------------------------------------------------

// S2SSyncRefreshRank

// uint32 rankid = 1;
inline void S2SSyncRefreshRank::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 S2SSyncRefreshRank::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSyncRefreshRank.rankid)
  return rankid_;
}
inline void S2SSyncRefreshRank::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSyncRefreshRank.rankid)
}

// -------------------------------------------------------------------

// S2SUpdateRankDataReq

// uint64 playerid = 1;
inline void S2SUpdateRankDataReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateRankDataReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateRankDataReq.playerid)
  return playerid_;
}
inline void S2SUpdateRankDataReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateRankDataReq.playerid)
}

// uint32 rankid = 2;
inline void S2SUpdateRankDataReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateRankDataReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateRankDataReq.rankid)
  return rankid_;
}
inline void S2SUpdateRankDataReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateRankDataReq.rankid)
}

// uint32 zoneid = 3;
inline void S2SUpdateRankDataReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateRankDataReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateRankDataReq.zoneid)
  return zoneid_;
}
inline void S2SUpdateRankDataReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateRankDataReq.zoneid)
}

// .KFMsg.PBRankData pbrankdata = 4;
inline bool S2SUpdateRankDataReq::has_pbrankdata() const {
  return this != internal_default_instance() && pbrankdata_ != NULL;
}
inline const ::KFMsg::PBRankData& S2SUpdateRankDataReq::_internal_pbrankdata() const {
  return *pbrankdata_;
}
inline const ::KFMsg::PBRankData& S2SUpdateRankDataReq::pbrankdata() const {
  const ::KFMsg::PBRankData* p = pbrankdata_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateRankDataReq.pbrankdata)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRankData*>(
      &::KFMsg::_PBRankData_default_instance_);
}
inline ::KFMsg::PBRankData* S2SUpdateRankDataReq::release_pbrankdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateRankDataReq.pbrankdata)
  
  ::KFMsg::PBRankData* temp = pbrankdata_;
  pbrankdata_ = NULL;
  return temp;
}
inline ::KFMsg::PBRankData* S2SUpdateRankDataReq::mutable_pbrankdata() {
  
  if (pbrankdata_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRankData>(GetArenaNoVirtual());
    pbrankdata_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateRankDataReq.pbrankdata)
  return pbrankdata_;
}
inline void S2SUpdateRankDataReq::set_allocated_pbrankdata(::KFMsg::PBRankData* pbrankdata) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbrankdata_);
  }
  if (pbrankdata) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbrankdata = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbrankdata, submessage_arena);
    }
    
  } else {
    
  }
  pbrankdata_ = pbrankdata;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateRankDataReq.pbrankdata)
}

// -------------------------------------------------------------------

// S2SQueryRankListReq

// uint32 rankid = 1;
inline void S2SQueryRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRankListReq.rankid)
  return rankid_;
}
inline void S2SQueryRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRankListReq.rankid)
}

// uint32 zoneid = 2;
inline void S2SQueryRankListReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryRankListReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRankListReq.zoneid)
  return zoneid_;
}
inline void S2SQueryRankListReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRankListReq.zoneid)
}

// uint32 start = 3;
inline void S2SQueryRankListReq::clear_start() {
  start_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryRankListReq::start() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRankListReq.start)
  return start_;
}
inline void S2SQueryRankListReq::set_start(::google::protobuf::uint32 value) {
  
  start_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRankListReq.start)
}

// uint32 count = 4;
inline void S2SQueryRankListReq::clear_count() {
  count_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryRankListReq::count() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRankListReq.count)
  return count_;
}
inline void S2SQueryRankListReq::set_count(::google::protobuf::uint32 value) {
  
  count_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRankListReq.count)
}

// -------------------------------------------------------------------

// S2SQueryFriendRankListReq

// uint32 rankid = 1;
inline void S2SQueryFriendRankListReq::clear_rankid() {
  rankid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryFriendRankListReq::rankid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendRankListReq.rankid)
  return rankid_;
}
inline void S2SQueryFriendRankListReq::set_rankid(::google::protobuf::uint32 value) {
  
  rankid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendRankListReq.rankid)
}

// repeated uint64 friendid = 2;
inline int S2SQueryFriendRankListReq::friendid_size() const {
  return friendid_.size();
}
inline void S2SQueryFriendRankListReq::clear_friendid() {
  friendid_.Clear();
}
inline ::google::protobuf::uint64 S2SQueryFriendRankListReq::friendid(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryFriendRankListReq.friendid)
  return friendid_.Get(index);
}
inline void S2SQueryFriendRankListReq::set_friendid(int index, ::google::protobuf::uint64 value) {
  friendid_.Set(index, value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryFriendRankListReq.friendid)
}
inline void S2SQueryFriendRankListReq::add_friendid(::google::protobuf::uint64 value) {
  friendid_.Add(value);
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryFriendRankListReq.friendid)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >&
S2SQueryFriendRankListReq::friendid() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryFriendRankListReq.friendid)
  return friendid_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint64 >*
S2SQueryFriendRankListReq::mutable_friendid() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryFriendRankListReq.friendid)
  return &friendid_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateIntValueToBasicReq

// map<string, uint64> pbdata = 1;
inline int S2SUpdateIntValueToBasicReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SUpdateIntValueToBasicReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
S2SUpdateIntValueToBasicReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateIntValueToBasicReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
S2SUpdateIntValueToBasicReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateIntValueToBasicReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateStrValueToBasicReq

// map<string, bytes> pbdata = 1;
inline int S2SUpdateStrValueToBasicReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SUpdateStrValueToBasicReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SUpdateStrValueToBasicReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateStrValueToBasicReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SUpdateStrValueToBasicReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateStrValueToBasicReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SClearOnlineToBasicReq

// uint64 serverid = 1;
inline void S2SClearOnlineToBasicReq::clear_serverid() {
  serverid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SClearOnlineToBasicReq::serverid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SClearOnlineToBasicReq.serverid)
  return serverid_;
}
inline void S2SClearOnlineToBasicReq::set_serverid(::google::protobuf::uint64 value) {
  
  serverid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SClearOnlineToBasicReq.serverid)
}

// -------------------------------------------------------------------

// S2SQueryAttributeToBasicReq

// bytes name = 1;
inline void S2SQueryAttributeToBasicReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SQueryAttributeToBasicReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryAttributeToBasicReq.name)
  return name_.GetNoArena();
}
inline void S2SQueryAttributeToBasicReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryAttributeToBasicReq.name)
}
#if LANG_CXX11
inline void S2SQueryAttributeToBasicReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SQueryAttributeToBasicReq.name)
}
#endif
inline void S2SQueryAttributeToBasicReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SQueryAttributeToBasicReq.name)
}
inline void S2SQueryAttributeToBasicReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SQueryAttributeToBasicReq.name)
}
inline ::std::string* S2SQueryAttributeToBasicReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryAttributeToBasicReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SQueryAttributeToBasicReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryAttributeToBasicReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SQueryAttributeToBasicReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryAttributeToBasicReq.name)
}

// uint32 zoneid = 2;
inline void S2SQueryAttributeToBasicReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryAttributeToBasicReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryAttributeToBasicReq.zoneid)
  return zoneid_;
}
inline void S2SQueryAttributeToBasicReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryAttributeToBasicReq.zoneid)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SQueryAttributeToGameAck

// bytes name = 1;
inline void S2SQueryAttributeToGameAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SQueryAttributeToGameAck::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryAttributeToGameAck.name)
  return name_.GetNoArena();
}
inline void S2SQueryAttributeToGameAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryAttributeToGameAck.name)
}
#if LANG_CXX11
inline void S2SQueryAttributeToGameAck::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SQueryAttributeToGameAck.name)
}
#endif
inline void S2SQueryAttributeToGameAck::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SQueryAttributeToGameAck.name)
}
inline void S2SQueryAttributeToGameAck::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SQueryAttributeToGameAck.name)
}
inline ::std::string* S2SQueryAttributeToGameAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryAttributeToGameAck.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SQueryAttributeToGameAck::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryAttributeToGameAck.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SQueryAttributeToGameAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryAttributeToGameAck.name)
}

// uint32 result = 2;
inline void S2SQueryAttributeToGameAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SQueryAttributeToGameAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryAttributeToGameAck.result)
  return result_;
}
inline void S2SQueryAttributeToGameAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryAttributeToGameAck.result)
}

// map<string, bytes> pbdata = 3;
inline int S2SQueryAttributeToGameAck::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SQueryAttributeToGameAck::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SQueryAttributeToGameAck::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SQueryAttributeToGameAck.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SQueryAttributeToGameAck::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SQueryAttributeToGameAck.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SSetPlayerNameToBasicReq

// uint32 zoneid = 1;
inline void S2SSetPlayerNameToBasicReq::clear_zoneid() {
  zoneid_ = 0u;
}
inline ::google::protobuf::uint32 S2SSetPlayerNameToBasicReq::zoneid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameToBasicReq.zoneid)
  return zoneid_;
}
inline void S2SSetPlayerNameToBasicReq::set_zoneid(::google::protobuf::uint32 value) {
  
  zoneid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameToBasicReq.zoneid)
}

// uint64 playerid = 2;
inline void S2SSetPlayerNameToBasicReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSetPlayerNameToBasicReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameToBasicReq.playerid)
  return playerid_;
}
inline void S2SSetPlayerNameToBasicReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameToBasicReq.playerid)
}

// bytes oldname = 3;
inline void S2SSetPlayerNameToBasicReq::clear_oldname() {
  oldname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSetPlayerNameToBasicReq::oldname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameToBasicReq.oldname)
  return oldname_.GetNoArena();
}
inline void S2SSetPlayerNameToBasicReq::set_oldname(const ::std::string& value) {
  
  oldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameToBasicReq.oldname)
}
#if LANG_CXX11
inline void S2SSetPlayerNameToBasicReq::set_oldname(::std::string&& value) {
  
  oldname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSetPlayerNameToBasicReq.oldname)
}
#endif
inline void S2SSetPlayerNameToBasicReq::set_oldname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  oldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSetPlayerNameToBasicReq.oldname)
}
inline void S2SSetPlayerNameToBasicReq::set_oldname(const void* value, size_t size) {
  
  oldname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSetPlayerNameToBasicReq.oldname)
}
inline ::std::string* S2SSetPlayerNameToBasicReq::mutable_oldname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSetPlayerNameToBasicReq.oldname)
  return oldname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSetPlayerNameToBasicReq::release_oldname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSetPlayerNameToBasicReq.oldname)
  
  return oldname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSetPlayerNameToBasicReq::set_allocated_oldname(::std::string* oldname) {
  if (oldname != NULL) {
    
  } else {
    
  }
  oldname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), oldname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSetPlayerNameToBasicReq.oldname)
}

// bytes newname = 4;
inline void S2SSetPlayerNameToBasicReq::clear_newname() {
  newname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSetPlayerNameToBasicReq::newname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameToBasicReq.newname)
  return newname_.GetNoArena();
}
inline void S2SSetPlayerNameToBasicReq::set_newname(const ::std::string& value) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameToBasicReq.newname)
}
#if LANG_CXX11
inline void S2SSetPlayerNameToBasicReq::set_newname(::std::string&& value) {
  
  newname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSetPlayerNameToBasicReq.newname)
}
#endif
inline void S2SSetPlayerNameToBasicReq::set_newname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSetPlayerNameToBasicReq.newname)
}
inline void S2SSetPlayerNameToBasicReq::set_newname(const void* value, size_t size) {
  
  newname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSetPlayerNameToBasicReq.newname)
}
inline ::std::string* S2SSetPlayerNameToBasicReq::mutable_newname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSetPlayerNameToBasicReq.newname)
  return newname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSetPlayerNameToBasicReq::release_newname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSetPlayerNameToBasicReq.newname)
  
  return newname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSetPlayerNameToBasicReq::set_allocated_newname(::std::string* newname) {
  if (newname != NULL) {
    
  } else {
    
  }
  newname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), newname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSetPlayerNameToBasicReq.newname)
}

// bytes costdata = 5;
inline void S2SSetPlayerNameToBasicReq::clear_costdata() {
  costdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSetPlayerNameToBasicReq::costdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameToBasicReq.costdata)
  return costdata_.GetNoArena();
}
inline void S2SSetPlayerNameToBasicReq::set_costdata(const ::std::string& value) {
  
  costdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameToBasicReq.costdata)
}
#if LANG_CXX11
inline void S2SSetPlayerNameToBasicReq::set_costdata(::std::string&& value) {
  
  costdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSetPlayerNameToBasicReq.costdata)
}
#endif
inline void S2SSetPlayerNameToBasicReq::set_costdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  costdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSetPlayerNameToBasicReq.costdata)
}
inline void S2SSetPlayerNameToBasicReq::set_costdata(const void* value, size_t size) {
  
  costdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSetPlayerNameToBasicReq.costdata)
}
inline ::std::string* S2SSetPlayerNameToBasicReq::mutable_costdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSetPlayerNameToBasicReq.costdata)
  return costdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSetPlayerNameToBasicReq::release_costdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSetPlayerNameToBasicReq.costdata)
  
  return costdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSetPlayerNameToBasicReq::set_allocated_costdata(::std::string* costdata) {
  if (costdata != NULL) {
    
  } else {
    
  }
  costdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), costdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSetPlayerNameToBasicReq.costdata)
}

// -------------------------------------------------------------------

// S2SSetPlayerNameToGameAck

// uint32 result = 1;
inline void S2SSetPlayerNameToGameAck::clear_result() {
  result_ = 0u;
}
inline ::google::protobuf::uint32 S2SSetPlayerNameToGameAck::result() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameToGameAck.result)
  return result_;
}
inline void S2SSetPlayerNameToGameAck::set_result(::google::protobuf::uint32 value) {
  
  result_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameToGameAck.result)
}

// uint64 playerid = 2;
inline void S2SSetPlayerNameToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SSetPlayerNameToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameToGameAck.playerid)
  return playerid_;
}
inline void S2SSetPlayerNameToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameToGameAck.playerid)
}

// bytes name = 3;
inline void S2SSetPlayerNameToGameAck::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSetPlayerNameToGameAck::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameToGameAck.name)
  return name_.GetNoArena();
}
inline void S2SSetPlayerNameToGameAck::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameToGameAck.name)
}
#if LANG_CXX11
inline void S2SSetPlayerNameToGameAck::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSetPlayerNameToGameAck.name)
}
#endif
inline void S2SSetPlayerNameToGameAck::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSetPlayerNameToGameAck.name)
}
inline void S2SSetPlayerNameToGameAck::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSetPlayerNameToGameAck.name)
}
inline ::std::string* S2SSetPlayerNameToGameAck::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSetPlayerNameToGameAck.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSetPlayerNameToGameAck::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSetPlayerNameToGameAck.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSetPlayerNameToGameAck::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSetPlayerNameToGameAck.name)
}

// bytes costdata = 4;
inline void S2SSetPlayerNameToGameAck::clear_costdata() {
  costdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SSetPlayerNameToGameAck::costdata() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SSetPlayerNameToGameAck.costdata)
  return costdata_.GetNoArena();
}
inline void S2SSetPlayerNameToGameAck::set_costdata(const ::std::string& value) {
  
  costdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SSetPlayerNameToGameAck.costdata)
}
#if LANG_CXX11
inline void S2SSetPlayerNameToGameAck::set_costdata(::std::string&& value) {
  
  costdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SSetPlayerNameToGameAck.costdata)
}
#endif
inline void S2SSetPlayerNameToGameAck::set_costdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  costdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SSetPlayerNameToGameAck.costdata)
}
inline void S2SSetPlayerNameToGameAck::set_costdata(const void* value, size_t size) {
  
  costdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SSetPlayerNameToGameAck.costdata)
}
inline ::std::string* S2SSetPlayerNameToGameAck::mutable_costdata() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SSetPlayerNameToGameAck.costdata)
  return costdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SSetPlayerNameToGameAck::release_costdata() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SSetPlayerNameToGameAck.costdata)
  
  return costdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SSetPlayerNameToGameAck::set_allocated_costdata(::std::string* costdata) {
  if (costdata != NULL) {
    
  } else {
    
  }
  costdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), costdata);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SSetPlayerNameToGameAck.costdata)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// PBRelation

// uint64 playerid = 1;
inline void PBRelation::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 PBRelation::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.PBRelation.playerid)
  return playerid_;
}
inline void PBRelation::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.PBRelation.playerid)
}

// map<string, bytes> basicdata = 2;
inline int PBRelation::basicdata_size() const {
  return basicdata_.size();
}
inline void PBRelation::clear_basicdata() {
  basicdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBRelation::basicdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBRelation.basicdata)
  return basicdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBRelation::mutable_basicdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBRelation.basicdata)
  return basicdata_.MutableMap();
}

// map<string, bytes> relationdata = 3;
inline int PBRelation::relationdata_size() const {
  return relationdata_.size();
}
inline void PBRelation::clear_relationdata() {
  relationdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
PBRelation::relationdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.PBRelation.relationdata)
  return relationdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
PBRelation::mutable_relationdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.PBRelation.relationdata)
  return relationdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SQueryRelationToRelationReq

// bytes relationname = 1;
inline void S2SQueryRelationToRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SQueryRelationToRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationToRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void S2SQueryRelationToRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRelationToRelationReq.relationname)
}
#if LANG_CXX11
inline void S2SQueryRelationToRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SQueryRelationToRelationReq.relationname)
}
#endif
inline void S2SQueryRelationToRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SQueryRelationToRelationReq.relationname)
}
inline void S2SQueryRelationToRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SQueryRelationToRelationReq.relationname)
}
inline ::std::string* S2SQueryRelationToRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryRelationToRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SQueryRelationToRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryRelationToRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SQueryRelationToRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryRelationToRelationReq.relationname)
}

// uint64 playerid = 2;
inline void S2SQueryRelationToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRelationToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationToRelationReq.playerid)
  return playerid_;
}
inline void S2SQueryRelationToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRelationToRelationReq.playerid)
}

// -------------------------------------------------------------------

// S2SQueryRelationToGameAck

// bytes relationname = 1;
inline void S2SQueryRelationToGameAck::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SQueryRelationToGameAck::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationToGameAck.relationname)
  return relationname_.GetNoArena();
}
inline void S2SQueryRelationToGameAck::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRelationToGameAck.relationname)
}
#if LANG_CXX11
inline void S2SQueryRelationToGameAck::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SQueryRelationToGameAck.relationname)
}
#endif
inline void S2SQueryRelationToGameAck::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SQueryRelationToGameAck.relationname)
}
inline void S2SQueryRelationToGameAck::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SQueryRelationToGameAck.relationname)
}
inline ::std::string* S2SQueryRelationToGameAck::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryRelationToGameAck.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SQueryRelationToGameAck::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryRelationToGameAck.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SQueryRelationToGameAck::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryRelationToGameAck.relationname)
}

// uint64 playerid = 2;
inline void S2SQueryRelationToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRelationToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationToGameAck.playerid)
  return playerid_;
}
inline void S2SQueryRelationToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRelationToGameAck.playerid)
}

// repeated .KFMsg.PBRelation pbrelation = 3;
inline int S2SQueryRelationToGameAck::pbrelation_size() const {
  return pbrelation_.size();
}
inline void S2SQueryRelationToGameAck::clear_pbrelation() {
  pbrelation_.Clear();
}
inline ::KFMsg::PBRelation* S2SQueryRelationToGameAck::mutable_pbrelation(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryRelationToGameAck.pbrelation)
  return pbrelation_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
S2SQueryRelationToGameAck::mutable_pbrelation() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryRelationToGameAck.pbrelation)
  return &pbrelation_;
}
inline const ::KFMsg::PBRelation& S2SQueryRelationToGameAck::pbrelation(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationToGameAck.pbrelation)
  return pbrelation_.Get(index);
}
inline ::KFMsg::PBRelation* S2SQueryRelationToGameAck::add_pbrelation() {
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryRelationToGameAck.pbrelation)
  return pbrelation_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
S2SQueryRelationToGameAck::pbrelation() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryRelationToGameAck.pbrelation)
  return pbrelation_;
}

// -------------------------------------------------------------------

// S2SQueryRelationInviteToRelationReq

// bytes relationname = 1;
inline void S2SQueryRelationInviteToRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SQueryRelationInviteToRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationInviteToRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void S2SQueryRelationInviteToRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRelationInviteToRelationReq.relationname)
}
#if LANG_CXX11
inline void S2SQueryRelationInviteToRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SQueryRelationInviteToRelationReq.relationname)
}
#endif
inline void S2SQueryRelationInviteToRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SQueryRelationInviteToRelationReq.relationname)
}
inline void S2SQueryRelationInviteToRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SQueryRelationInviteToRelationReq.relationname)
}
inline ::std::string* S2SQueryRelationInviteToRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryRelationInviteToRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SQueryRelationInviteToRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryRelationInviteToRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SQueryRelationInviteToRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryRelationInviteToRelationReq.relationname)
}

// uint64 playerid = 2;
inline void S2SQueryRelationInviteToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRelationInviteToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationInviteToRelationReq.playerid)
  return playerid_;
}
inline void S2SQueryRelationInviteToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRelationInviteToRelationReq.playerid)
}

// -------------------------------------------------------------------

// S2SQueryRelationInviteToGameAck

// bytes relationname = 1;
inline void S2SQueryRelationInviteToGameAck::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SQueryRelationInviteToGameAck::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationInviteToGameAck.relationname)
  return relationname_.GetNoArena();
}
inline void S2SQueryRelationInviteToGameAck::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRelationInviteToGameAck.relationname)
}
#if LANG_CXX11
inline void S2SQueryRelationInviteToGameAck::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SQueryRelationInviteToGameAck.relationname)
}
#endif
inline void S2SQueryRelationInviteToGameAck::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SQueryRelationInviteToGameAck.relationname)
}
inline void S2SQueryRelationInviteToGameAck::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SQueryRelationInviteToGameAck.relationname)
}
inline ::std::string* S2SQueryRelationInviteToGameAck::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryRelationInviteToGameAck.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SQueryRelationInviteToGameAck::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SQueryRelationInviteToGameAck.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SQueryRelationInviteToGameAck::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SQueryRelationInviteToGameAck.relationname)
}

// uint64 playerid = 2;
inline void S2SQueryRelationInviteToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SQueryRelationInviteToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationInviteToGameAck.playerid)
  return playerid_;
}
inline void S2SQueryRelationInviteToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SQueryRelationInviteToGameAck.playerid)
}

// repeated .KFMsg.PBRelation pbinvite = 3;
inline int S2SQueryRelationInviteToGameAck::pbinvite_size() const {
  return pbinvite_.size();
}
inline void S2SQueryRelationInviteToGameAck::clear_pbinvite() {
  pbinvite_.Clear();
}
inline ::KFMsg::PBRelation* S2SQueryRelationInviteToGameAck::mutable_pbinvite(int index) {
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SQueryRelationInviteToGameAck.pbinvite)
  return pbinvite_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >*
S2SQueryRelationInviteToGameAck::mutable_pbinvite() {
  // @@protoc_insertion_point(field_mutable_list:KFMsg.S2SQueryRelationInviteToGameAck.pbinvite)
  return &pbinvite_;
}
inline const ::KFMsg::PBRelation& S2SQueryRelationInviteToGameAck::pbinvite(int index) const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SQueryRelationInviteToGameAck.pbinvite)
  return pbinvite_.Get(index);
}
inline ::KFMsg::PBRelation* S2SQueryRelationInviteToGameAck::add_pbinvite() {
  // @@protoc_insertion_point(field_add:KFMsg.S2SQueryRelationInviteToGameAck.pbinvite)
  return pbinvite_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::KFMsg::PBRelation >&
S2SQueryRelationInviteToGameAck::pbinvite() const {
  // @@protoc_insertion_point(field_list:KFMsg.S2SQueryRelationInviteToGameAck.pbinvite)
  return pbinvite_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateIntValueToRelationReq

// bytes relationname = 1;
inline void S2SUpdateIntValueToRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SUpdateIntValueToRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateIntValueToRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void S2SUpdateIntValueToRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateIntValueToRelationReq.relationname)
}
#if LANG_CXX11
inline void S2SUpdateIntValueToRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SUpdateIntValueToRelationReq.relationname)
}
#endif
inline void S2SUpdateIntValueToRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SUpdateIntValueToRelationReq.relationname)
}
inline void S2SUpdateIntValueToRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SUpdateIntValueToRelationReq.relationname)
}
inline ::std::string* S2SUpdateIntValueToRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateIntValueToRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SUpdateIntValueToRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateIntValueToRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SUpdateIntValueToRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateIntValueToRelationReq.relationname)
}

// uint64 playerid = 2;
inline void S2SUpdateIntValueToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateIntValueToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateIntValueToRelationReq.playerid)
  return playerid_;
}
inline void S2SUpdateIntValueToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateIntValueToRelationReq.playerid)
}

// map<string, uint64> pbdata = 3;
inline int S2SUpdateIntValueToRelationReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SUpdateIntValueToRelationReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
S2SUpdateIntValueToRelationReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateIntValueToRelationReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
S2SUpdateIntValueToRelationReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateIntValueToRelationReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2SUpdateStrValueToRelationReq

// bytes relationname = 1;
inline void S2SUpdateStrValueToRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SUpdateStrValueToRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateStrValueToRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void S2SUpdateStrValueToRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateStrValueToRelationReq.relationname)
}
#if LANG_CXX11
inline void S2SUpdateStrValueToRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SUpdateStrValueToRelationReq.relationname)
}
#endif
inline void S2SUpdateStrValueToRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SUpdateStrValueToRelationReq.relationname)
}
inline void S2SUpdateStrValueToRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SUpdateStrValueToRelationReq.relationname)
}
inline ::std::string* S2SUpdateStrValueToRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SUpdateStrValueToRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SUpdateStrValueToRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SUpdateStrValueToRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SUpdateStrValueToRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SUpdateStrValueToRelationReq.relationname)
}

// uint64 playerid = 2;
inline void S2SUpdateStrValueToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateStrValueToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateStrValueToRelationReq.playerid)
  return playerid_;
}
inline void S2SUpdateStrValueToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateStrValueToRelationReq.playerid)
}

// map<string, bytes> pbdata = 3;
inline int S2SUpdateStrValueToRelationReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2SUpdateStrValueToRelationReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2SUpdateStrValueToRelationReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2SUpdateStrValueToRelationReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2SUpdateStrValueToRelationReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2SUpdateStrValueToRelationReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2SApplyAddRelationToRelationReq

// bytes relationname = 1;
inline void S2SApplyAddRelationToRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SApplyAddRelationToRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyAddRelationToRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void S2SApplyAddRelationToRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyAddRelationToRelationReq.relationname)
}
#if LANG_CXX11
inline void S2SApplyAddRelationToRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SApplyAddRelationToRelationReq.relationname)
}
#endif
inline void S2SApplyAddRelationToRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SApplyAddRelationToRelationReq.relationname)
}
inline void S2SApplyAddRelationToRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SApplyAddRelationToRelationReq.relationname)
}
inline ::std::string* S2SApplyAddRelationToRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SApplyAddRelationToRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SApplyAddRelationToRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SApplyAddRelationToRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SApplyAddRelationToRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SApplyAddRelationToRelationReq.relationname)
}

// bytes playername = 2;
inline void S2SApplyAddRelationToRelationReq::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SApplyAddRelationToRelationReq::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyAddRelationToRelationReq.playername)
  return playername_.GetNoArena();
}
inline void S2SApplyAddRelationToRelationReq::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyAddRelationToRelationReq.playername)
}
#if LANG_CXX11
inline void S2SApplyAddRelationToRelationReq::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SApplyAddRelationToRelationReq.playername)
}
#endif
inline void S2SApplyAddRelationToRelationReq::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SApplyAddRelationToRelationReq.playername)
}
inline void S2SApplyAddRelationToRelationReq::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SApplyAddRelationToRelationReq.playername)
}
inline ::std::string* S2SApplyAddRelationToRelationReq::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SApplyAddRelationToRelationReq.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SApplyAddRelationToRelationReq::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SApplyAddRelationToRelationReq.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SApplyAddRelationToRelationReq::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SApplyAddRelationToRelationReq.playername)
}

// uint64 playerid = 3;
inline void S2SApplyAddRelationToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyAddRelationToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyAddRelationToRelationReq.playerid)
  return playerid_;
}
inline void S2SApplyAddRelationToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyAddRelationToRelationReq.playerid)
}

// bytes message = 4;
inline void S2SApplyAddRelationToRelationReq::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SApplyAddRelationToRelationReq::message() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyAddRelationToRelationReq.message)
  return message_.GetNoArena();
}
inline void S2SApplyAddRelationToRelationReq::set_message(const ::std::string& value) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyAddRelationToRelationReq.message)
}
#if LANG_CXX11
inline void S2SApplyAddRelationToRelationReq::set_message(::std::string&& value) {
  
  message_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SApplyAddRelationToRelationReq.message)
}
#endif
inline void S2SApplyAddRelationToRelationReq::set_message(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SApplyAddRelationToRelationReq.message)
}
inline void S2SApplyAddRelationToRelationReq::set_message(const void* value, size_t size) {
  
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SApplyAddRelationToRelationReq.message)
}
inline ::std::string* S2SApplyAddRelationToRelationReq::mutable_message() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SApplyAddRelationToRelationReq.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SApplyAddRelationToRelationReq::release_message() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SApplyAddRelationToRelationReq.message)
  
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SApplyAddRelationToRelationReq::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    
  } else {
    
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SApplyAddRelationToRelationReq.message)
}

// -------------------------------------------------------------------

// S2SApplyAddRelationToGameAck

// bytes relationname = 1;
inline void S2SApplyAddRelationToGameAck::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SApplyAddRelationToGameAck::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyAddRelationToGameAck.relationname)
  return relationname_.GetNoArena();
}
inline void S2SApplyAddRelationToGameAck::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyAddRelationToGameAck.relationname)
}
#if LANG_CXX11
inline void S2SApplyAddRelationToGameAck::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SApplyAddRelationToGameAck.relationname)
}
#endif
inline void S2SApplyAddRelationToGameAck::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SApplyAddRelationToGameAck.relationname)
}
inline void S2SApplyAddRelationToGameAck::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SApplyAddRelationToGameAck.relationname)
}
inline ::std::string* S2SApplyAddRelationToGameAck::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SApplyAddRelationToGameAck.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SApplyAddRelationToGameAck::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SApplyAddRelationToGameAck.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SApplyAddRelationToGameAck::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SApplyAddRelationToGameAck.relationname)
}

// uint64 playerid = 2;
inline void S2SApplyAddRelationToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SApplyAddRelationToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyAddRelationToGameAck.playerid)
  return playerid_;
}
inline void S2SApplyAddRelationToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SApplyAddRelationToGameAck.playerid)
}

// .KFMsg.PBRelation pbinvite = 3;
inline bool S2SApplyAddRelationToGameAck::has_pbinvite() const {
  return this != internal_default_instance() && pbinvite_ != NULL;
}
inline void S2SApplyAddRelationToGameAck::clear_pbinvite() {
  if (GetArenaNoVirtual() == NULL && pbinvite_ != NULL) {
    delete pbinvite_;
  }
  pbinvite_ = NULL;
}
inline const ::KFMsg::PBRelation& S2SApplyAddRelationToGameAck::_internal_pbinvite() const {
  return *pbinvite_;
}
inline const ::KFMsg::PBRelation& S2SApplyAddRelationToGameAck::pbinvite() const {
  const ::KFMsg::PBRelation* p = pbinvite_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SApplyAddRelationToGameAck.pbinvite)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRelation*>(
      &::KFMsg::_PBRelation_default_instance_);
}
inline ::KFMsg::PBRelation* S2SApplyAddRelationToGameAck::release_pbinvite() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SApplyAddRelationToGameAck.pbinvite)
  
  ::KFMsg::PBRelation* temp = pbinvite_;
  pbinvite_ = NULL;
  return temp;
}
inline ::KFMsg::PBRelation* S2SApplyAddRelationToGameAck::mutable_pbinvite() {
  
  if (pbinvite_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRelation>(GetArenaNoVirtual());
    pbinvite_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SApplyAddRelationToGameAck.pbinvite)
  return pbinvite_;
}
inline void S2SApplyAddRelationToGameAck::set_allocated_pbinvite(::KFMsg::PBRelation* pbinvite) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pbinvite_;
  }
  if (pbinvite) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbinvite = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbinvite, submessage_arena);
    }
    
  } else {
    
  }
  pbinvite_ = pbinvite;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SApplyAddRelationToGameAck.pbinvite)
}

// -------------------------------------------------------------------

// S2SDelRelationInviteToRelationReq

// bytes relationname = 1;
inline void S2SDelRelationInviteToRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SDelRelationInviteToRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelRelationInviteToRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void S2SDelRelationInviteToRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelRelationInviteToRelationReq.relationname)
}
#if LANG_CXX11
inline void S2SDelRelationInviteToRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SDelRelationInviteToRelationReq.relationname)
}
#endif
inline void S2SDelRelationInviteToRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SDelRelationInviteToRelationReq.relationname)
}
inline void S2SDelRelationInviteToRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SDelRelationInviteToRelationReq.relationname)
}
inline ::std::string* S2SDelRelationInviteToRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SDelRelationInviteToRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SDelRelationInviteToRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SDelRelationInviteToRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SDelRelationInviteToRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SDelRelationInviteToRelationReq.relationname)
}

// bytes listname = 2;
inline void S2SDelRelationInviteToRelationReq::clear_listname() {
  listname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SDelRelationInviteToRelationReq::listname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelRelationInviteToRelationReq.listname)
  return listname_.GetNoArena();
}
inline void S2SDelRelationInviteToRelationReq::set_listname(const ::std::string& value) {
  
  listname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelRelationInviteToRelationReq.listname)
}
#if LANG_CXX11
inline void S2SDelRelationInviteToRelationReq::set_listname(::std::string&& value) {
  
  listname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SDelRelationInviteToRelationReq.listname)
}
#endif
inline void S2SDelRelationInviteToRelationReq::set_listname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  listname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SDelRelationInviteToRelationReq.listname)
}
inline void S2SDelRelationInviteToRelationReq::set_listname(const void* value, size_t size) {
  
  listname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SDelRelationInviteToRelationReq.listname)
}
inline ::std::string* S2SDelRelationInviteToRelationReq::mutable_listname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SDelRelationInviteToRelationReq.listname)
  return listname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SDelRelationInviteToRelationReq::release_listname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SDelRelationInviteToRelationReq.listname)
  
  return listname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SDelRelationInviteToRelationReq::set_allocated_listname(::std::string* listname) {
  if (listname != NULL) {
    
  } else {
    
  }
  listname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), listname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SDelRelationInviteToRelationReq.listname)
}

// uint64 selfplayerid = 3;
inline void S2SDelRelationInviteToRelationReq::clear_selfplayerid() {
  selfplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelRelationInviteToRelationReq::selfplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelRelationInviteToRelationReq.selfplayerid)
  return selfplayerid_;
}
inline void S2SDelRelationInviteToRelationReq::set_selfplayerid(::google::protobuf::uint64 value) {
  
  selfplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelRelationInviteToRelationReq.selfplayerid)
}

// uint64 targetplayerid = 4;
inline void S2SDelRelationInviteToRelationReq::clear_targetplayerid() {
  targetplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelRelationInviteToRelationReq::targetplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelRelationInviteToRelationReq.targetplayerid)
  return targetplayerid_;
}
inline void S2SDelRelationInviteToRelationReq::set_targetplayerid(::google::protobuf::uint64 value) {
  
  targetplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelRelationInviteToRelationReq.targetplayerid)
}

// -------------------------------------------------------------------

// S2SAddRelationToRelationReq

// bytes relationname = 1;
inline void S2SAddRelationToRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SAddRelationToRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddRelationToRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void S2SAddRelationToRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddRelationToRelationReq.relationname)
}
#if LANG_CXX11
inline void S2SAddRelationToRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SAddRelationToRelationReq.relationname)
}
#endif
inline void S2SAddRelationToRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SAddRelationToRelationReq.relationname)
}
inline void S2SAddRelationToRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SAddRelationToRelationReq.relationname)
}
inline ::std::string* S2SAddRelationToRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddRelationToRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SAddRelationToRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddRelationToRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SAddRelationToRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddRelationToRelationReq.relationname)
}

// uint64 playerid = 2;
inline void S2SAddRelationToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddRelationToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddRelationToRelationReq.playerid)
  return playerid_;
}
inline void S2SAddRelationToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddRelationToRelationReq.playerid)
}

// bytes playername = 3;
inline void S2SAddRelationToRelationReq::clear_playername() {
  playername_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SAddRelationToRelationReq::playername() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddRelationToRelationReq.playername)
  return playername_.GetNoArena();
}
inline void S2SAddRelationToRelationReq::set_playername(const ::std::string& value) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddRelationToRelationReq.playername)
}
#if LANG_CXX11
inline void S2SAddRelationToRelationReq::set_playername(::std::string&& value) {
  
  playername_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SAddRelationToRelationReq.playername)
}
#endif
inline void S2SAddRelationToRelationReq::set_playername(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SAddRelationToRelationReq.playername)
}
inline void S2SAddRelationToRelationReq::set_playername(const void* value, size_t size) {
  
  playername_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SAddRelationToRelationReq.playername)
}
inline ::std::string* S2SAddRelationToRelationReq::mutable_playername() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddRelationToRelationReq.playername)
  return playername_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SAddRelationToRelationReq::release_playername() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddRelationToRelationReq.playername)
  
  return playername_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SAddRelationToRelationReq::set_allocated_playername(::std::string* playername) {
  if (playername != NULL) {
    
  } else {
    
  }
  playername_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), playername);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddRelationToRelationReq.playername)
}

// -------------------------------------------------------------------

// S2SAddRelationToGameAck

// bytes relationname = 1;
inline void S2SAddRelationToGameAck::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SAddRelationToGameAck::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddRelationToGameAck.relationname)
  return relationname_.GetNoArena();
}
inline void S2SAddRelationToGameAck::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddRelationToGameAck.relationname)
}
#if LANG_CXX11
inline void S2SAddRelationToGameAck::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SAddRelationToGameAck.relationname)
}
#endif
inline void S2SAddRelationToGameAck::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SAddRelationToGameAck.relationname)
}
inline void S2SAddRelationToGameAck::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SAddRelationToGameAck.relationname)
}
inline ::std::string* S2SAddRelationToGameAck::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddRelationToGameAck.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SAddRelationToGameAck::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddRelationToGameAck.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SAddRelationToGameAck::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddRelationToGameAck.relationname)
}

// uint64 playerid = 2;
inline void S2SAddRelationToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SAddRelationToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddRelationToGameAck.playerid)
  return playerid_;
}
inline void S2SAddRelationToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SAddRelationToGameAck.playerid)
}

// .KFMsg.PBRelation pbrelation = 4;
inline bool S2SAddRelationToGameAck::has_pbrelation() const {
  return this != internal_default_instance() && pbrelation_ != NULL;
}
inline void S2SAddRelationToGameAck::clear_pbrelation() {
  if (GetArenaNoVirtual() == NULL && pbrelation_ != NULL) {
    delete pbrelation_;
  }
  pbrelation_ = NULL;
}
inline const ::KFMsg::PBRelation& S2SAddRelationToGameAck::_internal_pbrelation() const {
  return *pbrelation_;
}
inline const ::KFMsg::PBRelation& S2SAddRelationToGameAck::pbrelation() const {
  const ::KFMsg::PBRelation* p = pbrelation_;
  // @@protoc_insertion_point(field_get:KFMsg.S2SAddRelationToGameAck.pbrelation)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBRelation*>(
      &::KFMsg::_PBRelation_default_instance_);
}
inline ::KFMsg::PBRelation* S2SAddRelationToGameAck::release_pbrelation() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SAddRelationToGameAck.pbrelation)
  
  ::KFMsg::PBRelation* temp = pbrelation_;
  pbrelation_ = NULL;
  return temp;
}
inline ::KFMsg::PBRelation* S2SAddRelationToGameAck::mutable_pbrelation() {
  
  if (pbrelation_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBRelation>(GetArenaNoVirtual());
    pbrelation_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SAddRelationToGameAck.pbrelation)
  return pbrelation_;
}
inline void S2SAddRelationToGameAck::set_allocated_pbrelation(::KFMsg::PBRelation* pbrelation) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete pbrelation_;
  }
  if (pbrelation) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbrelation = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbrelation, submessage_arena);
    }
    
  } else {
    
  }
  pbrelation_ = pbrelation;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SAddRelationToGameAck.pbrelation)
}

// -------------------------------------------------------------------

// S2SDelRelationToRelationReq

// bytes relationname = 1;
inline void S2SDelRelationToRelationReq::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SDelRelationToRelationReq::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelRelationToRelationReq.relationname)
  return relationname_.GetNoArena();
}
inline void S2SDelRelationToRelationReq::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelRelationToRelationReq.relationname)
}
#if LANG_CXX11
inline void S2SDelRelationToRelationReq::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SDelRelationToRelationReq.relationname)
}
#endif
inline void S2SDelRelationToRelationReq::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SDelRelationToRelationReq.relationname)
}
inline void S2SDelRelationToRelationReq::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SDelRelationToRelationReq.relationname)
}
inline ::std::string* S2SDelRelationToRelationReq::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SDelRelationToRelationReq.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SDelRelationToRelationReq::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SDelRelationToRelationReq.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SDelRelationToRelationReq::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SDelRelationToRelationReq.relationname)
}

// uint64 playerid = 2;
inline void S2SDelRelationToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelRelationToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelRelationToRelationReq.playerid)
  return playerid_;
}
inline void S2SDelRelationToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelRelationToRelationReq.playerid)
}

// -------------------------------------------------------------------

// S2SDelRelationToGameAck

// bytes relationname = 1;
inline void S2SDelRelationToGameAck::clear_relationname() {
  relationname_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SDelRelationToGameAck::relationname() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelRelationToGameAck.relationname)
  return relationname_.GetNoArena();
}
inline void S2SDelRelationToGameAck::set_relationname(const ::std::string& value) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelRelationToGameAck.relationname)
}
#if LANG_CXX11
inline void S2SDelRelationToGameAck::set_relationname(::std::string&& value) {
  
  relationname_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SDelRelationToGameAck.relationname)
}
#endif
inline void S2SDelRelationToGameAck::set_relationname(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SDelRelationToGameAck.relationname)
}
inline void S2SDelRelationToGameAck::set_relationname(const void* value, size_t size) {
  
  relationname_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SDelRelationToGameAck.relationname)
}
inline ::std::string* S2SDelRelationToGameAck::mutable_relationname() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SDelRelationToGameAck.relationname)
  return relationname_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SDelRelationToGameAck::release_relationname() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SDelRelationToGameAck.relationname)
  
  return relationname_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SDelRelationToGameAck::set_allocated_relationname(::std::string* relationname) {
  if (relationname != NULL) {
    
  } else {
    
  }
  relationname_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), relationname);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SDelRelationToGameAck.relationname)
}

// uint64 playerid = 2;
inline void S2SDelRelationToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelRelationToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelRelationToGameAck.playerid)
  return playerid_;
}
inline void S2SDelRelationToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelRelationToGameAck.playerid)
}

// uint64 relationid = 3;
inline void S2SDelRelationToGameAck::clear_relationid() {
  relationid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SDelRelationToGameAck::relationid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SDelRelationToGameAck.relationid)
  return relationid_;
}
inline void S2SDelRelationToGameAck::set_relationid(::google::protobuf::uint64 value) {
  
  relationid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SDelRelationToGameAck.relationid)
}

// -------------------------------------------------------------------

// S2SUpdateFriendLinessToRelationReq

// uint32 type = 1;
inline void S2SUpdateFriendLinessToRelationReq::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateFriendLinessToRelationReq::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToRelationReq.type)
  return type_;
}
inline void S2SUpdateFriendLinessToRelationReq::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToRelationReq.type)
}

// uint64 selfplayerid = 2;
inline void S2SUpdateFriendLinessToRelationReq::clear_selfplayerid() {
  selfplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateFriendLinessToRelationReq::selfplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToRelationReq.selfplayerid)
  return selfplayerid_;
}
inline void S2SUpdateFriendLinessToRelationReq::set_selfplayerid(::google::protobuf::uint64 value) {
  
  selfplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToRelationReq.selfplayerid)
}

// uint64 targetplayerid = 3;
inline void S2SUpdateFriendLinessToRelationReq::clear_targetplayerid() {
  targetplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateFriendLinessToRelationReq::targetplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToRelationReq.targetplayerid)
  return targetplayerid_;
}
inline void S2SUpdateFriendLinessToRelationReq::set_targetplayerid(::google::protobuf::uint64 value) {
  
  targetplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToRelationReq.targetplayerid)
}

// uint32 friendliness = 4;
inline void S2SUpdateFriendLinessToRelationReq::clear_friendliness() {
  friendliness_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateFriendLinessToRelationReq::friendliness() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToRelationReq.friendliness)
  return friendliness_;
}
inline void S2SUpdateFriendLinessToRelationReq::set_friendliness(::google::protobuf::uint32 value) {
  
  friendliness_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToRelationReq.friendliness)
}

// -------------------------------------------------------------------

// S2SUpdateFriendLinessToGameAck

// uint64 playerid = 1;
inline void S2SUpdateFriendLinessToGameAck::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateFriendLinessToGameAck::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToGameAck.playerid)
  return playerid_;
}
inline void S2SUpdateFriendLinessToGameAck::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToGameAck.playerid)
}

// uint64 targetplayerid = 2;
inline void S2SUpdateFriendLinessToGameAck::clear_targetplayerid() {
  targetplayerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SUpdateFriendLinessToGameAck::targetplayerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToGameAck.targetplayerid)
  return targetplayerid_;
}
inline void S2SUpdateFriendLinessToGameAck::set_targetplayerid(::google::protobuf::uint64 value) {
  
  targetplayerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToGameAck.targetplayerid)
}

// uint32 friendliness = 3;
inline void S2SUpdateFriendLinessToGameAck::clear_friendliness() {
  friendliness_ = 0u;
}
inline ::google::protobuf::uint32 S2SUpdateFriendLinessToGameAck::friendliness() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SUpdateFriendLinessToGameAck.friendliness)
  return friendliness_;
}
inline void S2SUpdateFriendLinessToGameAck::set_friendliness(::google::protobuf::uint32 value) {
  
  friendliness_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SUpdateFriendLinessToGameAck.friendliness)
}

// -------------------------------------------------------------------

// S2SRefuseRelationToRelationReq

// bytes refusename = 1;
inline void S2SRefuseRelationToRelationReq::clear_refusename() {
  refusename_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2SRefuseRelationToRelationReq::refusename() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRefuseRelationToRelationReq.refusename)
  return refusename_.GetNoArena();
}
inline void S2SRefuseRelationToRelationReq::set_refusename(const ::std::string& value) {
  
  refusename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2SRefuseRelationToRelationReq.refusename)
}
#if LANG_CXX11
inline void S2SRefuseRelationToRelationReq::set_refusename(::std::string&& value) {
  
  refusename_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2SRefuseRelationToRelationReq.refusename)
}
#endif
inline void S2SRefuseRelationToRelationReq::set_refusename(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  refusename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2SRefuseRelationToRelationReq.refusename)
}
inline void S2SRefuseRelationToRelationReq::set_refusename(const void* value, size_t size) {
  
  refusename_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2SRefuseRelationToRelationReq.refusename)
}
inline ::std::string* S2SRefuseRelationToRelationReq::mutable_refusename() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2SRefuseRelationToRelationReq.refusename)
  return refusename_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2SRefuseRelationToRelationReq::release_refusename() {
  // @@protoc_insertion_point(field_release:KFMsg.S2SRefuseRelationToRelationReq.refusename)
  
  return refusename_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2SRefuseRelationToRelationReq::set_allocated_refusename(::std::string* refusename) {
  if (refusename != NULL) {
    
  } else {
    
  }
  refusename_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), refusename);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2SRefuseRelationToRelationReq.refusename)
}

// uint64 playerid = 2;
inline void S2SRefuseRelationToRelationReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRefuseRelationToRelationReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRefuseRelationToRelationReq.playerid)
  return playerid_;
}
inline void S2SRefuseRelationToRelationReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRefuseRelationToRelationReq.playerid)
}

// uint64 refusevalue = 3;
inline void S2SRefuseRelationToRelationReq::clear_refusevalue() {
  refusevalue_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2SRefuseRelationToRelationReq::refusevalue() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2SRefuseRelationToRelationReq.refusevalue)
  return refusevalue_;
}
inline void S2SRefuseRelationToRelationReq::set_refusevalue(::google::protobuf::uint64 value) {
  
  refusevalue_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2SRefuseRelationToRelationReq.refusevalue)
}

// -------------------------------------------------------------------

// S2STeamCreateToTeamReq

// uint32 id = 1;
inline void S2STeamCreateToTeamReq::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 S2STeamCreateToTeamReq::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamCreateToTeamReq.id)
  return id_;
}
inline void S2STeamCreateToTeamReq::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamCreateToTeamReq.id)
}

// bytes name = 2;
inline void S2STeamCreateToTeamReq::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STeamCreateToTeamReq::name() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamCreateToTeamReq.name)
  return name_.GetNoArena();
}
inline void S2STeamCreateToTeamReq::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamCreateToTeamReq.name)
}
#if LANG_CXX11
inline void S2STeamCreateToTeamReq::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STeamCreateToTeamReq.name)
}
#endif
inline void S2STeamCreateToTeamReq::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STeamCreateToTeamReq.name)
}
inline void S2STeamCreateToTeamReq::set_name(const void* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STeamCreateToTeamReq.name)
}
inline ::std::string* S2STeamCreateToTeamReq::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STeamCreateToTeamReq.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STeamCreateToTeamReq::release_name() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STeamCreateToTeamReq.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STeamCreateToTeamReq::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STeamCreateToTeamReq.name)
}

// bytes info = 3;
inline void S2STeamCreateToTeamReq::clear_info() {
  info_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& S2STeamCreateToTeamReq::info() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamCreateToTeamReq.info)
  return info_.GetNoArena();
}
inline void S2STeamCreateToTeamReq::set_info(const ::std::string& value) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamCreateToTeamReq.info)
}
#if LANG_CXX11
inline void S2STeamCreateToTeamReq::set_info(::std::string&& value) {
  
  info_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:KFMsg.S2STeamCreateToTeamReq.info)
}
#endif
inline void S2STeamCreateToTeamReq::set_info(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:KFMsg.S2STeamCreateToTeamReq.info)
}
inline void S2STeamCreateToTeamReq::set_info(const void* value, size_t size) {
  
  info_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:KFMsg.S2STeamCreateToTeamReq.info)
}
inline ::std::string* S2STeamCreateToTeamReq::mutable_info() {
  
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STeamCreateToTeamReq.info)
  return info_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* S2STeamCreateToTeamReq::release_info() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STeamCreateToTeamReq.info)
  
  return info_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void S2STeamCreateToTeamReq::set_allocated_info(::std::string* info) {
  if (info != NULL) {
    
  } else {
    
  }
  info_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), info);
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STeamCreateToTeamReq.info)
}

// .KFMsg.PBObject pbcaptain = 4;
inline bool S2STeamCreateToTeamReq::has_pbcaptain() const {
  return this != internal_default_instance() && pbcaptain_ != NULL;
}
inline const ::KFMsg::PBObject& S2STeamCreateToTeamReq::_internal_pbcaptain() const {
  return *pbcaptain_;
}
inline const ::KFMsg::PBObject& S2STeamCreateToTeamReq::pbcaptain() const {
  const ::KFMsg::PBObject* p = pbcaptain_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamCreateToTeamReq.pbcaptain)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2STeamCreateToTeamReq::release_pbcaptain() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STeamCreateToTeamReq.pbcaptain)
  
  ::KFMsg::PBObject* temp = pbcaptain_;
  pbcaptain_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2STeamCreateToTeamReq::mutable_pbcaptain() {
  
  if (pbcaptain_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbcaptain_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STeamCreateToTeamReq.pbcaptain)
  return pbcaptain_;
}
inline void S2STeamCreateToTeamReq::set_allocated_pbcaptain(::KFMsg::PBObject* pbcaptain) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbcaptain_);
  }
  if (pbcaptain) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbcaptain = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbcaptain, submessage_arena);
    }
    
  } else {
    
  }
  pbcaptain_ = pbcaptain;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STeamCreateToTeamReq.pbcaptain)
}

// -------------------------------------------------------------------

// S2STeamJoinToGameAck

// uint64 id = 1;
inline void S2STeamJoinToGameAck::clear_id() {
  id_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamJoinToGameAck::id() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamJoinToGameAck.id)
  return id_;
}
inline void S2STeamJoinToGameAck::set_id(::google::protobuf::uint64 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamJoinToGameAck.id)
}

// .KFMsg.PBObject pbteam = 2;
inline bool S2STeamJoinToGameAck::has_pbteam() const {
  return this != internal_default_instance() && pbteam_ != NULL;
}
inline const ::KFMsg::PBObject& S2STeamJoinToGameAck::_internal_pbteam() const {
  return *pbteam_;
}
inline const ::KFMsg::PBObject& S2STeamJoinToGameAck::pbteam() const {
  const ::KFMsg::PBObject* p = pbteam_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamJoinToGameAck.pbteam)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2STeamJoinToGameAck::release_pbteam() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STeamJoinToGameAck.pbteam)
  
  ::KFMsg::PBObject* temp = pbteam_;
  pbteam_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2STeamJoinToGameAck::mutable_pbteam() {
  
  if (pbteam_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbteam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STeamJoinToGameAck.pbteam)
  return pbteam_;
}
inline void S2STeamJoinToGameAck::set_allocated_pbteam(::KFMsg::PBObject* pbteam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbteam_);
  }
  if (pbteam) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbteam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbteam, submessage_arena);
    }
    
  } else {
    
  }
  pbteam_ = pbteam;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STeamJoinToGameAck.pbteam)
}

// -------------------------------------------------------------------

// S2STeamJoinFailedToTeamReq

// uint64 teamid = 1;
inline void S2STeamJoinFailedToTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamJoinFailedToTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamJoinFailedToTeamReq.teamid)
  return teamid_;
}
inline void S2STeamJoinFailedToTeamReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamJoinFailedToTeamReq.teamid)
}

// uint64 playerid = 2;
inline void S2STeamJoinFailedToTeamReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamJoinFailedToTeamReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamJoinFailedToTeamReq.playerid)
  return playerid_;
}
inline void S2STeamJoinFailedToTeamReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamJoinFailedToTeamReq.playerid)
}

// -------------------------------------------------------------------

// S2STeamOnlineQueryToTeamReq

// uint64 teamid = 1;
inline void S2STeamOnlineQueryToTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamOnlineQueryToTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamOnlineQueryToTeamReq.teamid)
  return teamid_;
}
inline void S2STeamOnlineQueryToTeamReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamOnlineQueryToTeamReq.teamid)
}

// uint64 playerid = 2;
inline void S2STeamOnlineQueryToTeamReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamOnlineQueryToTeamReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamOnlineQueryToTeamReq.playerid)
  return playerid_;
}
inline void S2STeamOnlineQueryToTeamReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamOnlineQueryToTeamReq.playerid)
}

// -------------------------------------------------------------------

// S2STeamOnlineQueryToGameAck

// .KFMsg.PBObject pbteam = 1;
inline bool S2STeamOnlineQueryToGameAck::has_pbteam() const {
  return this != internal_default_instance() && pbteam_ != NULL;
}
inline const ::KFMsg::PBObject& S2STeamOnlineQueryToGameAck::_internal_pbteam() const {
  return *pbteam_;
}
inline const ::KFMsg::PBObject& S2STeamOnlineQueryToGameAck::pbteam() const {
  const ::KFMsg::PBObject* p = pbteam_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamOnlineQueryToGameAck.pbteam)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2STeamOnlineQueryToGameAck::release_pbteam() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STeamOnlineQueryToGameAck.pbteam)
  
  ::KFMsg::PBObject* temp = pbteam_;
  pbteam_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2STeamOnlineQueryToGameAck::mutable_pbteam() {
  
  if (pbteam_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbteam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STeamOnlineQueryToGameAck.pbteam)
  return pbteam_;
}
inline void S2STeamOnlineQueryToGameAck::set_allocated_pbteam(::KFMsg::PBObject* pbteam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbteam_);
  }
  if (pbteam) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbteam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbteam, submessage_arena);
    }
    
  } else {
    
  }
  pbteam_ = pbteam;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STeamOnlineQueryToGameAck.pbteam)
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2STeamIntValueToTeamReq

// uint64 teamid = 1;
inline void S2STeamIntValueToTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamIntValueToTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamIntValueToTeamReq.teamid)
  return teamid_;
}
inline void S2STeamIntValueToTeamReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamIntValueToTeamReq.teamid)
}

// uint64 playerid = 2;
inline void S2STeamIntValueToTeamReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamIntValueToTeamReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamIntValueToTeamReq.playerid)
  return playerid_;
}
inline void S2STeamIntValueToTeamReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamIntValueToTeamReq.playerid)
}

// map<string, uint64> pbdata = 3;
inline int S2STeamIntValueToTeamReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2STeamIntValueToTeamReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
S2STeamIntValueToTeamReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2STeamIntValueToTeamReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
S2STeamIntValueToTeamReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2STeamIntValueToTeamReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2STeamStrValueToTeamReq

// uint64 teamid = 1;
inline void S2STeamStrValueToTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamStrValueToTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamStrValueToTeamReq.teamid)
  return teamid_;
}
inline void S2STeamStrValueToTeamReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamStrValueToTeamReq.teamid)
}

// uint64 playerid = 2;
inline void S2STeamStrValueToTeamReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamStrValueToTeamReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamStrValueToTeamReq.playerid)
  return playerid_;
}
inline void S2STeamStrValueToTeamReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamStrValueToTeamReq.playerid)
}

// map<string, bytes> pbdata = 3;
inline int S2STeamStrValueToTeamReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2STeamStrValueToTeamReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2STeamStrValueToTeamReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2STeamStrValueToTeamReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2STeamStrValueToTeamReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2STeamStrValueToTeamReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2STeamMemberIntValueToTeamReq

// uint64 teamid = 1;
inline void S2STeamMemberIntValueToTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamMemberIntValueToTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamMemberIntValueToTeamReq.teamid)
  return teamid_;
}
inline void S2STeamMemberIntValueToTeamReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamMemberIntValueToTeamReq.teamid)
}

// uint64 playerid = 2;
inline void S2STeamMemberIntValueToTeamReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamMemberIntValueToTeamReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamMemberIntValueToTeamReq.playerid)
  return playerid_;
}
inline void S2STeamMemberIntValueToTeamReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamMemberIntValueToTeamReq.playerid)
}

// map<string, uint64> pbdata = 3;
inline int S2STeamMemberIntValueToTeamReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2STeamMemberIntValueToTeamReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >&
S2STeamMemberIntValueToTeamReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2STeamMemberIntValueToTeamReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::google::protobuf::uint64 >*
S2STeamMemberIntValueToTeamReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2STeamMemberIntValueToTeamReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// S2STeamMemberStrValueToTeamReq

// uint64 teamid = 1;
inline void S2STeamMemberStrValueToTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamMemberStrValueToTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamMemberStrValueToTeamReq.teamid)
  return teamid_;
}
inline void S2STeamMemberStrValueToTeamReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamMemberStrValueToTeamReq.teamid)
}

// uint64 playerid = 2;
inline void S2STeamMemberStrValueToTeamReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamMemberStrValueToTeamReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamMemberStrValueToTeamReq.playerid)
  return playerid_;
}
inline void S2STeamMemberStrValueToTeamReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamMemberStrValueToTeamReq.playerid)
}

// map<string, bytes> pbdata = 3;
inline int S2STeamMemberStrValueToTeamReq::pbdata_size() const {
  return pbdata_.size();
}
inline void S2STeamMemberStrValueToTeamReq::clear_pbdata() {
  pbdata_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::std::string >&
S2STeamMemberStrValueToTeamReq::pbdata() const {
  // @@protoc_insertion_point(field_map:KFMsg.S2STeamMemberStrValueToTeamReq.pbdata)
  return pbdata_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::std::string >*
S2STeamMemberStrValueToTeamReq::mutable_pbdata() {
  // @@protoc_insertion_point(field_mutable_map:KFMsg.S2STeamMemberStrValueToTeamReq.pbdata)
  return pbdata_.MutableMap();
}

// -------------------------------------------------------------------

// S2STeamLeaveToTeamReq

// uint64 teamid = 1;
inline void S2STeamLeaveToTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamLeaveToTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamLeaveToTeamReq.teamid)
  return teamid_;
}
inline void S2STeamLeaveToTeamReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamLeaveToTeamReq.teamid)
}

// uint64 playerid = 2;
inline void S2STeamLeaveToTeamReq::clear_playerid() {
  playerid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamLeaveToTeamReq::playerid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamLeaveToTeamReq.playerid)
  return playerid_;
}
inline void S2STeamLeaveToTeamReq::set_playerid(::google::protobuf::uint64 value) {
  
  playerid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamLeaveToTeamReq.playerid)
}

// -------------------------------------------------------------------

// S2STeamKickToTeamReq

// uint64 teamid = 1;
inline void S2STeamKickToTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamKickToTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamKickToTeamReq.teamid)
  return teamid_;
}
inline void S2STeamKickToTeamReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamKickToTeamReq.teamid)
}

// uint64 captainid = 2;
inline void S2STeamKickToTeamReq::clear_captainid() {
  captainid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamKickToTeamReq::captainid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamKickToTeamReq.captainid)
  return captainid_;
}
inline void S2STeamKickToTeamReq::set_captainid(::google::protobuf::uint64 value) {
  
  captainid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamKickToTeamReq.captainid)
}

// uint64 memberid = 3;
inline void S2STeamKickToTeamReq::clear_memberid() {
  memberid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamKickToTeamReq::memberid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamKickToTeamReq.memberid)
  return memberid_;
}
inline void S2STeamKickToTeamReq::set_memberid(::google::protobuf::uint64 value) {
  
  memberid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamKickToTeamReq.memberid)
}

// -------------------------------------------------------------------

// S2STeamLeaveToGameAck

// uint64 teamid = 1;
inline void S2STeamLeaveToGameAck::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamLeaveToGameAck::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamLeaveToGameAck.teamid)
  return teamid_;
}
inline void S2STeamLeaveToGameAck::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamLeaveToGameAck.teamid)
}

// uint32 type = 2;
inline void S2STeamLeaveToGameAck::clear_type() {
  type_ = 0u;
}
inline ::google::protobuf::uint32 S2STeamLeaveToGameAck::type() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamLeaveToGameAck.type)
  return type_;
}
inline void S2STeamLeaveToGameAck::set_type(::google::protobuf::uint32 value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamLeaveToGameAck.type)
}

// -------------------------------------------------------------------

// S2STeamTellInviteToGameAck

// .KFMsg.PBObject pbplayer = 1;
inline bool S2STeamTellInviteToGameAck::has_pbplayer() const {
  return this != internal_default_instance() && pbplayer_ != NULL;
}
inline const ::KFMsg::PBObject& S2STeamTellInviteToGameAck::_internal_pbplayer() const {
  return *pbplayer_;
}
inline const ::KFMsg::PBObject& S2STeamTellInviteToGameAck::pbplayer() const {
  const ::KFMsg::PBObject* p = pbplayer_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamTellInviteToGameAck.pbplayer)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2STeamTellInviteToGameAck::release_pbplayer() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STeamTellInviteToGameAck.pbplayer)
  
  ::KFMsg::PBObject* temp = pbplayer_;
  pbplayer_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2STeamTellInviteToGameAck::mutable_pbplayer() {
  
  if (pbplayer_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbplayer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STeamTellInviteToGameAck.pbplayer)
  return pbplayer_;
}
inline void S2STeamTellInviteToGameAck::set_allocated_pbplayer(::KFMsg::PBObject* pbplayer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbplayer_);
  }
  if (pbplayer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbplayer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbplayer, submessage_arena);
    }
    
  } else {
    
  }
  pbplayer_ = pbplayer;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STeamTellInviteToGameAck.pbplayer)
}

// .KFMsg.PBObject pbteam = 2;
inline bool S2STeamTellInviteToGameAck::has_pbteam() const {
  return this != internal_default_instance() && pbteam_ != NULL;
}
inline const ::KFMsg::PBObject& S2STeamTellInviteToGameAck::_internal_pbteam() const {
  return *pbteam_;
}
inline const ::KFMsg::PBObject& S2STeamTellInviteToGameAck::pbteam() const {
  const ::KFMsg::PBObject* p = pbteam_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamTellInviteToGameAck.pbteam)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2STeamTellInviteToGameAck::release_pbteam() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STeamTellInviteToGameAck.pbteam)
  
  ::KFMsg::PBObject* temp = pbteam_;
  pbteam_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2STeamTellInviteToGameAck::mutable_pbteam() {
  
  if (pbteam_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbteam_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STeamTellInviteToGameAck.pbteam)
  return pbteam_;
}
inline void S2STeamTellInviteToGameAck::set_allocated_pbteam(::KFMsg::PBObject* pbteam) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbteam_);
  }
  if (pbteam) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbteam = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbteam, submessage_arena);
    }
    
  } else {
    
  }
  pbteam_ = pbteam;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STeamTellInviteToGameAck.pbteam)
}

// -------------------------------------------------------------------

// S2STeamTellApplyToGameAck

// .KFMsg.PBObject pbplayer = 1;
inline bool S2STeamTellApplyToGameAck::has_pbplayer() const {
  return this != internal_default_instance() && pbplayer_ != NULL;
}
inline const ::KFMsg::PBObject& S2STeamTellApplyToGameAck::_internal_pbplayer() const {
  return *pbplayer_;
}
inline const ::KFMsg::PBObject& S2STeamTellApplyToGameAck::pbplayer() const {
  const ::KFMsg::PBObject* p = pbplayer_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamTellApplyToGameAck.pbplayer)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2STeamTellApplyToGameAck::release_pbplayer() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STeamTellApplyToGameAck.pbplayer)
  
  ::KFMsg::PBObject* temp = pbplayer_;
  pbplayer_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2STeamTellApplyToGameAck::mutable_pbplayer() {
  
  if (pbplayer_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbplayer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STeamTellApplyToGameAck.pbplayer)
  return pbplayer_;
}
inline void S2STeamTellApplyToGameAck::set_allocated_pbplayer(::KFMsg::PBObject* pbplayer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbplayer_);
  }
  if (pbplayer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbplayer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbplayer, submessage_arena);
    }
    
  } else {
    
  }
  pbplayer_ = pbplayer;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STeamTellApplyToGameAck.pbplayer)
}

// -------------------------------------------------------------------

// S2STeamAgreeToTeamReq

// uint64 teamid = 1;
inline void S2STeamAgreeToTeamReq::clear_teamid() {
  teamid_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 S2STeamAgreeToTeamReq::teamid() const {
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamAgreeToTeamReq.teamid)
  return teamid_;
}
inline void S2STeamAgreeToTeamReq::set_teamid(::google::protobuf::uint64 value) {
  
  teamid_ = value;
  // @@protoc_insertion_point(field_set:KFMsg.S2STeamAgreeToTeamReq.teamid)
}

// .KFMsg.PBObject pbplayer = 2;
inline bool S2STeamAgreeToTeamReq::has_pbplayer() const {
  return this != internal_default_instance() && pbplayer_ != NULL;
}
inline const ::KFMsg::PBObject& S2STeamAgreeToTeamReq::_internal_pbplayer() const {
  return *pbplayer_;
}
inline const ::KFMsg::PBObject& S2STeamAgreeToTeamReq::pbplayer() const {
  const ::KFMsg::PBObject* p = pbplayer_;
  // @@protoc_insertion_point(field_get:KFMsg.S2STeamAgreeToTeamReq.pbplayer)
  return p != NULL ? *p : *reinterpret_cast<const ::KFMsg::PBObject*>(
      &::KFMsg::_PBObject_default_instance_);
}
inline ::KFMsg::PBObject* S2STeamAgreeToTeamReq::release_pbplayer() {
  // @@protoc_insertion_point(field_release:KFMsg.S2STeamAgreeToTeamReq.pbplayer)
  
  ::KFMsg::PBObject* temp = pbplayer_;
  pbplayer_ = NULL;
  return temp;
}
inline ::KFMsg::PBObject* S2STeamAgreeToTeamReq::mutable_pbplayer() {
  
  if (pbplayer_ == NULL) {
    auto* p = CreateMaybeMessage<::KFMsg::PBObject>(GetArenaNoVirtual());
    pbplayer_ = p;
  }
  // @@protoc_insertion_point(field_mutable:KFMsg.S2STeamAgreeToTeamReq.pbplayer)
  return pbplayer_;
}
inline void S2STeamAgreeToTeamReq::set_allocated_pbplayer(::KFMsg::PBObject* pbplayer) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete reinterpret_cast< ::google::protobuf::MessageLite*>(pbplayer_);
  }
  if (pbplayer) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      pbplayer = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, pbplayer, submessage_arena);
    }
    
  } else {
    
  }
  pbplayer_ = pbplayer;
  // @@protoc_insertion_point(field_set_allocated:KFMsg.S2STeamAgreeToTeamReq.pbplayer)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace KFMsg

namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::KFMsg::FrameServerProtocol> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::KFMsg::FrameServerProtocol>() {
  return ::KFMsg::FrameServerProtocol_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)


#ifdef _MSC_VER
	#pragma warning(  pop  )
#endif
#endif  // PROTOBUF_INCLUDED_FrameServerMessage_2eproto
